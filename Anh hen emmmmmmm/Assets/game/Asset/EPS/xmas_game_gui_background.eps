%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: xmas_game_gui_background.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: ABCDetective
%%CreationDate: 12/24/2018
%%BoundingBox: 0 0 2146 1270
%%HiResBoundingBox: 0 0 2146 1270
%%CropBox: 0 0 2146 1270
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 20458 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C458B8B8B858B858B858B858B858B858B858B858B858B858B858B858B
%858B858B858B618B618B618B616136613661366136613661366136613661
%36613661366136613D613D613D613D613D61366136613661366136613661
%3661366136613661366136613661363D3661618B618B858B858B858B858B
%858B858B858B858B858B85608B858B858B858B858B858B858B858B858B85
%8B858B858B858B858B618B6161618B6161618B61856061363C363D363C36
%3D363C363D363C363D363C363D363C363D3D3D37613D3D3D61363C363D36
%3C363D363C363D363C363D363C363D363C363D363C368B8436363D618561
%8B858B858B858B858B858B858B858B858B858B8B858B858B858B858B858B
%858B858B858B858B858B858B858B858B858B618B618B618B618B618B618B
%3C61363D3661363D3661363D3661363D3661363D3661363D36613D613D61
%3D613D61363D3661363D3661363D3661363D3661363D3661363D3661363D
%85AF363D368B618B858B858B858B858B858B858B858B858B858B85608B84
%8B858B848B858B848B858B848B858B848B858B608B618560616161606185
%AF60616161608B613D363D363C363D363C363D363C363D363C363D363C36
%3D363C363D363D363D373D363D3636363D363C363D363C363D363C363D36
%3C363D363C363D363C363D36FD04618B848B858B848B858B848B858B848B
%858B848B8B858B858B858B858B858B858B858B858B858B85AFAFAF618B61
%8B618B61613C613C8B618B618B6167366136613661366136613661366136
%6136613661366136613661366136613D6136613661366136613661366136
%61366136613661366136613661363D6061363D618B618B618B858B858B85
%8B858B858B858B858B858B85618B858B858B858B858B858B858B858B858B
%6167A9FF85676185618B613D363D36363661618B6161363C363D363C363D
%363C363D363C363D363C363D363C363D363C363D363D3D613D3D36613D3D
%363D363C363D363C363D363C363D363C363D363C363D363C363D3661618B
%6161618B618B858B858B858B858B858B858B85FD048B858B858B858B858B
%858B858B858B618B618B858B618B61613C61363D3661363D366161613661
%363D3661363D3661363D3661363D3661363D3661363D3661363D36613661
%3D6136613D613D613661363D3661363D3661363D3661363D3661363D3661
%363D3661366161AFFF8B618B858B858B858B858B858B858B858B85608B85
%8B848B61616085618B848B858B6061616160616161363C3636363D363C36
%3D3636363C3636363D363C363D363C363D363C363D363C363D363C363D36
%3C363D363C363D363D36613D3D36613D3D363D363C363D363C363D363C36
%3D363C363D363C363D363C363D363D84FF8561608B858B848B858B848B85
%8B848B85FD048B85AF858B618B618B618B858B618B618B3C6161613C6136
%613661366136613661366136613661366136613661366136613661366136
%6136613661366136613661366136613D613D613D613D613D613661366136
%61366136613661366136613661366136613661366136613D67618B858B85
%8B858B858B858B858B858B85608B858B858B6161618B6161618B6161618B
%3C36363D3636363D363C363D363C363D363C363D363C363D363C363D363C
%363D363C363D363C363D363C363D363C363D363C36613D3D37613D3D3761
%3D3D363D363C363D363C363D363C363D363C363D363C363D363C363D363C
%363D6161618B858B858B858B858B858B858B858B8B858B858B618B616160
%8B618B618B618B3C61363D3661363D3661363D3661363D3661363D366136
%3D3661363D3661363D3661363D3661363D3661363D3661363D36613D613D
%613D613D613D613D613D613661363D3661363D3661363D3661363D366136
%3D363D363D366136613D67618B618B858B858B858B858B858B858B85608B
%608B616160613636368B616160613636363D363C363D363C363D363C363D
%363C363D363C363D363C363D363C363D363C363D363C363D363C363D363C
%363D363C363D363D36613D3D36613D3D36613D3C363D363C363D363C363D
%363C363D363C363D363C5A3D363C363D373D36616161608B858B848B858B
%6085618560858B618B618B618B613D3661618B6161366136618561366136
%613661366136613661366136613661366136613661366136613661366136
%61366136613661366136613661366136613D613D613D613D613D61366136
%6136613661366136613661366136613661368B3661366136613D613D6761
%8B618B858B858B618B618B618BFD04618B61613C3D363C36613C3D363D36
%3C3661363C363D363C363D363C363D363C363D363C363D363C363D363C36
%3D363C363D363C363D363C363D363C363D363C363D363D3D613D3D37613D
%3D3761363C363D363C363D363C363D363C363D363C363D363C363D363C36
%3D363D37FD04618B858B858B8561618B6161618B67618B61673D3D366136
%3D363D363D366136613661363D3661363D3661363D3661363D3661363D36
%61363D3661363D3661363D3661363D3661363D3661363D3661363D36613D
%613D613D613D613D613D61363D3661363D3661363D3661363D3661363D36
%61363D3661363D36613D61618B618B618B858B858B618B61613C61363C8B
%613D363D363D363D363C363D363C363D363C363D363C363D363C363D363C
%363D363C363D363C363D363C363D363C363D363C363D363C363D363C363D
%363C363D363C363D3D3D36613D3D36613D3D363D363C363D363C363D363C
%363D363C363D363C363D363C363D363C36613D6160616185848B858B848B
%6161603D363C67618B3D613D613D613D6136613661366160613661366136
%613661366136613661366136613661366136613661366136613661366136
%6136613661366136613661366136613D613D613D613D613D613D61366136
%613661366136613661366136613661366136613661366136613D613D8B61
%8B618B858B85AF858B618B3661363C8B61613661363D3661363D363D3636
%60FFA93C363D363C363D363C363D363C363D363C363D363C363D363C363D
%363C363D363C363D363C363D363C363D363C363D363C363D3D3D37613D3D
%37613D3D363D363C363D363C363D363C363D363C363D363C363D363C363D
%363C36613D3D3D676161618B858B858B6161613D363D61618B3D613C613D
%613C613D6136613661AF8B363D3661363D3661363D3661363D3661363D36
%61363D3661363D3661363D3661363D3661363D3661363D3661363D366136
%3D36613D613D613D613D61363D3661363D3661363D3661363D3661363D36
%61363D3661363D3661363D36613D61618B618B858B858B618B6161366136
%6185363D363D363D363D363D363D363D3636363D363C363D363C363D363C
%363D363C363D363C363D363C363D363C363D363C363D363C363D363C363D
%363C363D363C363D363D36613D3D36613D3D363D363C363D363C363D363C
%363D363C363D363C363D363C363D363C363D363636613D616061618B848B
%616160613636363D6161613D613D613D613D613D613D613D613C61366136
%613661366136613661366136613661366136613661366136613661366136
%613661366136613661366136613661366136613D613D613D613D61366136
%61366136613661366136613661366136613661366136613661366136613D
%61618B618B858B858B618B3D3D3661363D3D3661363D3661363D363D363D
%3661363D3661363C363D363C363D363C363D363C363D363C363D363C363D
%363C363D363C363D363C363D363C363D363C363D363C363D363D3661363D
%3661363D363D363C363D363C363D363C363D363C363D363C363D363C363D
%363C363D363C36613D61618B6161618B6185603D363C363D613D613D613D
%613DFD05613D613C613D613D613D613661363D3661363D3661363D366136
%3D3661363D3661363D3661363D3661363D3661363D3661363D3661363D36
%61363D3661363D3661363D3661363D3661363D3661363D3661363D366136
%3D3661363D3661363D3661363D36613D61618B618B618B61613661363D36
%36613D3D363D3C61608B61616061363D363D363D363D363D363D3636363D
%363C363D363C363D363C363D363C363D363C363D363C363D363C363D363C
%363D363C363D363C363D363C363D363C363D3636363D363C363D363C363D
%363C363D3636363D363C363D363C363D363C363D3636363C366160676161
%6061363C363D363C613D613D613D8B618B618B618B61613D613D613D613D
%613D613D6136613661366136613661366136613661366136613661366136
%613661366136613661366136613661366136613661366136613C6136613D
%613D613D613D613D613C613D613661366136613661366136613661366136
%61366136613C6136613661366136613637613D3D37FD04618B6161618B61
%3D3661363D3661363D36613C3D363D363C363D363C363D363C363D363C36
%3D363C363D363C363D363C363D363C363D363C363D363C363D363D366136
%3D36613C3D3661363D3661363D3661363D36613C3D3661363D363D363C36
%3D363C363D363C363D363C363D363C363D363C363D363D613D613D61618B
%618B858B858B618B3D613C613D613C613D613C613D613D61363D3661363D
%3661363D3661363D3661363D3661363D3661363D3661363D3661363D3661
%366136613D613D613D613C613D613C613D613C613D613C613D613C613D61
%3D613D613661363D3661363D3661363D3661363D3661363D3661363D3661
%363D3D36616161608B858B848B61616061363D363D363D363D363D363D36
%3D363D363C363D3636363D363C363D363C363D363C363D363C363D363C36
%3D363C363D363D363D363D363D363D363D363D363D363D363D363D363D36
%3D363D363D363D363D363D363D363C363DA8FF3636363D363C363D363C36
%61363C363D3636363D613D61618B618B858B858B858B618B3D613D613D61
%3D613D613D613D613D61366136613D6136613C6136613661366136613661
%36613661366136613D613D613D613D613D613D613D613D613D613D613D61
%3D613D613D613D613D613D613D613D613D613D613D6136613D8B85613661
%366136613661618B618B616136613661363D3D37FD04618B858B858B6161
%61673D3D3661363D3661363D3661363D363D363C3661363D3661363D3661
%363D363D363D363D363D3661363D3661363D3661363D3661363D3661363D
%3661363D3661363D3661363D3661363D3661363D3661363D3661363D3661
%363D363D363D3661363D363D6185618B6185606161616061613D61618B61
%8B858B858B858B618B61673D613D613D613C613D613C613D61366136613D
%613D613C613D613D613D613D613D613D613D613D613D613C613D613C613D
%613C613D613C613D613C613D613C613D613C613D613C613D613C613D613C
%613D613C613C613D613D613C613D3D3D613D613C8B618B618B618B618B61
%8B61363D376160856185848B858B848B616160613D3D3661363D363D363D
%363D363D363D363D363D363D363D363D363D363D363D363D363D363D363D
%363D363D363D363D363D363D363D363D363D363D363D363D363D363D363D
%363D363D363D363D363D363D363D363D363D363D36618561363D36616061
%618B60616161608B6161676167618B618B618B858B858B618B61673D613D
%613D613D613C6185FF613D3D613D613D613D613D613D613D613D613D613D
%613D613D613D613D613D613D613D613D613D613D613D613D613D613D613D
%613D613D613D613D613D613D613D613D613D613D613D613D613D613D613D
%8B3D613D613C8B618B61AF858B858B858B85618B6161618B618B858B858B
%618B61613D613D3D37613D3D363D3DFFFFAF363D3661363D3661363D3661
%363D3661363D3661363D3661363D3661363D3661363D3661363D3661363D
%3661363D36613D3D36613D3D36613D3D37613D3D36613D3D3661363D3661
%3D3D3661363D373D363D3661363D3C8B6161618B858B858B858B61618B61
%8B618B858B858B858B618B61673D613D613D613D613D6161AF3D3D3D613C
%613D613C613D613C613D613C613D613C613D613C613D613C613D613C613D
%613D61363D366136613D613D613D613D613D613D613D613D613D613D613D
%613D613D613D613C613D613C613D61858B3D613C613D61618B618B858B85
%8B858B85618B608B6185608B858B848B85616061616136613D3D363D363D
%363D3761603D363D363D363D363D363D363D363D363D363D363D363D363D
%363D3661363D363D363D363D363C363D363D37613D3D36613D3D36613D3D
%36613D3D36613D3D37613D3D36613D3D3661363D363D3DFFA83D363D3661
%61616061858B848B858B848B8B858B8B8B858B858B858B858B858B618B61
%613D613D6136613D613D6161AF3D613D613D613D613D613D613D613D613D
%613D613D613D613D613D613D613D613D61366136613661366136613D613D
%613D613D613D613D613D613D613D613D613D613D613D613D613D613D613D
%6161613D613D67618B618B858B858B858B85AF85618B858B858B858B858B
%858B858B858B61613D613D3D363D363D3D61363D37613D3D3D613D3D3761
%363D3661363D3661363D3661363D36613D3D36613D3D37613D3C363D363C
%363D363C36613D3D37613D3D37613D3D37613D3D37613D3D363D3D3D3761
%3D3D3761363D3D613D3D36613661618B6185858B858B858B858B85FD048B
%858B858B858B858B858B858B618B61613D613D6136613D6185613D613D61
%3D613D613D613D613D613D613D613D613D613D613D613D613D613D613D61
%3D61363D3661363D366136613D613D613D613D613D613D613D613D613D61
%3D3D36613D613D613D613D613D613D613D613661618B618B858B858B858B
%858B858B61608B858B848B858B848B858B848B8561606161616061373C36
%3D366136613D3D36613D3D36613D3D36613D3D36613D3D36613D3D36613D
%3D36613D3D36613D3D363D363C363D363C363D373D3661363D36613D3D36
%613D3D36613D3D36613D3D36613D3D36613D3D36613D6160613636366161
%61608B858B848B858B848B85858B8B8B858B858B858B858B858B858B618B
%618B618B6161366136613D613D613D613D613D613D613D613D613D613D61
%3D613D613D613D613D613D613D613D613D613D613661366136613D613D61
%3D6136613D613D613D613D613D613D613D613D613D613D613D613D613D61
%618B61673661618B618B8B8B858B858B858B858B61618B858B858B858B85
%8B858B858B858B61676161618B613D363D363D37613D3D37613D3D37613D
%3D37613D3D37613D3D37613D3D373D3D3D37613D3D3D613D3D3D61363C36
%3D363C363D3D3D37613D3D37613D3D37613D3D37613D3D3761363D37613D
%3D37613D3D373D3D616167616160676161618B858B858B858B858B85858B
%858B858B858B858B858B858B858B858B858B858B618B363D36613D613D61
%3D613D613D613D613D613D613D613D613D613D61618561613D613D613D61
%3D613D613D613D6136613C3D36613D613D613D613D613D613D613D613D61
%3D613D613D613D613D613D613D613DAFA8AF618B618B618B618B858B858B
%858B858B858B61618B848B858B848B858B848B858B848B858B848B616160
%3D363636613D3D36613D3D36613D3D363C363D36613D3D3661376184FFA8
%A884613D3D3661363D36613D3D36613D3D363D363D37613D3D363D3D3D36
%613D3D36613D3D36613D3D37613D3D36613D3D363D3CAFFFFFA8A1606761
%61608B858B848B858B848B858B848B8B858B858B858B858B858B858B858B
%858B858B618B6161366136613D613D613D613D613D613D613D613D613D61
%3D613D61A8FD05FFA8613D613D613D613D613D613D613D6136613D613D61
%36613D613D613D613D613D613D613D6136613D613D613D613D61368BCACA
%C3BC8CA18B8B858B8B8B858B858B858B858B85AF85618B858B858B858B85
%8B858B858B858B858B858B61613C3D363C363D363D3D613D3D37613D3D3D
%61363D37613D3D373D61CA9AB69AC3A1A1603D37613D3D37613D3D37613D
%3D363D363D363D363C36613D3D37613D3D37613D3D3761373C36613D3D37
%613D3D376185CA93C39AB568A28B8B858B858B858B858B858B858B85FD04
%8B858B858B858B858B858B858B858B858B618B618B3C61363D36613D613D
%613D613D613D613D613D613D613D613D8BCABCB5A894B5687E3D613D613D
%613D613D613D613D3D3661363D3661363D36613D613D613D6136613D613D
%613D613D6161613D6161613D8BCAC393CABCBDA1AF858B858B858B858B85
%8B858B858B85608B858B848B858B848B858B848B858B848B85A8A8FF8461
%3636363D373D373D363D373D36613D3D36613D3D36613D3D60CABCB55A9B
%B58C523D3D3D36613D3D36613D3D37613636363D363C363D363C36613D3D
%36613D3D36613D3D36613D3D3685613D608B6161618BA8C3A8AFFFAF848B
%858B848B858B848B858B848B85FD048B858B858B858B858B858B858B858B
%8BCBC3C3CAFF85613D613667858B618B61613D613D613D613D613D613D61
%3D67CAC3B5849BB568773D613D613D613D613D613D613C61366136613661
%366136613D613D613D613D613D613D613D613D613D3D618B618B618B61AF
%AFFFFFAF858B858B858B858B858B858B858B858B85618B858B858B858B85
%8B858B858B858B85AFC3BC93C3FFA9618B616160FF8561618B61613D613D
%3D37613D3D37613D3D36AFA8CA84A2948D6F613D3D37613D3D37613D3D36
%3D363C363D363C363D363C363D3D3D37613D3D37613D3D37613D3D37FD04
%618B6161618B85AFA8FF848B858B858B858B858B858B858B858B858B6785
%8B8B8B858B8B8B858B858B858B8BAFAECABCA8B5CAA88B618B618B858B61
%8B618B61613D613D613D613D613D613D61A8FFFFAF85FFA8A83D613D613D
%613D613D613D613661363D3661363D36613661608585673D613D613D613D
%613D613D3DA9FF618B618B858B858B8BFFA1BC858B858B858B858B858B85
%8B8B8B858B6760A87EA87E847E856061618B618B84AFA8FFAFA894936885
%616160616161608B85856085616136613D3D3661363D373D36AFA8FF858B
%AFAF843D373D363D36613D3D36613D3D363D363C363D363C3661A8FFA8A1
%6F7E3D3D373D3661373D3661618560616185848B858B848BA8CA93BC858B
%618B858B618B85857EA8A1A1A1A2A8C3CAC3CAC3CAC3C4A1A87E8561FFC3
%FFFFFFCAB568A18B8B858B618B618B8B8B858B618B61613D613D613D6136
%613D6184FFFFFF3D613D613D61366136613D613D613D613D613661366136
%613661AFFFFFCAB593689A5A613D613C613D61618B618B618B858B858B85
%8B858BA8CABCAF85AF84A8A1A2A1C39ABCB5BCB5BC947ECAC3CAC3CAA1CA
%C3CAC3C3C3CAC3BCBC8560FF6F778B8B85AF858B858B858B858B618B6161
%36613D3D3D61363C37613684C3CAA861373D363D3D3D363D37613D3D3761
%3D3D363D363C363D36365AFFFFC394B6B5B5689A843D363D363D3D8B6161
%618B858B858B858B858B618BA8FFFFA89ABC94B593B6B5B593B6B5B5939A
%A9C3CAC3CACACAC3CACACAC3FFA8BCB5C3A1A1A8A83D6161AFAF8B858B85
%8B858B858B618B853D36613D6136613661363D84CA93BC616136613D6136
%613D613D613D613D613D3D3661363D36613685FFC3B5A85ABCB5C3A8AF61
%6136616167618B618B858B858B858B8BAFAFA9A1CAA8FFFFC394BCBCBCB5
%BCB5BCB5BCB6BC9A7ECAC3CAA1CAC3CAA1C4A1CAA8FF9BC3A1CAC3C3A1A1
%595A3661618B848B858B848B6161848B363D363D3D3D363D363D1484C3BC
%93613636363D3636363D3D3D36613D3D373D363C363D363C363D36CAA1BC
%B59B5AA8FFFF60676161608B6161608B858B848B858B84A8A8FF9AC3A1CA
%A8FFA8C3A1CAC3CAA1CAA1C4A1CAC3A8A9FD08CAC3CAAFFFFFCAC3CACACA
%C4CAC3C3A1A15A3D3D8B8B8B858B858B618B61AFAF8B61613D6136613D3D
%84CABCBC613D36613D6136613D613D613D613D613D61366136613661363D
%84CACAC3B5CAAFAF858B618B618B618B618B858B858B8BAFA8CAC3C3C3CA
%CACAC3CAA2CAC3CACACAC4CACACAC4CACACAA877BCBCC39AC3A1C3A1C3A1
%A19BA19AC39AC3BCBC94BC93BCBCBC775A3661618B858B6161616785FF85
%8B613D363D363D3661A8C3B5843D3C363D3D3C36613D3D37613D3D3D6136
%3C363D363C363D363D60CACAFFAFFFFFAF61676185618B618B858B858B84
%A8C3C3A1CAC3CAA1CAC3CAC3CAC3CAA1CAC3CAA1CAC3CAA1CAC3A877B5B6
%B5B693BCB5BC93BCB5BC93BCB5B6B5BCB5B6B5BCB5BCBCC2BCA15A3D618B
%858B618B618B618B618B3D3D36613D3D3DFFAFFF853D363D366136613D61
%3D613D613D61363D363D363D363D36FD043DAFFFFFA8FFCAC3848B618B61
%8B858B85AFA8FD04C3CAC3CACACAC3CACACAC3CACACAC3CACACAC3CACACA
%C3CAA876B593B693B593B693B593B693B593B693B593B693B593B693B593
%BCBCBC77613D6160676161606161616061366060856085A8FFFFFF84AF84
%AF84AFA8AFA8AFA9AF84AF858B848B8485848560615A613D3D376184FFA8
%C3B5B5A1856161606761A8A1C3C3C3A1CAC3CAA1CAC3CAA1CAC3CAA1CAC3
%CAA1CAC3CAA1CAC3CAC3A8A1B5BCB5BCB5BCB5BCB5BCB5BCB5BCB5BCB5BC
%B5BCB5BCB5BCB5BCB5BCBCC3A1853661618B85AFA9AFA9FFFFFFAFFD05FF
%AFFD1DFFAFFF8B8BAFCACACABCB5C3AF618B84CAFD05C3CACACAC3CACACA
%C3CACACAC3CACACAC3CACACAC3CACACAC3CAA876B593BC93B693BC93B693
%BC93B693BC93B693BCB5B593B6B5B593BC9AC3A1C3BCA284FFA8FFA8FD0B
%FFA8FFFFFFAFFD21FFC3CAA1FFFFFF84C3BCC3A1C3C3C3A1C3A1CAA1CAC3
%CAC3CAC3CAA1CAC3CAA1CAC3CAA1CAC3CAC3CAA1B5B6B5BCB5BCB5BCB5BC
%B5BCB5B6B5BCB5B6B5BCB5BC94BDBDC3C3CACACAA1CACAFD11FFA8FD25FF
%CAFFA8FFFFFFCAFFCAFD09C3A1CAC3CAC3CACACAC3CACACAC3CACACAC3CA
%CACAA277BC93BC93BC93B693BC93B693BC93BC94BC9AC39AC3C3CAA1CAA1
%CAA8FFA8FFAFFD11FFA8CAA1C4FD24FFA9FFA8FFAFCA9ACAAFFFA1CAA1C3
%9AC3A1C39AC3A1C3A1C3A1C3A1C3A1C3A1C4A1C3A1C3C3A1A9CACAC3CAC3
%CAC3CAC3CAC3CAC3CAC3FD08CAFFCAFD19FFC4BDB5FD27FFAFFFC3BCB5C3
%CAFFFFFFA8CAFD16C3A17ECAC3CAA1CAC3CAA1CAC3CAA1CAC3CAA1CAC3CA
%A1CAA8FFA8FFA8FFA8FFAFFD13FFA8CA9AB6CAFD27FFA8CAA1C3B5BCAFFF
%A8FFA8FFA8CAA1C3C3C3A1C3C3C3A1C3C3C3A1C3C3C3A1C3C3A1A8C3CACA
%CAC3CACACAC3CACACAC3CAC4CAC3CACAFFAFFFFFFFA8FFFFFFA8FD15FFCA
%C3B5FD2AFFCAC3CACAFD05FFAFFFFFFFA8CAFD10C3A17ECAA1CAC3CAA1CA
%C3CAA1CAC3CAA1CAA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD13FFA8FFA1BC
%A8FD2AFFCAA8FFA8FFA8FFA8FFA8FFA8FFA8CAA1C39AC3A1C3A1C3A1C3A1
%C3A1C39AA1A8C3CACACAC3CACACAC3CACACAC3CACBFD23FFAFFD2FFFAFFD
%0DFFA8CAFD0CC3A17ECAA1CAC3CAA1CAC3CAA1CAA1CAA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFAFFD0DFFA8FD29FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CAC3C3A1C3C3C3A1C3A1C3A1A1A8C3
%CAC3CACACAC3CACACAA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFAFFFFFFFAFFD2FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFAFCBC3CAC3CAC3CAC3CAA1CAA17DC3A1C3A1C3C3C3
%A1C3A1FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFAFFFA8FD0FFFA8FFAFFFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8CAC3CAA1CAC3CAA1CAC3A8A8FD09C3FD2DFFAFFD13FFAF
%FD2AFFCBC3CACACAC3CACACAA27DC3C3C3A1C3C3C3A1FFAFFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8CAA1CAC3CAA1CAC3A8A8FD07C3CAFD04FFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFCACAC3CAC3CAC3CAA87EA17DA2A1A2
%7DA2A8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AF
%A8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF
%84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AF
%A8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA2A8A1A8A2A8
%A1A8
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">xmas game gui background</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-12-24T14:15:22+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-12-24T14:15:22+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-12-24T14:15:22+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>152</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7NY/7w2//GJP+IjN7k+o&#xA;+943F9I9yvTwyLN2KurirsCXEgCp2GFCx54lWpYH2BwiJLEzAQLXMpavKlegGXiAcY5CvnimVI5Z&#xA;k4iYFo3FPiANK0GRjIWQOjKcJAAkfVyQrpHKrI6hl7hhUHLQaaatimsQRW988cNQlAeNSaVGZECS&#xA;GiQooLkfHJodyPjiruR8cVdyPjiruR8cVRFrdCOqv9k9D4ZKMmEo2ivrEH84New65PiDXwlC3zfv&#xA;RRq0HQdshLm2QGyH5HxyLN3I+OKu5HxxV3I+OKu5HxxV3I+OKpgf0L+gwweb9MetQp/ur0qdcpuf&#xA;H04K+1vrH4fXxL+FJj5aErW8hcgwhqIpFSGpU7/TgylhjDJ7SFRCOSDc1Gw6ZiTlu52KArkrelH/&#xA;ACD7hkLLZwjud6Uf8g+4Y2V4R3O9KP8AkH3DGyvCO53pR/yD7hjZXhHcpWH+8Nv/AMYk/wCIjDk+&#xA;o+9ji+ke5VkkSMVY08MABLKUgObUc8cn2Tv4HriYkIjMFfgZIKe5csVQ0UbVHfLowHVxp5DeyK1D&#xA;VLa5sLe3jtxHLFT1JNvioKfj13yrFhMZkk7FydRqoTxxiI0RzLGJfMVihYKHdlJAoBQ0965mjEXW&#xA;+IEkv9UuLuYOT6ap/dop6e9fHLYxAazK3WWq3NrOZSTKGHF1Yk1A98ZQBUSpNZPM8Hp/u4WMngxA&#xA;WvzGV+E2eIkM88k8zyyGruak5cBTUsxV2KuxV2KuxV2KouwoeYIrShGWQa5r3tTLMzN8KdgOpxMb&#xA;KBKg1c2qCKsYoV6+4xlFMZboLK2x2KuxV2KuxVcZZDEIif3asWC+5ABP4DGt7Te1JroWqQ2weCc8&#xA;UduSv2BpQ1+7K8kLZQlTNbvTntbG0vVuFkW6UMgQ9ARXY9xmBjzCUjGuTs82lOPHGfFfE3by+pHU&#xA;/aGxxnGixxysKmQbHYq7FVCxIFhbkmg9JOv+qMnP6j72vGfQPchrqUPJUH4VFBlsI0GjJKyl1hq1&#xA;vdSMkZKyoTQeIB+0DlsoU0xmjZrwqlZZQidySFGQEB0bJZD1LHdZ1pJUNvaklT9uXpWnYZfCFblo&#xA;nK0tfUr94vSadynQivX5nrlnCGFlDYUOxV2KuxV2KuxV2KuxV2KuxVtQCQCaDueuFUwtkgCkxGvY&#xA;seuWRppkT1V8kxdiqV3CKkzKvT9VcqI3b4mwp5FLsVdirsVXCNyjOFJRSAzAbAnpU+9MbTS3FDIN&#xA;BVYXKMfjddvnWtMGaPpXFL1MktbgJ8DDYn7WYM43u5+PJWyNyhyVryxp9s0rkgCWMpAc1huYKV5f&#xA;Rh4Cx8SKUC5SK0ieZiFCqK7nt7ZlcNyNOCJVEWlOqatJLE0NqCFbZ3OxI8AMujirctcstpNbXM1r&#xA;OJY9nXsehHgcmRbEFffahcXrq0xHwiiquwFcEYgJJtStp3t7iOdArPEwdVdQykqa7qdiMZRsUmMu&#xA;Eg9y2RzJI0hABcliFAA3NdgNhhApBNrcUOxV2KuxV2KuxV2KuxV2KuxV2Ko6w/u2+f8ADLINU0Vk&#xA;2DWKpVI/N2bxNcpLeAtwJdirsVdiq9Z51heFZGWGQgyRhiFYrXiWHQ0rtg4RdshIgVexWYWKbWRM&#xA;qxCtCxC18DWmW3tbSRvTJoY91SvgORNTmvkernxj0TXMRz0BdcvWav0fLMiHJxMv1JHda+tvO8DQ&#xA;N6iGn2hQ+B6ZkDHbjnJSrfSIulKp+06oFHyocMB62Ez6AkeZLQteNHHxD6cFKCoPbMN13Hh3wUzE&#xA;k6vbjyofK9tDbQOuuKw9eQ8vfkST8JB7Af7eHCOXxSSfQ7DJPB4AEQfF6sfzKcF2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2Ko3T/sP88sg1ZEXk2CldPwgY9zsPpwSOzKI3SzKW52KuxV2KuxV2KuxVG6e5oy9&#xA;wajLINcwyawnea35PuwJFfGmYmWIB2cjFIkbp6hJRSepAzBPN2UeSAu5lZySQFTavsO+XwjQcbLK&#xA;ywnUrhLjUJZU+wzAKfEKAtfwzNgKDhyNlGS85KFmJ4ii16ADLuEdHH4lkdvNLII0XkxyMjXNkBfJ&#xA;GfoO6pXmlfCp/plXjBt8EoKeCWB+Eq8W/WMtEgeTWQRzUXjRx8Q+nGkAqD2zDdTUeHfBTMSUSCDQ&#xA;ihwMnYFdirsVdirsVdirsVdirsVdiqrDctECFANfHJCVMTG1T6/J/Kv44eNHAFOa5eVQCAADXbAZ&#xA;WkRpSyLJ2KuxV2KuxV2KuxVUt5RFIGPSlDTJA0xkLCdaVrFsjmGQlFc1V2oAD75XmF7hniPDsWQp&#xA;cSBKK3wnpmIYhyhM0kevanEsDWsTBpX2kp+yPD5nL8cerTOXRjq9Rl7Um+XOOnOnWxhhqwpI+58a&#xA;dhmFmnZczDCgmwshw3Y8/wAMxPE3c3wdvNJtYhV7NmI+KMgg/M0OZWI7uFmGyQZluM7FWmVWFGFc&#xA;VtQlt1UFgaAdjkSGQkoUrgZuwK7FXYq7FXYq7FXAE7AV+WFVRYJT2p88aRxBeLU92p8sPCjiXi2j&#xA;HWpw0x4ivEUQ/ZH0740iyuCqOgphV2KuIB6jFVpijP7IwUtlY1tGelRjSeIqMsXp03rXIkMwbRel&#xA;6Fq2qer9RtzN6CepJuq0X25EVPsMqy5o464jVt+HTzy3wC6QGWNLsVVYY7uRSsKyOvcIGI/DEkLS&#xA;m6OjFXUqw6qRQ/jirl6jCqdQFRPGW+zyFflXLJ8i0R5sltuHrLyFR2+ea2fJ2eOr3THMZzEqurdW&#xA;5wyCqt+rMuEuocHJDoWOXVoIp3jB+ydvkdxmdA8QtwJCjSGYFRU7DxwoDR3Hz74pU2jBj9Plv1BO&#xA;CkgrIYGV+TdumABJkrMiN1AOSY2sNvEe1PlgpPEVv1VPE40nid9VX+Y4KXibFtH4nDS8S4QxD9n7&#xA;98aRZXgAdMKHYq7FXYq7FXYq7FXYq7FXYq0yhjRlqOxwKiLS+u7Tn9VneH1F4SemxWq+BpkZ44y5&#xA;i6ZwyzhfCSLUl06WaCadIWaGDj60ijZOZovL5nEyiCAeZWMZEEgbDmoLZh5FUNTkQN/c0wkKJMxt&#xA;bVERYIVCqo+EZgyl1LmQhewUL3Tba6ZfrCVaM9tj8jTtkozI5MZQ70NPoWnNESsRjYCoZSf4kjJD&#xA;IbYmApG21mDbxsIQQVBJ4jfbBPJud048VxGyKgt5DItVKqNz26ZVKYpuhjNo/Mdy0tnDCV69anMm&#xA;PJwp3ZSC+hljnJkPLnuG8c2GKQI2dfkiQd0K7oo+MgA+OTLABE6FNb2Gqw3lyn1mCN+Ri26EEAiu&#xA;21a5RnxGcCAaJcrTZ448kZSFgdEf5tv4NWvzqFlavFaqqxPKVA5SbtVuNRWnv2ynR4ZYo8MjZcjt&#xA;HURzz44RIjy+Pn+OiQU3zLcB2KuxV2KuxV2KtgEmmKHYqpySqg33J6DASyAtSF0a7qKYOJPCiYgJ&#xA;FDKdskN2B2VPSHc5KkW36S40tu9NMaW3emuNLbRiHY40ttGJuxrgpbaEbUNeo6Y0m1o64FTqXy/f&#xA;xeXhrAmQWkzBWhDEMQHKgkdD8Q6ZjHUwOXw69Qc78lkGDxrHCenx/WkyRyyMEiBMh+zTrXMgnZwx&#xA;zZPbNP6SGYBZqfEFNRXME05kbTYIrAM6gtQVqMxrpzqB5tyAekw7cTt9GI5rLkp2f+8cH/GNP+Ij&#xA;Dk+o+9ji+ge4K2QbHYqo3ar6JJFSOh8Msgd2rKNki1OGWVYxGhahNadszsMgLt12aJNUx/UrWdHD&#xA;OpAA6HLib3DVHbYq+mRxSelFLOsKsTykYFgo91WrYTIiNgWVEQZUTwjvVYby8+pm2Z2WBn5tCCeJ&#xA;YbBqfLCIAniI9SDkIHCD6edKYAatVpQ03yTBoxrQgY0trTEexwUttek2NJt3pPjS22IjXfpjSLXL&#xA;HQ1rhpbbKKTWm+NItL7uvrsOwpT7srlzboclHIskZp5PxjttlkGvIiyyjqQK7CuTa28VdirsVQ86&#xA;3JlUxmi99/15E2ziRW6IyTB2KrI4mDGp5MT8O3j2wUklffC6gt1EvMRVqsZJ48j7dK5XcSbHNsAl&#xA;VHkmGgxIbY3FPickD2A/tyjNKzTdijW7IYLVFUM3xMd/YZhSmXPhjA3RGVtyncEi3lI6hGp92Sjz&#xA;DDJ9J9y2z/3jg/4xp/xEYcn1H3oxfQPcFbINjsVaZQwIIqD1GEIItByWbAllYBBvvWuXDI48sJ+C&#xA;S6/Gjac7P1Qjh8yQMyMR3cXINmPWA/esfAfxzKg48+SPyxqdiqySVI15N0rTATSQLXAggEdDhQ3i&#xA;qO0zRdQ1J+NrHVQaNI2yg+Ff6Zj59VDF9RcrS6LLnPoHx6Kl/wCX9Ssa+qleI5MFDAgDvRgpI+WV&#xA;YdfiyGgaPm5Go7Kz4o8RFjySw9MzXWrUkDAV+FjvxPXACkhTubYS/Epo4/HBKNpjKkG1u6Ehiq7V&#xA;3IyFNgkirFSIiTShO2SgwnzVZEjegYVoe3Y/RkixBIVMKHYq7FWjyqKUp38cVbxVpgCN+mKsg8v+&#xA;WL+/jF6iEwg1ShWp9xUjbNdq9dHH6eZdtoOy8mYcXKK67t7aSWazlKSyQEevDUF4ya8eag1WtDTK&#xA;MGpjP6Tu3avQZMNcY9J5Ho1a2scKCGBaJUlV60rvl0pdS4kY9AnKigA8BmKXODsCVO4FbeUDqUb9&#xA;WShzDDJ9J9y2z/3jg/4xp/xEYcn1H3oxfQPcFbINjsVdiq2WNpI2RepH6sPGI7nkoxSyemIuRSfW&#xA;dCu7nT+dCFU8kYEFeXSjU+6uXYNVCR2LTquz82IeuNUwyES+pSPZ/uzYB1hrqmMfqcf3lOXtloaT&#xA;S/ChplVhRgCPA4q5QQACanx6Yq3iqYa/r2r6FoVjNpFwbdmdA7cVbd42ZhRww+17Zw/a+eYzS36v&#xA;s3sb2ZpsunjxR4rgTzPO9+XySbzh+a3mbSrWSO6jttTW24Ok5jMMjBiFahRmSlSeg7ZjZss8M+E0&#xA;dgfmLdnoextNrsHiw4sfqlGiRL6ZGPcOapa3SXlrBeRrwjuY0mRAa0WRQ4Fe+xzu9Nk48cZd4BfE&#xA;e0NP4GoyYv5k5R+RpdwUvzI+IbKfbLacW1+FCC1AfEh8QR92VzbMaity6RCNPh8W74OJlw7t205j&#xA;kqT8Lfa/rjE0shYTLLWlpuVPhoT74q3iqxY2V2YsSG6L2GCkkq/1eX0BOAPTL+mPiHLlSv2a8vpp&#xA;g4hdJ4Dw8XRW/RFxIlHoqtTkK70yqWaPJsjilzTDzGdbfT7NtMM81rbsFu9Mt2kT1o9gVPpUY/0P&#xA;tnH9pwyDJe5D6x7JZtLLBwyMYTojiNek9DvskWk/lj5o0vzauv6aRb6aAq3sdwQJJraQBvTeMGqy&#xA;R7fEaCo8Nsx9NinjyXHl+Nna9sdq6bVaM48g/eju5RkP4ge4/dtszz00VjxA8Kgdc6OyXyvhAOzs&#xA;CXYqtl/u3+R/VkhzYy5FD2lzbC0hBlQERrUch4DI5cseI7jm24dLlMIkQlyHQqhvLMdZ4/8Ag1/r&#xA;gjIHkbTkwzgLlEj3helxA+ySK3yYH9WTMSOYaBOJ5FVVSzBR1OQlIAWW3HjlM1EWWvMOm6vHock2&#xA;lhDcKwDySsERVY0Z99j6fX/OmajWZJZB6fx5vY9g4cODJ+96joLP9Ue/kxTyf540+G9u/Kcl8989&#xA;2PWsp5erulDcUG5EZCllr4HMTSZPXwg33Hzd/wC0GhJ04zzgIbVKI6R/hvz6HzRM+kWMqt+79N2r&#xA;8a7Gp3zsRkIfGzjCZuNPewtLaGyRLiAUluABykNNydq9d98oHGJGRlsenc5UzjljjGMAJDme9CXF&#xA;jEw4yx0J6NSh+/LoZCORcaeIdQkdxCYZmjY1I6HxGZ0JcQtwpRo0p5Ji0GVq0NaGh+eKsx0Py9pX&#xA;mPy7aW+ooxR2ch0YqwKM6qQd+3iM5LtTFGWWVvo3s5r82nwRMDyvz6lIfNH5TWGuWWoBNTNm9sZL&#xA;ZVeMSlgh5ox+KP4qOMx9ZpOOUZC/oj91O37E9ozpseSEoxI8aZ51zIklEdgdJsbewaYXBsbeKD1h&#xA;sG9KJVBpU06dK7Z1HZ8THBEHmA+c9uZ45tbkyR5TlfO+e53XxuHQMOhzMBdSRTn58fgoG8TiVCW3&#xA;CyrJSQ1YitcrLbEjop5Fk2iO7qiKWdiFVQKkk7AAYk1ukAk0GTxeWtTt7H17vjBEgJaR6hFUdeT0&#xA;47e2YR7VxR23Ls4dg558uGz0vf7AlNreWd5D9Ys7iO6tySomhYOpI6io6H2O+ZuDU48sbgbcDXdn&#xA;Z9JPgzQMJef6FUkAVPTL3CbG/TFU7s9JtFsUuZJmF8JP95uPw8KbGvjXMHJnlxcIHprm5+PTw8Pi&#xA;J9d8vJHwW5lBNeIHQ5RKdN0MfEmOnkWjkgkq9A/y+WYuePiCnP0eTwZWOXVQ8x+bFhvbK0ubcx2k&#xA;p9P9IGSgEh3RXSlKHs3LNTj1XhZOGQ2P2F7HJ2IdVppZMcrnEcQiP4o9fj5V96pxHv8Aec3NvE07&#xA;iPf7zja0oy3VnCaSzpGfB3C/rORlMR57NmLBPIagDI+VlQfVdKKsou4q0NP3g8PnlcdViv6o/NzJ&#xA;9jasRJ8LJ/pS1aAGzgrv+7T/AIiM0up/vZf1j972/Z3+LY/6kf8Ache1vA3WNT9GUU53Ee9D/oux&#xA;uJhEigzNsFBBP41y3HknH6SR7i4+oxYZgnLCEq74gta/bX2h6dBFpsLTXF65j9dq+kjAVqxOwUDc&#xA;eOT1WoyyiATxOP2LodIMs5iIxgD4kdwH30iLLzBrVvHBb6l6d9Zrb/V5eabOSpBkJBPKtaEU3Hvh&#xA;hniIcMgb7/2MNT2bKWfxcMhGPSHd5iXf8KYZ5V0TQvK+o313Ik11d3UjhdTdQ3GAt8EagGqqBSvd&#xA;vAdBm9nabEBcZAz7uXydX7Udq67NUcmOUMMa5biR/nSI5eQ6M6judKvoI2tphM1CZB0477f5X35s&#xA;qnE77PIE45xFGz1VI4kjFFFPE98TIlYxA5KF8RwUd61yeNqzHZjPmK3uIr21lTjIskVeKHkR8RqG&#xA;A6HMzBPn5Fw9RjquW4QbluB4/aptXMtwwgraV1WTiObHoP45CJbJBkuieY9R0ryxPd2ipJJaO7LH&#xA;KCVO6s1eJU9G8c5jtmZhksfzX0P2Q0kNRj4JEj11t5gJTqOuS6qo1Z4lilvVDGNKlQV/dsRy36pm&#xA;47Kzcemiff8Ae8x7T6L8v2hkx9BX2xBQTzL9TVWryYUA+RzPvZ0QG6pYgekSCeu47ZKHJE+aJyTB&#xA;AX/98P8AVH6zlc+bbDkhsgzZB5GNqvmCKW4NPSR3iqK/GB4f6tcwu0JEYjTtOx8YnqIjrvXvW+ev&#xA;NF5r+o3Gk3craVZREGzgcDhMQT8crjbfag+yPmN+PMhkkYylwd3d8X2PSaaWjxRz4sf5iX8dH1RH&#xA;9AHme/cE9Eg8n/lFrtxrL39hcHSLeAqbsowMdytCQgjIK7+LCg8K5Zgw58OS74fMdf1sO2O2NBq9&#xA;MY0MpN+mQowPndSiR+NmS63pUqu4sV5wswHEGpFaVpX9nl+GdphzEwHH9T4jqMMBkPB9HRWsNMlh&#xA;eN5ipKjoKn4vuyU81ig1QxEGyndrArgu+4rQDMKcqc7FAHcowAAUAoPAZU5AFKtrCLiR4xLGjIhk&#xA;PNqbDKcmeMebmYNDlyCwNu/p7kHaTaVqcn1S8tRPC1OBlFUJU8gpHT5Zqs2XHllsHrNJo9Vo8d8Y&#xA;Fb0OYWefbbVYIorvRmRbeUcJrcFUaNx04mn2T/n1yObPliBwmg39laHRZZy8aHFPnzP3WGA3Om+e&#xA;LtFZozIp6AyoxH/BtmDPLnPU/N6vBpuzMfKMQR/Q/TRP2oBvLPm9m4m3evtJGB+DUzHOKZdnHX6S&#xA;PI/ZL9Tl8l+ZWPKS3CgbktIh/UxyUMUzIX3teo7S08ccuE/wnkD3IlfPus25MIjgdIzwUsrVouw6&#xA;MMv1WcjNP+sfvcDsrsfFPR4TZBOKH+5Cqv5jalT47WE/LmP4nKfzHk5Z7DH877P2tW/5h6hbOXt7&#xA;aOJmFCQSduv7VcMdVwmwGObsCOSNSma937V17+ZeuXkaRTqkkSGojYnjX5Lxwy1ZkNwxwez2PEbj&#xA;L7P1koT/AB5rKxlIooIgd6qjE/8ADM2V/mC5f8jYjzMj8v1INvNOru5aWUMp6qqqn3FQMj4xbh2Z&#xA;iAoWibLU0d+UMhin+dGr12IzZ6XtbLj2J4o9xeV7X9jtLqPUB4U/50OXxHL7j5sr0rzTMqrFdn1e&#xA;3LYN/Q50Gm1OHUbRPDPuP6Px8HzbtTsTWaA3MceL+fH9Pd8du4p097a3aBoW5FdiPCvY5kjHKJou&#xA;mlkjMWETpOopYXDSvAs4ZCvFtqV3r0OV58XGKum7SakYpEmPFsk2rWqTxSSqoR9z8Ph4fRmXhmRs&#xA;4GaIPqDHbbTbuSSQQxSsyEhCqk1pt4ZdxxHMtYhKXIEsq8u+Xbi40O+0+/jltRNy9N2QjaRApIDA&#xA;VpxzQdrQhkIog9NnsvZjV5dKZHhqiJbgi0Jq3kLWNKtoNPtuWoRohP1hE4D4pHbiQWfffxy7snLD&#xA;Fh4JS3stPtWZ6vWePCBAlEX13G33JdH5S8yNCQNPY12BPEMPvObI6zEOrzo7PzH+Eo6Dylr4iAFk&#xA;QQByHJKknbpXfJDXYR/F97E9mag/w/aP1r38reYEFWsnH/A/1wjXYT/Eg9magc4FL73yx5gdwVsJ&#xA;SAN6DBLV4j/EFhocwH0lBny7r4/6V1yflE5/UMH5jH/OHzT+Uy/zJfIuttP1a1u45Gtp4HjNeTRs&#xA;tKfMZLixzFEggseHLiPEBKMh5Mjt5tC1Tjba5CKD7JavHl/rCjJml1XYvWHqj3PYdm+2OSI4Zngn&#xA;/OHI+8fge5m17PosOlNJLGbeOCHjEbNTyMYXZEVOoI6L0zBjlOL3Do5ktL+blz9U/wCK+/vPd72C&#xA;aXrulaoWFq7CRa8raSiSgDvT4gR/qk+9M2Ok7Rx5tgal3F1XbPsxqtAeKQ48X86PL49yZILc05Mw&#xA;8dszjbzwEeqvJe2sEYoa0+yg65r9Rqo4/q59zvezuyc2p+gVD+ceX7UEbq+u9oh6Ufcj+uanLrck&#xA;+XpD2Ok7D02n3l+8n5/q/WqRWES/E/7xvfp92YtO1OU8hsESAAKAUHhha2uCA1CivjTDbHhDeBLs&#xA;VWyf3bfI/qycPqDXn+iXuLxu6hmW4kLRsAWYioI2rmJrInxp7fxH73rexc0PyWEWP7qHX+iFDMV2&#xA;zsVbVWb7IJ+QwgEsZTjHmaREWl6nL/dWk0n+rG5/UMPAe5rOpxD+KPzCOt/KXmKf7Nk6jxkKx/8A&#xA;EiMkMMnGl2ngH8SbWf5danIy/WLiOGvRYw0j18KfCPxyyOnLhZu3MYGwv37Mu0/yLPHFGsaSSONm&#xA;nuaL/wAL9ofdmVHTkcnQ5+2IyJ4uXcGQaN5AhhmNxdDlIacRGzKtO9fslhm2hrswjwk397xWq7M0&#xA;k8nHCBiD0vb5dPhsyKHy9pyUPopXuCOX/EsgdRM9SmGhwx5RH3/ei4tPtIjVIwPkAP1UyozJ5uRH&#xA;HGPIKywRL0UfTv8AryLICkBq5ggijkaiKW41p3Ir2+WElMMZJ2Crpur6bqXqPZXUVx6fFZVjcMUb&#xA;fZ1Bqp+eREgeTZk0+THXHExsbWjcLW7FXYq7FXYq0yqwowBHgcUEWpyWttIvCSJHU9ioIyQkRyLG&#xA;WOJFEBCz6HpssHpLCIgKlDH8NCcGQmf1btmnPg/QKYrc/l5pX6Ui1G7hErwOJFeMmPmVNR6nH3/z&#xA;7Zj/AJeJNl2/8t5o4zjjsCOu/wAu5NdS0LTb6J5reRbKdQWflThQbkkdvmMzjqsnDwg/F53HoNP4&#xA;onKHF/R6FiEOk3F5CbnT5odQgqQZbeQNQjsQaGuazgMtwbezOrhiPBOJx10I/UoEX1m3F1eI/wAr&#xA;ggfjkNw3Dgybgg+5WTVD+2lfdT/XCJMJYD0Kuuo2x6kr8x/SuGw1nFK+S8Xlsf8Adg/VkmBBHQ/I&#xA;rvrFv/vxf+CGC08B7nG6tx/uxfoNcQggjofkVKW+tRG3x12PQHwyUD6gwywkcctuhVLQUtYR4Iv6&#xA;hlup/vZf1j97i9nf4tj/AKkfuCrlDmOxV2Koy20q8noePpof2n2+4dcsGMlxcushHzKaQaHapvKT&#xA;K3/Aj7h/XLBjAcHJrZy5bI+OKKIcY0VB4KAP1ZY4kpE81e3KCSr0p2r44WJR2BLsVdirsVSvzHC8&#xA;unUReTK6sAPpH8cjMWG/TZBCYJ5MI/KyK4tPMnma0mjaMSSJNGHBHwiSShFeuz9cxtMCJSt3/bs4&#xA;TwYJRINRI+yP7XpeZbzLsVdirsVdirsVdirsVdiqWatosd7bPEhCcwQ8bCqOD1DDwwSFim3T5PDm&#xA;Jdzz+38gX2na5HdaZdy6SAw+sqoEiOldwoJ4n5NUZiR0xErBp6PN23jyYTDLEZO7oR+PL7XoU8Vu&#xA;6gCkkbivFhUfjmY8uDW4Se88saVcVKIYHP7Uew/4E7ZXLFEudi7Ryw62PP8AFpBf+VNQt6vBS5jH&#xA;8uz/APA/0yiWEjk7XB2pjltL0n7EmZWVirAhhsQdiMpdkCCLDWKXYqtf7DfI5OH1Bpz/AN3L3FNb&#xA;e9tRBGpfcKoOx8PlmRqP7yX9Y/e6rQQI0+Pb+CP3BWF3bEVEg+nb9eU25YgT0V7RPrcoigIdzuaE&#xA;bDxOGIvk15p+GLkyKy0q3tgGYepL/Oeg+QzIjAB02bUyn5BG5NxnYq7FXYqvSWRPstT2xRSqt4/7&#xA;Sgj22xVeLxKbqQfAb/0wra/6zDSvKntQ4FtbPwngZFcAtSlTToa4VO4atSsUQjaRDSu4bxNcJDGM&#xA;h5IgEEVHTIs3Yq7FXYqtMkYNCwB8CRhpBkHCWI7h1p8xgUG1v1mGtOX4HDS2tN3EDTc++BbUzeGh&#xA;4rQ9iTXFd1NrmVu9B4DFaUmAb7W+NrTv4bDFLsVdiqB1LRrLUEPqpxlp8My7MP6jISgJc3J0+qni&#xA;PpO3d0YheaDd2sxjZlI/Yfcch49MxZYyC9Dh1sMkbCiNMn7sv4/0yPC2+OHNpknBuTgbHoK/0yyE&#xA;PUHHz6g8Etuh6/sQKbIoOxoMs1OKZyS2P1H72ns7VYhpsYM43wR6j+aG6jxynwZ9x+TmfnMP8+P+&#xA;mDOPL8FlZaehMkfrzAPK3IV33C/QMzMeCQHIvM67XwyZD6hQ5bpn9btf9/J/wQ/rlnhy7i4fj4/5&#xA;w+bvrdr/AL+T/gh/XHw5dxXx8f8AOHzd9btf9/J/wQ/rj4cu4r4+P+cPm763a/7+T/gh/XHw5dxX&#xA;x8f84fN31u1/38n/AAQ/rj4cu4r4+P8AnD5u+t2v+/k/4If1x8OXcV8fH/OHzd9btf8Afyf8EP64&#xA;+HLuK+Pj/nD5u+tWv+/k/wCCH9cfDl3FfHx/zh83fW7X/fyf8EP64+HLuK+Pj/nD5u+t2v8Av5P+&#xA;CH9cfDl3FfHx/wA4fN31u1/38n/BD+uPhy7ivj4/5w+bvrdr/v5P+CH9cfDl3FfHx/zh82/rdt/v&#xA;5P8Agh/XHw5dxXx8f84fN31y2/3+n/BD+uPhy7ivj4/5w+bX1u1/38n/AAQ/rj4cu4r4+P8AnD5u&#xA;+t2v+/k/4If1x8OXcV8fH/OHzd9btf8Afyf8EP64+HLuK+Pj/nD5u+t2v+/k/wCCH9cfDl3FfHx/&#xA;zh83fW7X/fyf8EP64+HLuK+Pj/nD5u+t2v8Av5P+CH9cfDl3FfHx/wA4fN31u1/38n/BD+uPhy7i&#xA;vj4/5w+bvrdr/v5P+CH9cfDl3FfHx/zh83fW7X/fyf8ABD+uPhy7ivj4/wCcPm763a/7+T/gh/XH&#xA;w5dxXx8f84fN31u1/wB/J/wQ/rj4cu4r4+P+cPm763a/7+T/AIIf1x8OXcV8fH/OHzQ9/wDU7m3Z&#xA;DLHzG8Z5DZsjLDIjkW3DrIQlfEPmxn1I/wCYfeMxvCn3H5O9/N4v58fmFskkfpt8Q6HuPDJQxT4h&#xA;sWvNqsXAfVHkeof/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:5f3b5123-2d15-8342-a830-9d3f6f0da0c1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:5f3b5123-2d15-8342-a830-9d3f6f0da0c1</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:807bd51e-6992-4b24-ab5f-98c2a18f4f2f</stRef:instanceID>
            <stRef:documentID>uuid:1BDE6E29BA55E6118ACBFF32079E40F4</stRef:documentID>
            <stRef:originalDocumentID>uuid:1BDE6E29BA55E6118ACBFF32079E40F4</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:1BDE6E29BA55E6118ACBFF32079E40F4</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5f3b5123-2d15-8342-a830-9d3f6f0da0c1</stEvt:instanceID>
                  <stEvt:when>2018-12-24T14:15:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2146.000000</stDim:w>
            <stDim:h>1270.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 8.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1270 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1270 li
2146 1270 li
2146 0 li
cp
clp
2146 1270 mo
0 1270 li
0 0 li
2146 0 li
2146 1270 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.626917 0 0 0 cmyk
f
217.436 180.659 mo
216.863 180.318 216.407 180.087 215.836 179.86 cv
216.178 180.202 216.635 180.659 216.979 181.117 cv
217.436 180.659 li
cp
.705104 .0487068 .045655 0 cmyk
f
624.441 55.6577 mo
627.328 56.6577 630.216 56.5479 633.104 55.3257 cv
634.104 54.7695 634.881 54.2148 635.659 53.5488 cv
635.658 53.5488 li
628.884 49.9937 622.22 46.4395 615.556 42.9976 cv
616.112 44.3296 616.556 45.6626 617 47.1055 cv
617 47.3296 li
617.223 48.2168 617.556 49.1064 618 49.8838 cv
618 50.1045 li
619.333 52.7695 621.444 54.6567 624.441 55.6577 cv
cp
f
1949.79 695.437 mo
1949.88 700.174 1949.28 704.797 1948 709.31 cv
1949.28 704.797 1949.88 700.174 1949.79 695.437 cv
cp
f
1872.82 632.429 mo
1866.99 641.801 li
1850.58 668.326 li
1853.43 672.627 1854.93 677.461 1855.1 682.842 cv
1871.22 683.984 1885.96 688.327 1899.34 695.758 cv
1897.85 688.785 1897.17 681.471 1897.17 674.039 cv
1897.17 665.055 1898.17 656.482 1900.18 648.316 cv
1872.82 632.429 li
cp
f
2143 177.597 mo
2134.1 183.747 2125.78 187.663 2118.03 189.336 cv
2125.78 187.663 2134.1 183.747 2143 177.599 cv
2143 177.597 li
cp
f
1896.59 894.232 mo
1896.77 894.498 li
1904.93 892.533 1913.13 890.623 1921.5 888.834 cv
1922.3 888.606 1922.99 888.379 1923.79 888.262 cv
2005 875.967 li
2005.06 872.105 li
1978.67 876.102 1952.87 880.932 1927.67 886.664 cv
1926.19 887.007 1924.81 887.234 1923.44 887.576 cv
1914.34 889.646 1905.43 891.902 1896.59 894.232 cv
cp
f
2143 537.205 mo
2143.38 537.205 2144 537.208 2144 537.208 cv
2144 500.637 li
2143.65 500.382 2143.32 500.103 2143 499.824 cv
2143 501.081 li
2143 537.205 li
cp
f
1720.9 207.523 mo
1719.64 208.78 1718.04 209.352 1716.32 209.465 cv
1714.49 209.352 1713.01 208.78 1711.75 207.523 cv
1710.49 206.265 1709.92 204.78 1709.92 203.064 cv
1709.92 201.237 1710.49 199.75 1711.75 198.493 cv
1713.01 197.235 1714.5 196.549 1716.32 196.663 cv
1718.04 196.549 1719.64 197.235 1720.9 198.493 cv
1722.15 199.75 1722.72 201.237 1722.72 203.064 cv
1722.72 204.78 1722.15 206.265 1720.9 207.523 cv
cp
1704.89 77.5474 mo
1704.09 76.7485 1703.63 75.7183 1703.63 74.6909 cv
1703.63 73.5474 1704.09 72.5181 1704.89 71.604 cv
1705.69 70.8042 1706.72 70.4604 1707.86 70.4604 cv
1709 70.4604 1709.92 70.8042 1710.72 71.604 cv
1711.64 72.5181 1712.09 73.5474 1712.09 74.6909 cv
1712.09 75.7183 1711.64 76.7485 1710.72 77.5474 cv
1709.92 78.3501 1709 78.8052 1707.86 78.8052 cv
1706.72 78.8052 1705.69 78.3501 1704.89 77.5474 cv
cp
1697.23 34.7944 mo
1697.23 31.2524 1698.49 28.2798 1701 25.8784 cv
1703.4 23.3628 1706.38 22.106 1709.92 22.106 cv
1713.35 22.106 1716.32 23.3628 1718.84 25.8784 cv
1721.24 28.2798 1722.5 31.2524 1722.5 34.7944 cv
1722.5 38.2251 1721.24 41.1958 1718.84 43.7114 cv
1716.32 46.1118 1713.35 47.3696 1709.92 47.3696 cv
1706.38 47.3696 1703.4 46.1118 1701 43.7114 cv
1698.49 41.1958 1697.23 38.2251 1697.23 34.7944 cv
cp
338.151 219.87 mo
336.665 221.355 334.951 222.041 332.894 222.041 cv
330.95 222.041 329.234 221.355 327.748 219.87 cv
326.263 218.382 325.463 216.555 325.576 214.61 cv
325.463 212.667 326.263 210.954 327.748 209.465 cv
329.234 207.981 330.949 207.181 332.894 207.181 cv
334.951 207.181 336.665 207.981 338.151 209.465 cv
339.638 210.954 340.323 212.667 340.323 214.61 cv
340.323 216.555 339.638 218.382 338.151 219.87 cv
cp
309.916 311.436 mo
306.371 314.865 302.143 316.58 297.228 316.58 cv
292.312 316.58 288.082 314.865 284.652 311.436 cv
281.109 307.891 279.395 303.661 279.395 298.747 cv
279.395 293.831 281.109 289.6 284.652 286.171 cv
288.082 282.627 292.312 280.914 297.228 280.914 cv
302.143 280.914 306.371 282.627 309.916 286.171 cv
313.345 289.6 315.061 293.831 315.061 298.747 cv
315.061 303.661 313.345 307.891 309.916 311.436 cv
cp
2001.78 461.239 mo
2018.96 461.239 2033.6 467.299 2045.85 479.416 cv
2050.88 484.446 2054.89 489.932 2057.75 495.877 cv
2069.54 488.218 2082.82 484.332 2097.7 484.332 cv
2114.41 484.332 2129.17 489.132 2141.88 498.848 cv
2142.24 499.153 2142.61 499.488 2143 499.824 cv
2143 231.855 li
2132.44 236.387 2120.49 238.73 2107.73 238.73 cv
2096.64 238.617 2086.24 236.903 2076.52 233.586 cv
2088.87 246.276 2095.04 261.593 2095.04 279.542 cv
2095.04 297.831 2088.64 313.493 2075.72 326.524 cv
2072.87 329.383 2069.89 331.898 2066.81 334.069 cv
2064.41 351.788 2056.52 367.333 2043.37 380.708 cv
2027.14 396.829 2007.48 404.945 1984.5 404.945 cv
1961.53 404.945 1941.87 396.829 1925.74 380.708 cv
1925.26 380.219 1924.8 379.719 1924.33 379 cv
1862.64 379 li
1808.8 190.719 li
1846.19 130.305 li
1846.06 130.435 1845.97 130.576 1845.84 130.705 cv
1842.52 134.02 1838.64 135.735 1834.06 135.735 cv
1829.49 135.735 1825.49 134.02 1822.18 130.705 cv
1819.78 128.304 1818.29 125.675 1817.72 122.702 cv
1805.14 121.216 1794.28 115.958 1785.14 106.812 cv
1774.28 95.9526 1768.79 82.6919 1768.79 67.2603 cv
1768.79 51.7144 1774.28 38.5669 1785.14 27.7075 cv
1785.48 27.3657 1785.83 27.022 1786.17 26.6782 cv
1781.14 23.3628 1776.34 19.3628 1771.88 14.9048 cv
1768.36 11.3843 1762.32 4 1762.32 4 cv
1239.36 4 li
1236.97 12.3145 1233.1 19.9448 1227.75 27.1201 cv
1229.46 27.917 1231.17 29.1699 1232.65 30.6519 cv
1236.4 34.4087 1238.23 38.8506 1238.23 44.0913 cv
1238.23 49.3311 1236.4 53.7729 1232.65 57.5317 cv
1229 61.1768 1224.56 63 1219.32 63 cv
1219.21 63 1218.97 63 1218.86 63 cv
1219.21 64.0278 1219.43 65.1719 1219.43 66.4292 cv
1219.43 68.3735 1218.97 70.0898 1218.06 71.5757 cv
1232.13 72.2617 li
1218.63 119.265 li
1300.29 71.9199 li
1364.21 175.531 li
1310.35 364 li
1169 364 li
1166.37 189.758 li
1115.16 178.071 li
1176.54 142.78 li
1167.28 68.6807 li
1200.09 70.3828 li
1199.52 69.1353 1199.29 67.6577 1199.29 66.1836 cv
1199.18 63.3457 1200.21 60.9639 1202.15 59.0361 cv
1203.06 58.1265 1204.09 57.4463 1205.24 56.8779 cv
1203.18 54.7231 1201.81 52.3394 1201.01 49.7295 cv
1190.49 55.0625 1178.83 57.7871 1166.14 57.7871 cv
1144.99 57.7871 1127.04 50.4102 1112.07 35.5464 cv
1102.7 26.2412 1096.3 15.686 1092.98 4 cv
650.222 4 li
658.959 8.53906 667.705 13.0264 676.533 17.5029 cv
677.105 17.8438 677.678 18.0698 678.248 18.4121 cv
681.107 19.8857 683.963 21.2476 686.937 22.7222 cv
692.309 36.6797 692.424 50.8647 687.279 65.3906 cv
681.563 81.3896 670.933 92.9629 655.5 100.34 cv
640.068 107.603 624.292 108.397 608.174 102.723 cv
591.941 97.0498 580.166 86.4951 572.852 71.1768 cv
571.136 67.6577 569.879 64.2554 568.85 60.8516 cv
568.164 61.4189 567.479 61.9849 566.906 62.5518 cv
566.449 63.5737 565.764 64.5967 564.849 65.5029 cv
563.248 67.2061 561.305 68 559.019 68 cv
558.904 68 557.617 68 557.502 68 cv
557.273 68.1133 557.045 68.2275 556.816 68.3418 cv
546.858 73.0293 536.557 73.4873 526.027 69.8291 cv
519.961 67.6553 514.812 64.3408 510.691 59.9971 cv
500.963 78.0596 486.313 91.7764 466.971 101.036 cv
447.971 109.953 428.742 112.696 409.285 109.382 cv
408.828 111.097 408.256 112.924 407.684 114.64 cv
403.219 127.101 394.865 136.358 382.733 142.188 cv
370.6 147.79 358.24 148.476 345.765 144.018 cv
336.838 140.933 329.626 135.903 324.133 129.044 cv
313.832 155.679 295.635 175.226 269.424 187.687 cv
257.521 193.288 245.503 196.717 233.486 197.975 cv
233.486 200.947 232.914 204.034 231.884 207.119 cv
229.25 214.437 224.33 219.808 217.233 223.353 cv
210.137 226.667 202.927 227.011 195.486 224.38 cv
188.048 221.751 182.668 216.837 179.35 209.864 cv
176.03 202.891 175.573 195.917 177.862 188.944 cv
163.098 182.429 150.737 173.513 140.55 161.965 cv
139.52 168.938 137.803 176.027 135.285 183.114 cv
126.659 207.4 111.314 225.729 89.3774 238.142 cv
155.498 271.651 221.617 305.06 287.737 338.468 cv
303.238 346.209 318.806 353.792 334.433 361.248 cv
335.739 361.871 337.041 362.508 338.35 363.128 cv
344.439 366.023 350.549 368.875 356.659 371.726 cv
359.445 373.025 362.226 374.339 365.017 375.63 cv
369.875 377.877 374.747 380.093 379.618 382.314 cv
384.018 384.318 388.418 386.329 392.829 388.312 cv
396.231 389.845 399.643 391.354 403.051 392.873 cv
409.374 395.683 415.7 398.486 422.044 401.251 cv
423.663 401.959 425.285 402.661 426.906 403.364 cv
453.702 414.985 480.672 426.205 507.83 437.005 cv
515.27 439.978 522.709 442.834 530.148 445.692 cv
527.516 447.179 525.113 449.122 522.823 451.522 cv
515.27 459.182 511.493 468.328 511.493 478.958 cv
511.493 489.59 515.27 498.62 522.823 506.165 cv
530.491 513.824 539.647 517.597 550.292 517.597 cv
560.936 517.597 569.978 513.824 577.533 506.165 cv
585.2 498.62 588.977 489.59 588.977 478.958 cv
588.977 477.671 588.92 476.4 588.808 475.146 cv
588.47 471.384 587.633 467.783 586.344 464.439 cv
618.136 473.966 650.354 481.667 682.981 487.584 cv
684.125 487.79 685.259 488.028 686.402 488.229 cv
686.459 488.241 686.516 488.249 686.574 488.259 cv
706.797 491.839 727.181 494.725 747.724 496.905 cv
758.211 497.905 768.683 498.691 779.142 499.264 cv
789.6 499.835 800.043 500.192 810.472 500.335 cv
820.902 500.479 831.317 500.407 841.717 500.121 cv
893.722 498.691 945.37 491.906 996.659 479.76 cv
1050.88 467.073 1105.22 454.993 1159.65 443.419 cv
1162.24 442.87 1164.82 442.31 1167.4 441.762 cv
1181.36 438.807 1195.33 435.905 1209.31 433.024 cv
1213.55 432.148 1217.78 431.244 1222.02 430.375 cv
1228.7 428.905 1235.27 427.548 1241.94 426.304 cv
1242.01 426.288 1242.09 426.274 1242.16 426.259 cv
1310.13 412.421 1378.72 405.299 1447.97 404.829 cv
1458.62 404.758 1469.29 404.845 1479.98 405.087 cv
1485.32 405.207 1490.67 405.368 1496.02 405.569 cv
1502.07 405.891 1508.11 406.292 1514.14 406.732 cv
1516.13 406.878 1518.12 407.027 1520.11 407.186 cv
1525.57 407.621 1531.02 408.091 1536.46 408.624 cv
1538.54 408.827 1540.61 409.06 1542.69 409.278 cv
1546.83 409.714 1550.97 410.177 1555.11 410.67 cv
1557.48 410.954 1559.86 411.237 1562.23 411.539 cv
1567.66 412.231 1573.08 412.966 1578.49 413.757 cv
1580.34 414.027 1582.17 414.322 1584.02 414.606 cv
1588.64 415.312 1593.27 416.058 1597.88 416.837 cv
1599.43 417.101 1600.99 417.354 1602.53 417.626 cv
1608.73 418.707 1614.92 419.859 1621.1 421.074 cv
1621.58 421.173 1622.08 421.273 1622.57 421.371 cv
1652.38 427.29 1681.89 434.732 1711.07 443.75 cv
1710.63 444.321 1710.21 444.902 1709.83 445.496 cv
1707.12 449.646 1705.81 454.323 1705.81 459.525 cv
1705.81 466.727 1708.33 472.786 1713.36 477.931 cv
1718.52 483.074 1724.69 485.589 1731.91 485.703 cv
1733.71 485.675 1735.44 485.495 1737.1 485.165 cv
1742.09 484.169 1746.47 481.788 1750.33 477.931 cv
1755.48 472.786 1758 466.727 1758 459.525 cv
1758 459.296 1758 459.067 1758 458.954 cv
1765.21 461.266 1772.42 463.553 1779.65 465.819 cv
1779.64 465.701 1779.63 465.588 1779.63 465.47 cv
1779.63 461.469 1781.12 457.924 1783.98 455.067 cv
1786.84 452.095 1790.39 450.609 1794.4 450.609 cv
1798.4 450.609 1801.95 452.095 1804.93 455.067 cv
1807.79 457.924 1809.27 461.469 1809.27 465.47 cv
1809.27 468.688 1808.3 471.601 1806.43 474.108 cv
1849.72 487.336 1893.3 499.806 1937.12 511.537 cv
1933.11 520.798 1931.05 530.857 1931.05 541.831 cv
1931.05 543.06 1931.12 544.257 1931.17 545.463 cv
1931.21 546.081 1931.24 546.7 1931.28 547.319 cv
1931.35 548.449 1931.46 549.555 1931.56 550.66 cv
1931.62 551.141 1931.66 551.628 1931.72 552.105 cv
1931.79 552.758 1931.89 553.401 1931.99 554.045 cv
1932.2 555.436 1932.44 556.82 1932.72 558.198 cv
1932.77 558.409 1932.81 558.624 1932.85 558.835 cv
1933.23 560.542 1933.65 562.229 1934.14 563.895 cv
1934.44 564.938 1934.77 565.97 1935.12 566.992 cv
1937.46 573.892 1940.88 580.312 1945.34 586.324 cv
1952.44 581.731 1959.95 578.12 1967.91 575.554 cv
1964.36 573.153 1960.93 570.41 1957.84 567.209 cv
1945.7 555.092 1939.64 540.46 1939.64 523.313 cv
1939.64 506.165 1945.7 491.533 1957.84 479.416 cv
1969.97 467.299 1984.62 461.239 2001.78 461.239 cv
cp
f
534.2 25 mo
534.085 25 li
533.515 25.5713 li
533.742 25.3438 533.971 25.1162 534.2 25 cv
cp
f
2009.54 515.486 mo
2010.57 516.515 2011.37 517.542 2012.05 518.8 cv
2011.37 517.542 2010.57 516.513 2009.54 515.486 cv
cp
f
553.062 65.8882 mo
554.662 67.4897 556.605 68.2896 558.777 68.4038 cv
556.605 68.2896 554.662 67.4878 553.062 65.8882 cv
cp
f
1824.92 72.6343 mo
1825.61 72.6343 1826.29 72.52 1826.98 72.4038 cv
1826.29 72.5181 1825.61 72.6343 1824.92 72.6343 cv
cp
f
2023.6 307.891 mo
2027.26 301.833 2031.94 296.803 2037.66 292.801 cv
2031.94 296.803 2027.26 301.833 2023.6 307.891 cv
cp
f
1819.31 67.8115 mo
1819.36 69.0845 1819.91 70.2471 1820.8 71.146 cv
1819.91 70.2471 1819.36 69.0835 1819.31 67.8115 cv
cp
f
1819.31 67.8115 mo
1819.3 67.6299 1819.3 67.4458 1819.32 67.2603 cv
1819.3 67.4458 1819.3 67.6299 1819.31 67.8115 cv
cp
f
1831.16 3.93115 mo
1831.71 4.96924 1832.24 6.06201 1832.69 7.24561 cv
1832.24 6.05908 1831.71 4.96924 1831.16 3.93115 cv
cp
f
1842.74 69.0757 mo
1837.41 69.2876 1832.12 70.4028 1826.86 72.4038 cv
1832.12 70.4028 1837.41 69.2905 1842.74 69.0757 cv
cp
f
2044.63 279.542 mo
2044.63 283.771 2043.15 287.543 2040.29 290.63 cv
2043.15 287.543 2044.63 283.771 2044.63 279.542 cv
cp
f
2026 239 mo
2025.89 239 li
2026 239.113 li
2026 239 li
cp
f
1850.69 118.929 mo
1850.69 120.674 1850.44 122.297 1850 123.843 cv
1850 123.845 li
1850.44 122.297 1850.69 120.676 1850.69 118.929 cv
cp
f
2040.29 268.683 mo
2043.15 271.654 2044.63 275.312 2044.63 279.542 cv
2044.63 275.312 2043.15 271.654 2040.29 268.683 cv
cp
f
2026.04 232.47 mo
2026.04 232.243 2026.05 232.018 2026.06 231.792 cv
2026.05 232.018 2026.04 232.243 2026.04 232.47 cv
cp
f
2026.05 234.324 mo
2026.04 233.704 2026.03 233.085 2026.04 232.47 cv
2026.03 233.085 2026.04 233.704 2026.05 234.324 cv
cp
f
2026.06 231.792 mo
2026.07 231.404 2026.08 231.016 2026.1 230.63 cv
2026.08 231.016 2026.07 231.404 2026.06 231.792 cv
cp
f
2026.1 230.63 mo
2026.1 230.587 2026.1 230.544 2026.1 230.501 cv
2026.1 230.544 2026.1 230.587 2026.1 230.63 cv
cp
f
2034.12 206.381 mo
2034.11 206.385 li
2029.24 213.959 2026.55 221.999 2026.1 230.501 cv
2026.55 221.997 2029.24 213.955 2034.12 206.381 cv
cp
f
1947.69 677.132 mo
1947.68 676.709 1947.7 676.276 1947.7 675.848 cv
1947.7 675.848 li
1947.7 676.276 1947.68 676.709 1947.69 677.132 cv
cp
f
1973.62 628.353 mo
1969.88 630.649 1966.33 633.442 1963 636.771 cv
1963 636.773 li
1966.33 633.442 1969.88 630.649 1973.62 628.353 cv
cp
f
2013.77 522.047 mo
2018 529.175 2023.73 534.976 2031.03 539.375 cv
2023.73 534.976 2018 529.175 2013.77 522.047 cv
cp
f
1993.93 514.512 mo
1993.64 514.754 1993.35 515.012 1993.08 515.288 cv
1993.35 515.012 1993.64 514.754 1993.93 514.512 cv
cp
f
2000.9 512 mo
2001.68 511.998 li
2004.33 511.986 2006.68 512.833 2008.69 514.515 cv
2006.58 512.746 2004.12 511.871 2001.31 511.973 cv
1998.49 511.872 1996.03 512.745 1993.93 514.512 cv
1995.93 512.84 1998.26 511.996 2000.9 512 cv
cp
f
2008.69 514.515 mo
2008.98 514.757 2009.26 515.013 2009.54 515.288 cv
2009.26 515.013 2008.98 514.756 2008.69 514.515 cv
cp
f
1963 636.771 mo
1956.79 643.047 1952.5 650.146 1950.08 658.014 cv
1952.5 650.146 1956.79 643.048 1963 636.773 cv
1963 636.771 li
cp
f
2008 345.042 mo
2006.97 346.034 2005.91 346.917 2004.82 347.751 cv
2005.91 346.918 2006.97 346.037 2008 345.044 cv
2008 345.042 li
cp
f
8 197.817 mo
8 4 li
6 4 li
6 196.846 li
6.66797 197.167 7.33203 197.495 8 197.817 cv
cp
f
409.798 59.1938 mo
411.355 59.1724 412.928 59.2251 414.514 59.3511 cv
412.928 59.2251 411.355 59.1724 409.798 59.1938 cv
cp
f
2065.55 546.092 mo
2071.01 545.315 2076.87 543.762 2083.15 541.478 cv
2083.15 541.478 li
2076.87 543.762 2071.01 545.315 2065.55 546.092 cv
cp
f
365.031 105.267 mo
367.277 104.436 369.323 103.077 371.188 101.212 cv
373.091 99.3071 374.467 97.2148 375.294 94.9126 cv
374.467 97.2148 373.091 99.3066 371.188 101.21 cv
369.323 103.077 367.277 104.435 365.031 105.267 cv
cp
f
2091.5 538.119 mo
2091.16 538.268 2090.84 538.393 2090.5 538.539 cv
2090.5 538.541 2090.51 538.539 2090.51 538.539 cv
2090.84 538.393 2091.16 538.268 2091.5 538.121 cv
2098.68 534.92 2107.4 533.883 2117.66 535.011 cv
2107.4 533.883 2098.68 534.919 2091.5 538.119 cv
cp
f
1941.98 722.508 mo
1934.89 733.826 1924.94 741.254 1912.03 744.57 cv
1924.94 741.256 1934.89 733.826 1941.98 722.508 cv
cp
f
249.114 142 mo
249 142 li
249 142.114 li
249.114 142 li
cp
f
1907.06 745.697 mo
1895.8 747.52 1885.07 745.57 1874.76 739.769 cv
1885.07 745.572 1895.8 747.521 1907.06 745.697 cv
cp
f
574.822 29.9727 mo
544.805 18.2007 526.845 11.7881 520.939 10.7876 cv
526.843 11.7881 544.805 18.2007 574.822 29.9727 cv
cp
f
111 123.116 mo
111 123 li
110.887 123 li
110.887 123 110.887 123 110.886 123 cv
111 123.116 li
cp
f
560.035 11.5903 mo
558.766 11.7974 558.193 12.2886 558.28 13.0503 cv
558.194 12.2915 558.766 11.7974 560.035 11.5903 cv
cp
f
1846.06 732.416 mo
1847.84 732.732 1849.66 732.997 1851.56 733.14 cv
1849.66 732.997 1847.84 732.732 1846.06 732.416 cv
1846.06 732.416 li
cp
f
347.41 101.212 mo
350.725 104.528 354.727 106.241 359.414 106.241 cv
354.727 106.241 350.727 104.528 347.41 101.21 cv
344.51 98.3091 342.922 94.9722 342.57 91.1187 cv
342.922 94.9722 344.51 98.311 347.41 101.212 cv
cp
f
359.414 72.6343 mo
363.986 72.6343 367.873 74.2329 371.188 77.5474 cv
367.873 74.2329 363.986 72.6343 359.414 72.6343 cv
cp
f
1602.53 418.251 mo
1600.99 417.979 1599.44 417.726 1597.9 417.462 cv
1593.29 416.679 1588.67 415.938 1584.04 415.231 cv
1582.21 414.947 1580.37 414.652 1578.53 414.382 cv
1573.12 413.589 1567.71 412.856 1562.28 412.164 cv
1559.92 411.862 1557.54 411.579 1555.17 411.295 cv
1551.04 410.802 1546.91 410.339 1542.77 409.903 cv
1540.69 409.685 1538.62 409.452 1536.54 409.249 cv
1531.11 408.718 1525.67 408.244 1520.22 407.811 cv
1518.23 407.652 1516.24 407.503 1514.25 407.357 cv
1508.23 406.92 1502.2 406.511 1496.15 406.194 cv
1490.81 405.993 1485.47 405.832 1480.13 405.712 cv
1469.46 405.47 1458.8 405.383 1448.16 405.454 cv
1379 405.924 1310.5 413.046 1242.6 426.886 cv
1242.53 426.899 1242.46 426.915 1242.38 426.929 cv
1235.72 428.173 1229.16 429.53 1222.48 431 cv
1662.71 431 li
1649.38 427.675 1635.99 424.681 1622.55 421.996 cv
1622.06 421.898 1621.57 421.798 1621.08 421.699 cv
1614.91 420.479 1608.73 419.336 1602.53 418.251 cv
cp
.658869 0 .00482185 0 cmyk
f
168.249 426 mo
169.771 425.995 li
169.537 425.993 169.315 425.968 169.08 425.971 cv
168.145 425.96 167.23 426.004 166.321 426.064 cv
166.955 426.022 167.6 426.004 168.249 426 cv
cp
f
6 196.779 mo
6 346.072 li
6.66797 346.394 7.33203 346.722 8 347.043 cv
8 212.094 li
8.05225 211.943 li
8.03809 211.954 8.02393 211.963 8.01025 211.974 cv
8 211.969 li
8 197.75 li
7.33203 197.429 6.66797 197.101 6 196.779 cv
cp
f
15.4424 346.407 mo
13.7754 347.164 12.1074 347.841 10.4395 348.464 cv
35.0703 360.03 59.5967 371.984 83.918 384.36 cv
93.1602 389.051 102.401 393.739 111.643 398.43 cv
127.598 383.232 146.771 375.558 169.08 375.558 cv
192.058 375.558 211.605 383.675 227.724 399.792 cv
237.01 409.079 243.628 419.493 247.623 431 cv
492.476 431 li
470.972 422.263 449.604 413.238 428.34 403.989 cv
426.721 403.286 425.101 402.584 423.483 401.876 cv
417.148 399.108 410.826 396.313 404.514 393.498 cv
401.109 391.979 397.702 390.47 394.304 388.937 cv
389.898 386.954 385.504 384.945 381.109 382.939 cv
376.244 380.718 371.378 378.502 366.525 376.255 cv
363.739 374.964 360.961 373.65 358.178 372.351 cv
352.075 369.5 345.973 366.648 339.891 363.753 cv
338.584 363.133 337.283 362.496 335.979 361.873 cv
320.371 354.417 304.822 346.834 289.34 339.093 cv
223.3 305.685 157.261 272.276 91.2207 238.767 cv
88.999 240.026 86.7314 241.245 84.374 242.382 cv
69.1699 249.583 53.7383 252.898 38.1914 252.557 cv
40.5918 255.871 42.877 259.644 44.8223 263.644 cv
52.1377 279.075 52.9375 294.966 47.2217 311.085 cv
41.3926 327.203 30.875 338.976 15.4424 346.407 cv
cp
f
1858.87 539.034 mo
1857.27 540.75 1855.33 541.549 1852.93 541.549 cv
1850.53 541.549 1848.58 540.75 1846.87 539.034 cv
1845.27 537.432 1844.47 535.49 1844.47 533.205 cv
1844.47 530.803 1845.27 528.86 1846.87 527.145 cv
1848.58 525.545 1850.53 524.746 1852.93 524.746 cv
1855.33 524.746 1857.27 525.545 1858.87 527.145 cv
1860.58 528.86 1861.38 530.803 1861.38 533.205 cv
1861.38 535.49 1860.58 537.432 1858.87 539.034 cv
cp
1761.59 535.148 mo
1760.79 536.061 1759.76 536.519 1758.73 536.519 cv
1757.59 536.519 1756.56 536.061 1755.65 535.148 cv
1754.85 534.348 1754.5 533.432 1754.5 532.289 cv
1754.5 531.147 1754.85 530.118 1755.65 529.318 cv
1756.56 528.516 1757.59 528.061 1758.73 528.174 cv
1759.76 528.061 1760.79 528.516 1761.59 529.318 cv
1762.39 530.118 1762.85 531.147 1762.96 532.289 cv
1762.85 533.432 1762.39 534.348 1761.59 535.148 cv
cp
1710.38 514.342 mo
1709.12 515.599 1707.63 516.286 1705.69 516.401 cv
1703.75 516.286 1702.15 515.599 1700.78 514.342 cv
1699.52 513.084 1698.94 511.485 1698.94 509.656 cv
1698.94 507.712 1699.52 505.997 1700.78 504.74 cv
1702.15 503.482 1703.75 502.796 1705.69 502.911 cv
1707.63 502.796 1709.12 503.482 1710.38 504.74 cv
1711.75 505.997 1712.44 507.712 1712.44 509.656 cv
1712.44 511.485 1711.75 513.084 1710.38 514.342 cv
cp
510.994 536.405 mo
509.851 537.663 508.479 538.235 506.992 538.235 cv
505.393 538.235 504.021 537.663 502.764 536.405 cv
501.621 535.262 501.049 533.89 501.049 532.289 cv
501.049 530.803 501.621 529.432 502.764 528.174 cv
504.021 527.031 505.393 526.459 506.992 526.459 cv
508.479 526.459 509.851 527.031 510.994 528.174 cv
512.252 529.432 512.824 530.803 512.824 532.289 cv
512.824 533.89 512.252 535.262 510.994 536.405 cv
cp
483.902 495.823 mo
481.387 498.224 478.414 499.482 474.985 499.482 cv
471.441 499.482 468.469 498.224 466.068 495.823 cv
463.554 493.308 462.297 490.335 462.297 486.907 cv
462.297 483.362 463.554 480.391 466.068 477.991 cv
468.469 475.475 471.441 474.217 474.985 474.332 cv
478.414 474.217 481.387 475.475 483.902 477.991 cv
486.302 480.391 487.56 483.362 487.56 486.907 cv
487.56 490.335 486.302 493.308 483.902 495.823 cv
cp
403.311 532.974 mo
402.167 534.232 400.795 534.803 399.195 534.803 cv
397.709 534.803 396.338 534.232 395.08 532.974 cv
393.937 531.833 393.365 530.459 393.365 528.974 cv
393.365 527.375 393.937 526.001 395.08 524.746 cv
396.338 523.602 397.709 523.031 399.195 523.031 cv
400.795 523.031 402.167 523.602 403.311 524.746 cv
404.566 526.001 405.139 527.375 405.139 528.974 cv
405.139 530.459 404.566 531.833 403.311 532.974 cv
cp
1806.4 474.754 mo
1805.94 475.365 1805.45 475.959 1804.89 476.52 cv
1801.92 479.377 1798.37 480.864 1794.37 480.864 cv
1790.37 480.864 1786.82 479.377 1783.96 476.52 cv
1781.19 473.744 1779.72 470.318 1779.63 466.461 cv
1772.41 464.193 1765.2 461.905 1758 459.593 cv
1758 459.706 1758 459.935 1758 460.164 cv
1758 467.369 1755.48 473.431 1750.34 478.579 cv
1746.48 482.438 1742.1 484.819 1737.12 485.816 cv
1735.46 486.146 1733.73 486.326 1731.93 486.354 cv
1724.72 486.24 1718.54 483.724 1713.4 478.579 cv
1708.36 473.431 1705.85 467.369 1705.85 460.164 cv
1705.85 454.959 1707.16 450.281 1709.87 446.128 cv
1710.25 445.534 1710.67 444.953 1711.11 444.381 cv
1695.1 439.462 1678.97 435.003 1662.84 431 cv
1222.41 431 li
1218.18 431.87 1213.95 432.774 1209.71 433.651 cv
1195.75 436.538 1181.79 439.434 1167.84 442.392 cv
1165.25 442.94 1162.68 443.501 1160.1 444.05 cv
1105.72 455.635 1051.44 467.742 997.221 480.408 cv
945.97 492.561 894.36 499.349 842.394 500.779 cv
832.001 501.065 821.594 501.137 811.171 500.993 cv
800.75 500.851 790.314 500.493 779.864 499.921 cv
769.413 499.349 758.949 498.563 748.47 497.562 cv
727.942 495.38 707.573 492.493 687.365 488.912 cv
687.308 488.901 687.25 488.894 687.193 488.882 cv
686.051 488.681 684.918 488.442 683.775 488.236 cv
651.173 482.316 618.979 474.612 587.21 465.083 cv
588.497 468.426 589.333 472.028 589.671 475.792 cv
589.784 477.047 589.84 478.318 589.84 479.606 cv
589.84 490.243 586.066 499.277 578.404 506.826 cv
570.855 514.489 561.82 518.263 551.183 518.263 cv
540.547 518.263 531.397 514.489 523.736 506.826 cv
516.187 499.277 512.414 490.243 512.414 479.606 cv
512.414 468.971 516.187 459.82 523.736 452.158 cv
526.024 449.756 528.424 447.812 531.055 446.325 cv
523.622 443.465 516.187 440.607 508.753 437.633 cv
503.15 435.46 497.659 433.172 492.056 431 cv
247.086 431 li
250.076 439.612 251.603 448.839 251.653 458.676 cv
251.653 462.325 251.379 465.801 250.983 469.208 cv
263.596 475.57 276.21 481.935 288.823 488.299 cv
292.597 490.243 296.485 492.073 300.26 494.018 cv
328.279 507.856 356.414 521.237 384.777 534.16 cv
384.435 534.619 384.091 535.074 383.749 535.646 cv
383.634 535.761 383.405 535.99 383.292 536.333 cv
393.242 540.337 402.619 544.226 411.54 548 cv
411.998 548 li
412.112 547.884 412.112 547.884 412.226 547.77 cv
415.085 544.912 418.402 543.539 422.404 543.539 cv
426.293 543.539 429.611 544.912 432.47 547.77 cv
432.583 547.884 432.583 547.884 432.698 548 cv
456.36 548 li
457.239 546.5 458.295 545.083 459.574 543.768 cv
463.691 539.766 468.725 537.704 474.557 537.704 cv
480.389 537.704 485.308 539.766 489.31 543.768 cv
490.625 545.083 491.709 546.5 492.606 548 cv
1810.95 548 li
1816.79 523.638 li
1831.31 548 li
1931.15 548 li
1931.12 547.468 1931.09 546.936 1931.06 546.404 cv
1930.99 545.153 1930.93 543.9 1930.93 542.648 cv
1930.91 531.615 1932.97 521.505 1936.99 512.201 cv
1893.2 500.464 1849.66 487.988 1806.4 474.754 cv
cp
f
412.456 548 mo
411.998 548 li
412.112 548.113 412.227 548.113 412.341 548.228 cv
412.341 548.113 412.341 548.113 412.456 548 cv
cp
f
433.146 548 mo
435.775 550.629 437.032 553.829 437.147 557.602 cv
439.09 558.401 440.92 559.201 442.863 560.001 cv
446.939 561.636 450.889 563.215 454.778 564.77 cv
454.233 562.882 453.951 560.877 453.951 558.746 cv
453.951 554.776 454.927 551.189 456.797 548 cv
433.146 548 li
cp
f
568.494 556.868 mo
567.465 557.897 566.322 558.352 564.95 558.469 cv
563.578 558.352 562.436 557.897 561.406 556.868 cv
560.378 555.837 559.92 554.696 559.92 553.323 cv
559.92 551.952 560.378 550.807 561.406 549.78 cv
562.436 548.75 563.578 548.292 564.95 548.292 cv
566.322 548.292 567.465 548.75 568.494 549.78 cv
569.523 550.807 569.98 551.952 570.094 553.323 cv
569.98 554.696 569.523 555.837 568.494 556.868 cv
cp
639.025 600.125 mo
658.002 631.81 li
687.838 638.057 718.131 642.94 748.768 646.233 cv
806.268 651.569 863.31 650.662 920.01 643.28 cv
940.014 609.778 li
947.101 639.306 li
959.564 637.148 971.906 634.764 984.37 632.039 cv
998.772 571.962 li
1028.61 621.931 li
1051.82 616.593 1075.13 611.482 1098.45 606.372 cv
1102 599.784 1106.57 593.652 1112.17 588.087 cv
1127.15 573.325 1145.09 565.942 1166.24 565.942 cv
1184.19 565.942 1199.85 571.279 1213.22 581.954 cv
1222.94 579.911 1232.77 577.98 1242.6 576.049 cv
1326.17 559.128 1410.65 552.315 1496.15 555.496 cv
1568.17 559.243 1638.59 571.507 1707.29 592.178 cv
1717.35 550.612 li
1750.5 606.146 li
1762.73 610.006 1774.96 613.868 1787.2 617.728 cv
1816.92 584 li
1802.17 584 li
1810.75 548 li
493.026 548 li
494.94 551.168 495.941 554.732 496.02 558.676 cv
495.905 564.467 493.848 569.349 489.731 573.325 cv
488.378 574.707 486.91 575.836 485.348 576.756 cv
547.084 601.082 577.152 612.208 575.354 610.232 cv
594.328 616.138 613.533 621.477 632.854 626.131 cv
639.025 600.125 li
cp
f
1866.94 642.302 mo
1872.78 632.908 li
1900.21 648.833 li
1904.56 631.09 1913.63 615.277 1927.44 601.396 cv
1932.99 595.85 1938.87 591.105 1945.06 587.098 cv
1940.59 581.071 1937.17 574.636 1934.83 567.72 cv
1934.48 566.695 1934.16 565.66 1933.86 564.615 cv
1933.35 562.952 1932.93 561.256 1932.56 559.543 cv
1932.51 559.299 1932.46 559.051 1932.41 558.807 cv
1932.15 557.538 1931.92 556.25 1931.73 554.952 cv
1931.62 554.235 1931.51 553.523 1931.43 552.798 cv
1931.37 552.319 1931.32 551.833 1931.27 551.349 cv
1931.17 550.241 1931.06 549.133 1930.99 548 cv
1830.96 548 li
1847.95 576.646 li
1850.23 577.444 1852.32 578.763 1854.22 580.657 cv
1857.54 583.979 1859.26 587.989 1859.26 592.575 cv
1859.26 597.158 1857.54 601.053 1854.22 604.375 cv
1850.9 607.698 1847 609.417 1842.42 609.532 cv
1841.7 609.513 1841.01 609.447 1840.33 609.356 cv
1846.66 636 li
1845.17 636 li
1852.38 638.064 1859.72 640.126 1866.94 642.302 cv
cp
f
1948.66 663.539 mo
1948.79 662.822 1949 662.139 1949.17 661.432 cv
1949.17 661.432 li
1949 662.139 1948.79 662.822 1948.66 663.539 cv
cp
f
1705.69 502.911 mo
1703.75 502.796 1702.15 503.482 1700.78 504.74 cv
1699.52 505.997 1698.94 507.712 1698.94 509.656 cv
1698.94 511.485 1699.52 513.084 1700.78 514.342 cv
1702.15 515.599 1703.75 516.286 1705.69 516.401 cv
1707.63 516.286 1709.12 515.599 1710.38 514.342 cv
1711.75 513.084 1712.44 511.485 1712.44 509.656 cv
1712.44 507.712 1711.75 505.997 1710.38 504.74 cv
1709.12 503.482 1707.63 502.796 1705.69 502.911 cv
cp
.705104 .0487068 .045655 0 cmyk
f
1755.65 529.318 mo
1754.85 530.118 1754.5 531.147 1754.5 532.289 cv
1754.5 533.432 1754.85 534.348 1755.65 535.148 cv
1756.56 536.061 1757.59 536.519 1758.73 536.519 cv
1759.76 536.519 1760.79 536.061 1761.59 535.148 cv
1762.39 534.348 1762.85 533.432 1762.96 532.289 cv
1762.85 531.147 1762.39 530.118 1761.59 529.318 cv
1760.79 528.516 1759.76 528.061 1758.73 528.174 cv
1757.59 528.061 1756.56 528.516 1755.65 529.318 cv
cp
f
502.764 528.174 mo
501.621 529.432 501.049 530.803 501.049 532.289 cv
501.049 533.89 501.621 535.262 502.764 536.405 cv
504.021 537.663 505.393 538.235 506.992 538.235 cv
508.479 538.235 509.851 537.663 510.994 536.405 cv
512.252 535.262 512.824 533.89 512.824 532.289 cv
512.824 530.803 512.252 529.432 510.994 528.174 cv
509.851 527.031 508.479 526.459 506.992 526.459 cv
505.393 526.459 504.021 527.031 502.764 528.174 cv
cp
f
561.406 549.78 mo
560.378 550.807 559.92 551.952 559.92 553.323 cv
559.92 554.696 560.378 555.837 561.406 556.868 cv
562.436 557.897 563.578 558.352 564.95 558.469 cv
566.322 558.352 567.465 557.897 568.494 556.868 cv
569.523 555.837 569.98 554.696 570.094 553.323 cv
569.98 551.952 569.523 550.807 568.494 549.78 cv
567.465 548.75 566.322 548.292 564.95 548.292 cv
563.578 548.292 562.436 548.75 561.406 549.78 cv
cp
f
466.068 477.991 mo
463.554 480.391 462.297 483.364 462.297 486.907 cv
462.297 490.335 463.554 493.308 466.068 495.823 cv
468.469 498.224 471.441 499.482 474.985 499.482 cv
478.414 499.482 481.387 498.224 483.902 495.823 cv
486.302 493.308 487.56 490.335 487.56 486.907 cv
487.56 483.364 486.302 480.391 483.902 477.991 cv
481.387 475.475 478.414 474.217 474.985 474.332 cv
471.441 474.217 468.469 475.475 466.068 477.991 cv
cp
f
395.08 524.746 mo
393.937 526.001 393.365 527.375 393.365 528.974 cv
393.365 530.459 393.937 531.833 395.08 532.974 cv
396.338 534.232 397.709 534.803 399.195 534.803 cv
400.795 534.803 402.167 534.232 403.311 532.974 cv
404.566 531.833 405.139 530.459 405.139 528.974 cv
405.139 527.375 404.566 526.001 403.311 524.746 cv
402.167 523.602 400.795 523.031 399.195 523.031 cv
397.709 523.031 396.338 523.602 395.08 524.746 cv
cp
f
2143 686.5 mo
2143 615.624 li
2142.26 616.196 2141.63 616.768 2141 617.339 cv
2141 686.654 li
2141.67 686.602 2142.33 686.559 2143 686.5 cv
cp
.658869 0 .00482185 0 cmyk
f
2143 541.19 mo
2143 541.185 li
2143 541.19 li
2143 541.19 li
cp
f
2143 541.185 mo
2143 541.19 li
2143.34 541.188 2143 541.185 2143 541.185 cv
cp
f
2144 562.194 mo
2144 541.206 li
2144 537.205 li
2143.38 537.205 2143 537.208 2143 537.208 cv
2143 541.185 li
2143 541.185 2143.34 541.188 2143 541.19 cv
2144 562.194 li
cp
f
1973.64 628.353 mo
1975 627.518 1976.38 626.732 1977.8 626.035 cv
1976.38 626.732 1975 627.518 1973.64 628.353 cv
1973.64 628.353 li
cp
f
2090.51 538.539 mo
2090.51 538.539 2090.5 538.541 2090.5 538.539 cv
2087.99 539.626 2085.54 540.607 2083.15 541.478 cv
2085.54 540.609 2087.99 539.626 2090.51 538.539 cv
cp
f
412.536 547.493 mo
412.423 547.609 412.309 547.723 412.193 547.951 cv
409.564 550.58 408.308 553.78 408.308 557.553 cv
408.308 561.44 409.679 564.754 412.536 567.613 cv
415.395 570.469 418.71 571.843 422.71 571.843 cv
426.597 571.843 429.913 570.469 432.771 567.613 cv
435.513 564.754 436.886 561.44 437 557.553 cv
437 557.439 437 557.439 437 557.325 cv
436.886 553.552 435.513 550.238 432.771 547.493 cv
429.913 544.636 426.597 543.264 422.71 543.264 cv
418.71 543.264 415.395 544.636 412.536 547.493 cv
cp
.705104 .0487068 .045655 0 cmyk
f
1253 994.232 mo
1252.32 994.119 1251.63 994.119 1250.83 994.119 cv
1249.91 994.005 1249 994.005 1248.09 993.889 cv
1249 993.889 1249.91 993.889 1250.83 994.005 cv
1251.63 994.005 1252.32 994.005 1253 994.119 cv
1253 994.232 li
cp
1331.65 874.228 mo
1331.65 874.114 1331.65 874.114 1331.76 874 cv
1331.88 874 li
1331.88 873.887 1331.88 873.771 1331.99 873.655 cv
1339 862.392 1348.47 854.438 1360.32 849.804 cv
1364.38 835.62 li
1300.18 731.937 li
1218.16 779.368 li
1231.71 732.281 li
1217.58 731.479 li
1218.5 729.989 1218.96 728.387 1218.96 726.439 cv
1218.96 725.179 1218.73 724.032 1218.39 723 cv
1218.5 723 1218.66 723 1218.78 723 cv
1224.03 723 1228.49 721.174 1232.14 717.515 cv
1235.91 713.742 1237.74 709.284 1237.74 704.026 cv
1237.74 698.652 1235.91 694.193 1232.14 690.535 cv
1230.66 689.05 1228.94 687.793 1227.23 686.879 cv
1236.94 673.96 1241.85 658.872 1241.96 641.725 cv
1241.85 620.577 1234.42 602.628 1219.58 587.768 cv
1217.41 585.48 1215.12 583.424 1212.72 581.594 cv
1199.36 570.849 1183.71 565.477 1165.77 565.477 cv
1144.64 565.477 1126.7 572.908 1111.74 587.768 cv
1106.14 593.369 1101.57 599.541 1098.03 606.173 cv
1092.43 616.805 1089.58 628.691 1089.58 641.725 cv
1089.58 662.872 1097 680.819 1111.74 695.565 cv
1126.7 710.541 1144.64 717.971 1165.77 717.971 cv
1178.45 717.971 1190.11 715.228 1200.61 709.855 cv
1201.41 712.484 1202.78 714.886 1204.84 717.057 cv
1203.7 717.515 1202.67 718.2 1201.76 719.114 cv
1199.81 721.174 1198.79 723.572 1198.9 726.432 cv
1198.9 727.916 1199.13 729.288 1199.7 730.546 cv
1166.91 728.946 li
1176.17 803.479 li
1114.82 839.145 li
1166 850.918 li
1168.18 994.212 li
1221.86 995.756 li
1222.77 995.869 1223.69 995.869 1224.71 995.983 cv
1225.51 995.983 1226.2 995.983 1227 996.097 cv
1227 996.587 li
1257.42 998.159 1287.25 1000.21 1316.54 1002.69 cv
1332.57 946.728 li
1329.49 942.779 1326.95 938.444 1324.99 933.69 cv
1323.72 930.825 1322.8 927.731 1322 924.638 cv
1322 924.523 li
1317.98 908.256 1320.28 893.019 1328.89 878.697 cv
1331.65 874.228 li
cp
f
1336.23 898.666 mo
1334.77 892.837 1334.15 887.135 1334.27 881.61 cv
1334.15 887.135 1334.77 892.837 1336.23 898.666 cv
cp
f
1572.06 618.37 mo
1568.06 622.483 1566 627.513 1566 633.343 cv
1566 639.172 1568.06 644.088 1572.06 648.089 cv
1576.17 652.205 1581.2 654.264 1587.03 654.376 cv
1592.86 654.264 1597.89 652.205 1601.9 648.089 cv
1606.01 644.088 1608.06 639.172 1608.06 633.343 cv
1608.06 627.513 1606.01 622.483 1601.9 618.37 cv
1597.89 614.367 1592.86 612.309 1587.03 612.309 cv
1581.2 612.309 1576.17 614.367 1572.06 618.37 cv
cp
f
1752.67 620.54 mo
1750.5 622.597 1749.47 625.112 1749.47 628.2 cv
1749.47 631.286 1750.5 633.801 1752.67 635.972 cv
1754.73 638.145 1757.25 639.172 1760.33 639.172 cv
1763.42 639.172 1765.93 638.145 1768.11 635.972 cv
1770.28 633.801 1771.31 631.286 1771.31 628.2 cv
1771.31 625.112 1770.28 622.597 1768.11 620.54 cv
1765.93 618.37 1763.42 617.339 1760.33 617.339 cv
1757.25 617.339 1754.73 618.37 1752.67 620.54 cv
cp
f
1730.72 674.383 mo
1729.7 675.41 1729.24 676.555 1729.24 677.926 cv
1729.24 679.184 1729.7 680.439 1730.72 681.471 cv
1731.76 682.497 1732.9 682.955 1734.27 682.955 cv
1735.64 682.955 1736.78 682.497 1737.81 681.471 cv
1738.84 680.439 1739.3 679.184 1739.3 677.926 cv
1739.3 676.555 1738.84 675.41 1737.81 674.383 cv
1736.78 673.354 1735.64 672.781 1734.27 672.781 cv
1732.9 672.781 1731.76 673.354 1730.72 674.383 cv
cp
f
1579.72 699.875 mo
1578.46 701.246 1577.77 702.846 1577.77 704.789 cv
1577.77 706.732 1578.46 708.219 1579.72 709.477 cv
1580.98 710.848 1582.57 711.534 1584.52 711.534 cv
1586.46 711.534 1587.95 710.848 1589.2 709.477 cv
1590.58 708.219 1591.26 706.732 1591.26 704.789 cv
1591.26 702.846 1590.58 701.246 1589.2 699.875 cv
1587.95 698.617 1586.46 698.045 1584.52 698.045 cv
1582.57 698.045 1580.98 698.617 1579.72 699.875 cv
cp
f
1558 748.916 mo
1555.48 751.314 1554.23 754.287 1554.23 757.832 cv
1554.23 761.26 1555.48 764.234 1558 766.748 cv
1560.39 769.146 1563.37 770.404 1566.91 770.404 cv
1570.34 770.404 1573.31 769.146 1575.83 766.748 cv
1578.23 764.234 1579.49 761.26 1579.49 757.832 cv
1579.49 754.287 1578.23 751.314 1575.83 748.916 cv
1573.31 746.4 1570.34 745.143 1566.91 745.143 cv
1563.37 745.143 1560.39 746.4 1558 748.916 cv
cp
f
1465.06 767.09 mo
1463.12 766.977 1461.51 767.662 1460.14 768.919 cv
1458.89 770.177 1458.32 771.893 1458.32 773.836 cv
1458.32 775.666 1458.89 777.264 1460.14 778.521 cv
1461.51 779.779 1463.12 780.465 1465.06 780.578 cv
1467 780.465 1468.49 779.779 1469.75 778.521 cv
1471.12 777.264 1471.8 775.666 1471.8 773.836 cv
1471.8 771.893 1471.12 770.177 1469.75 768.919 cv
1468.49 767.662 1467 766.977 1465.06 767.09 cv
cp
f
1729.24 751.887 mo
1729.24 757.945 1731.41 763.203 1735.64 767.434 cv
1736.8 768.592 1738.03 769.572 1739.33 770.409 cv
1740.75 762.684 1742.97 755.283 1746.04 748 cv
1746.45 748 li
1749.07 741.513 1752.21 735.917 1755.91 730.566 cv
1754.36 730.235 1752.75 730.053 1751.07 730.053 cv
1745.01 730.053 1739.87 732.225 1735.64 736.455 cv
1731.41 740.685 1729.24 745.828 1729.24 751.887 cv
cp
f
1746.04 749 mo
1757.86 749 li
1757.86 748.229 1757.86 748.229 1757.86 748 cv
1746.45 748 li
1746.32 748.335 1746.18 748.66 1746.04 749 cv
cp
f
1740.19 838.779 mo
1731.64 839.328 1723.58 837.817 1715.91 834.153 cv
1723.58 837.817 1731.64 839.331 1740.19 838.779 cv
cp
f
553.176 642.604 mo
551.232 642.486 549.632 643.176 548.375 644.43 cv
547.117 645.689 546.432 647.289 546.432 649.232 cv
546.432 651.176 547.117 652.777 548.375 654.035 cv
549.632 655.291 551.232 655.979 553.176 655.979 cv
555.12 655.979 556.719 655.291 557.977 654.035 cv
559.234 652.777 559.92 651.176 559.92 649.232 cv
559.92 647.289 559.234 645.688 557.977 644.43 cv
556.719 643.176 555.119 642.486 553.176 642.604 cv
cp
f
426.631 899.352 mo
429.03 899.238 430.975 900.037 432.574 901.637 cv
430.975 900.037 429.031 899.238 426.631 899.352 cv
cp
f
404.174 948.743 mo
407.144 948.064 410.036 947.377 412.798 946.678 cv
410.035 947.377 407.144 948.064 404.174 948.743 cv
cp
f
295.735 888.93 mo
285.801 899.07 li
286.768 902.451 li
302.099 906.698 317.223 911.244 332.109 916.139 cv
307.516 892.15 li
307.381 892.015 307.32 891.855 307.211 891.711 cv
303.398 890.764 299.574 889.838 295.735 888.93 cv
cp
f
294.598 709.019 mo
292.819 708.477 291.104 707.844 289.438 707.145 cv
289.432 707.156 li
291.104 707.846 292.812 708.488 294.598 709.019 cv
cp
f
453 965.095 mo
456.906 967.026 460.766 969.019 464.634 971 cv
488.322 971 li
483.665 954.364 li
473.574 949.516 463.348 944.86 453 940.384 cv
453 965.095 li
cp
f
367.534 753.195 mo
372.57 756.51 377.378 760.512 381.842 764.971 cv
396.951 780.059 405.536 797.777 407.712 818.125 cv
412.176 817.212 416.754 816.754 421.677 816.754 cv
430.755 816.754 439.205 818.376 447 821.604 cv
447.547 786.804 li
498.829 775.028 li
437.359 739.479 li
446.63 664.83 li
413.779 666.545 li
414.351 665.287 414.581 663.803 414.581 662.314 cv
414.581 659.458 413.664 657.057 411.717 655.113 cv
410.688 654.2 409.658 653.512 408.628 652.942 cv
409.428 652.141 410.117 651.228 410.688 650.313 cv
411.489 649.626 412.291 648.939 413.092 648.254 cv
419.159 642.197 422.135 634.766 422.135 626.193 cv
422.135 617.504 419.159 610.188 413.092 604.13 cv
407.025 598.07 399.584 594.985 391 594.985 cv
391 594.983 li
382.3 594.983 374.974 598.07 368.907 604.13 cv
362.84 610.188 359.864 617.504 359.864 626.193 cv
359.864 634.766 362.84 642.197 368.907 648.254 cv
373.714 653.057 379.438 655.913 385.963 656.943 cv
388.658 658.347 391.592 659.032 394.89 658.999 cv
394.891 658.999 394.891 659 394.891 659 cv
394.549 660.029 394.319 661.057 394.319 662.314 cv
394.319 664.258 394.776 665.974 395.808 667.459 cv
381.727 668.261 li
395.235 715.128 li
384.844 709.126 li
384.903 710.279 384.933 711.442 384.933 712.613 cv
384.933 728.527 379.091 742.129 367.532 753.176 cv
367.533 753.185 367.533 753.187 367.534 753.195 cv
cp
f
327.117 784.097 mo
328.963 786.556 331.012 788.841 333.3 790.918 cv
333.3 790.918 li
331.012 788.841 328.963 786.556 327.117 784.097 cv
cp
f
294.148 700 mo
367.412 700 li
367.385 699 li
294.158 699 li
294.148 700 li
cp
f
371.43 960 mo
368.682 958.745 365.951 957.46 363.187 956.228 cv
365.951 957.46 368.68 958.745 371.428 960 cv
371.43 960 li
cp
f
354.585 904.353 mo
340.615 918.627 li
348.795 921.395 356.931 924.229 364.979 927.19 cv
381.327 933.25 397.331 939.651 413.105 946.396 cv
423.069 950.757 432.88 955.329 442.621 960 cv
445 960 li
445.347 937.007 li
445.343 937.002 445.341 936.998 445.337 936.992 cv
435.394 932.839 425.454 928.81 415.393 924.903 cv
395.565 917.44 375.283 910.595 354.585 904.353 cv
cp
f
468.24 836.596 mo
469.713 838.066 471.186 839.65 472.547 841.238 cv
463.325 802.756 li
450.796 823.867 li
457.067 827.014 462.893 831.248 468.24 836.596 cv
cp
f
332.778 716.906 mo
333.807 715.879 334.265 714.621 334.265 713.133 cv
334.265 714.618 333.807 715.879 332.778 716.906 cv
cp
f
317.917 743.541 mo
319.86 733.598 324.434 725.137 331.636 717.936 cv
324.434 725.137 319.86 733.596 317.917 743.541 cv
cp
f
347.525 906.783 mo
337.693 916.842 li
337.694 916.842 li
347.525 906.783 li
cp
f
463.794 655.25 mo
466.771 657.932 470.16 659.297 474.07 659.406 cv
478.3 659.293 481.844 657.805 484.701 654.835 cv
487.788 651.861 489.273 648.316 489.273 644.202 cv
489.273 640.088 487.788 636.543 484.701 633.458 cv
481.844 630.6 478.3 629.113 474.07 629.113 cv
469.955 629.113 466.412 630.6 463.325 633.458 cv
461.021 635.948 459.625 638.739 459.165 641.883 cv
460.411 640.951 461.795 640.455 463.325 640.545 cv
465.268 640.43 467.098 641.232 468.584 642.717 cv
470.069 644.202 470.755 645.918 470.755 647.975 cv
470.755 649.918 470.069 651.635 468.584 653.119 cv
467.219 654.486 465.56 655.146 463.794 655.25 cv
cp
f
650.114 720.908 mo
647.257 723.993 645.77 727.537 645.77 731.768 cv
645.77 735.883 647.257 739.427 650.114 742.283 cv
653.201 745.371 656.745 746.855 660.86 746.855 cv
665.09 746.855 668.633 745.371 671.491 742.283 cv
674.578 739.427 676.063 735.883 676.063 731.768 cv
676.063 727.537 674.578 723.993 671.491 720.908 cv
668.633 718.049 665.09 716.564 660.86 716.564 cv
656.745 716.564 653.201 718.049 650.114 720.908 cv
cp
f
674.35 760.347 mo
673.205 761.605 672.634 762.977 672.634 764.576 cv
672.634 766.063 673.205 767.434 674.35 768.577 cv
675.606 769.834 676.979 770.404 678.578 770.404 cv
680.064 770.404 681.436 769.834 682.58 768.577 cv
683.838 767.434 684.409 766.063 684.409 764.576 cv
684.409 762.977 683.838 761.605 682.58 760.347 cv
681.436 759.203 680.064 758.631 678.578 758.631 cv
676.979 758.631 675.606 759.203 674.35 760.347 cv
cp
f
804.185 876 mo
804 876 li
804 876.772 li
804.185 876 li
cp
f
829 984 mo
829 928 li
831.808 928 li
821.012 821.156 li
818.367 816.684 li
804.185 876 li
818.88 876 li
773.67 927.506 li
809.952 926.705 li
800.338 960.812 li
759.362 914 li
773.905 914 li
759.262 852.894 li
722.943 914 li
741.161 914 li
728.939 966 li
748 966 li
748 1004.71 li
757.707 1003.78 767.5 1002.91 777.345 1002.08 cv
767.011 965.099 li
797.272 965.773 li
792.21 984 li
829 984 li
cp
f
1005.17 712.563 mo
1003.35 714.276 1002.43 716.451 1002.54 719.08 cv
1002.43 721.709 1003.35 723.879 1005.17 725.709 cv
1007 727.424 1009.18 728.338 1011.8 728.338 cv
1014.32 728.338 1016.49 727.424 1018.32 725.709 cv
1020.04 723.879 1020.95 721.709 1020.95 719.08 cv
1020.95 716.451 1020.04 714.276 1018.32 712.563 cv
1016.49 710.734 1014.32 709.818 1011.8 709.818 cv
1009.18 709.818 1007 710.734 1005.17 712.563 cv
cp
f
1034.44 733.367 mo
1032.27 735.769 1031.12 738.512 1031.12 741.826 cv
1031.12 745.026 1032.27 747.771 1034.44 750.057 cv
1036.84 752.459 1039.58 753.602 1042.9 753.602 cv
1046.1 753.602 1048.84 752.459 1051.13 750.057 cv
1053.42 747.771 1054.56 745.026 1054.67 741.826 cv
1054.56 738.512 1053.42 735.769 1051.13 733.367 cv
1048.84 731.197 1046.1 730.053 1042.9 730.053 cv
1039.58 730.053 1036.84 731.197 1034.44 733.367 cv
cp
f
1023.92 773.264 mo
1023.12 774.178 1022.66 775.207 1022.66 776.352 cv
1022.66 777.379 1023.12 778.408 1023.92 779.207 cv
1024.72 780.008 1025.75 780.465 1026.89 780.578 cv
1028.04 780.465 1028.95 780.008 1029.75 779.207 cv
1030.67 778.408 1031.12 777.379 1031.12 776.352 cv
1031.12 775.207 1030.67 774.178 1029.75 773.264 cv
1028.95 772.464 1028.04 772.121 1026.89 772.121 cv
1025.75 772.121 1024.72 772.464 1023.92 773.264 cv
cp
f
1003.32 834.521 mo
988.833 895 li
1003.66 895 li
958.59 946.352 li
994.764 945.553 li
985.182 979.558 li
944.328 933 li
959.184 933 li
944.713 872.936 li
908.814 933 li
926.82 933 li
914.74 984 li
934 984 li
934 993.525 li
955.99 992.908 li
953.261 983.204 li
983.914 983.887 li
981.596 992.188 li
1014 991.278 li
1014 946 li
1033.15 946 li
1021.14 895 li
1039.27 895 li
1003.32 834.521 li
cp
f
1316 666.607 mo
1313.36 669.236 1312.11 672.438 1312.11 676.21 cv
1312.11 679.868 1313.36 682.955 1316 685.585 cv
1318.62 688.213 1321.83 689.585 1325.6 689.701 cv
1329.25 689.585 1332.34 688.213 1334.97 685.585 cv
1337.6 682.955 1338.97 679.868 1339.09 676.21 cv
1338.97 672.439 1337.6 669.236 1334.97 666.607 cv
1332.34 663.979 1329.25 662.721 1325.6 662.721 cv
1321.83 662.721 1318.62 663.979 1316 666.607 cv
cp
f
1320.57 719.992 mo
1319.42 721.25 1318.85 722.621 1318.85 724.109 cv
1318.85 725.709 1319.42 727.08 1320.57 728.223 cv
1321.83 729.48 1323.2 730.053 1324.68 730.053 cv
1326.28 730.053 1327.65 729.48 1328.8 728.223 cv
1330.05 727.08 1330.63 725.709 1330.63 724.109 cv
1330.63 722.621 1330.05 721.25 1328.8 719.992 cv
1327.65 718.85 1326.28 718.277 1324.68 718.277 cv
1323.2 718.277 1321.83 718.85 1320.57 719.992 cv
cp
f
584 980.974 mo
580.877 981.573 577.754 982.199 574.631 982.824 cv
577.754 982.199 580.877 981.573 584 980.975 cv
584 980.974 li
cp
f
584.008 980.972 mo
584.005 980.971 584.003 980.967 584 980.965 cv
584 980.974 li
584.002 980.974 584.005 980.973 584.008 980.972 cv
cp
f
574.631 982.824 mo
569.412 983.868 564.193 984.929 558.975 986.002 cv
564.193 984.93 569.412 983.868 574.631 982.824 cv
cp
f
559.35 986.002 mo
558.582 986.129 557.819 986.285 557.059 986.438 cv
557.058 986.439 li
557.819 986.285 558.582 986.129 559.35 986.002 cv
cp
f
570 1037.77 mo
570.646 1038.27 571.297 1038.75 571.943 1039.27 cv
572.742 1039.04 573.543 1038.82 574.343 1038.7 cv
573.543 1038.13 572.742 1037.67 572.057 1037.1 cv
571.367 1036.58 570.686 1036.07 570 1035.56 cv
570 1037.77 li
cp
f
592.338 1024.98 mo
589.57 1015.1 li
580.773 1009.08 571.699 1003.15 562.226 997.28 cv
560.133 995.956 557.992 994.63 555.839 993.303 cv
550.68 1015 li
570 1015 li
570 1028.8 li
577.395 1027.47 584.826 1026.21 592.338 1024.98 cv
cp
f
639.025 865.414 mo
626.74 916.684 li
628.146 917.045 629.352 917.812 630.338 918.799 cv
632.053 920.514 632.854 922.457 632.854 924.858 cv
632.854 925.254 632.797 925.625 632.748 926 cv
639.369 926 li
629.303 937.467 li
635.795 935.85 642.619 935.032 649.771 935.032 cv
652.998 935.032 656.149 935.213 659.24 935.539 cv
656.973 926 li
675.035 926 li
639.025 865.414 li
cp
f
649.132 969.257 mo
651.982 971.631 655.357 972.855 659.259 972.855 cv
655.359 972.855 651.982 971.631 649.132 969.257 cv
cp
f
643.37 957.08 mo
643.37 953.181 644.507 949.806 646.86 946.955 cv
644.507 949.806 643.37 953.181 643.37 957.08 cv
cp
f
649.132 944.681 mo
651.982 942.328 655.359 941.191 659.259 941.191 cv
655.357 941.191 651.982 942.328 649.132 944.681 cv
cp
f
565.683 941.681 mo
565.633 932.821 567.883 924.432 572.368 916.576 cv
567.883 924.432 565.633 932.819 565.683 941.681 cv
cp
f
1589.32 1032.87 mo
1588.52 1032.76 1587.72 1032.53 1586.92 1032.41 cv
1587.72 1032.53 1588.52 1032.76 1589.32 1032.87 cv
1589.32 1032.87 1589.32 1032.87 1589.32 1032.87 cv
cp
f
1620.76 951.136 mo
1622.84 949.016 1624.69 946.788 1626.33 944.461 cv
1626.33 944.461 li
1624.69 946.788 1622.84 949.016 1620.76 951.136 cv
cp
f
1523.22 925.049 mo
1526.12 927.773 1528.63 930.754 1530.9 933.857 cv
1532.73 929.972 1535.25 926.315 1538.56 922.998 cv
1543.1 918.524 1548.19 915.382 1553.79 913.505 cv
1541.65 862.412 li
1510.31 915.138 li
1514.08 917.312 1517.67 919.927 1521.06 923 cv
1523.7 923 li
1523.22 925.044 li
1523.22 925.046 1523.22 925.047 1523.22 925.049 cv
cp
f
1826.98 73 mo
1826.98 73 1826.95 72.9932 1826.91 72.9834 cv
1826.88 72.9932 1826.86 73 1826.86 73 cv
1826.98 73 li
cp
.468818 0 .0271916 0 cmyk
f
2143.84 231.988 mo
2144.56 231.691 2145.29 231.415 2146 231.097 cv
2146 176.169 li
2145.27 176.695 2144.56 177.173 2143.84 177.67 cv
2131.98 185.877 2121.13 190.11 2111.3 190.347 cv
2106.09 190.475 2101.16 189.486 2096.51 187.391 cv
2095.58 186.971 2094.66 186.507 2093.75 186 cv
2093.21 186 li
2093.21 186 2070.92 181.917 2059.95 185.803 cv
2059.83 185.919 li
2048.86 189.69 2040.29 196.549 2034 206.495 cv
2034.11 206.381 li
2034.11 206.383 2034.11 206.385 2034.11 206.385 cv
2034.12 206.381 li
2028.51 215.081 2025.8 224.397 2026.05 234.324 cv
2026.09 235.742 2026.18 237.173 2026 238.617 cv
2026 238.73 li
2027 238.617 li
2027 238.73 li
2027.37 250.278 2040.17 269 2040.17 269 cv
2040.29 269 li
2040.29 269 2044.63 275.312 2044.63 279.542 cv
2044.63 283.771 2043.15 287.543 2040.29 290.63 cv
2040.17 290.744 li
2040.06 290.744 2040.06 290.858 2039.95 290.974 cv
2039.83 290.974 2039.83 290.974 2039.83 291.088 cv
2039.14 291.66 2038.46 292.116 2037.89 292.573 cv
2037.66 292.801 li
2031.94 296.803 2027.26 301.833 2023.6 308 cv
2023.71 308 li
2020.05 313.951 2017.77 320.352 2017 327.326 cv
2017 327.095 li
2015.82 333.841 2007 344.928 2007 344.928 cv
2007 345.624 li
2007 345.625 li
2005.98 346.62 2004.92 347.504 2003.84 348.339 cv
1998.1 352.798 1991.52 355.021 1983.98 355.021 cv
1983.77 355.024 1983.56 355.002 1983.35 355 cv
1983.34 355 li
1981.48 354.99 1979.66 354.842 1977.91 354.543 cv
1977.77 354.521 1977.63 354.513 1977.5 354.489 cv
1976.59 354.321 1975.7 354.097 1974.82 353.851 cv
1974.7 353.817 1974.57 353.797 1974.44 353.761 cv
1974.21 353.692 1973.99 353.595 1973.76 353.521 cv
1969.04 352.012 1964.79 349.383 1961.07 345.625 cv
1956.31 340.811 1953.33 335.224 1952.19 328.912 cv
1951.81 326.807 1951.63 324.623 1951.66 322.358 cv
1951.66 320.525 1951.77 318.806 1952 317.087 cv
1952 316.974 li
1952 316.971 li
1953.13 309.063 1952.57 301.614 1950.3 294.394 cv
1950.4 286.774 1948.68 279.415 1945.13 272.242 cv
1944.62 271.219 1944.08 270.198 1943.5 269.181 cv
1939.64 262.418 1934.77 256.916 1928.87 252.791 cv
1927.62 253.938 1926.49 253.25 1925.46 250.614 cv
1926.6 251.188 1927.73 251.989 1928.87 252.791 cv
1932.72 249.354 1936.01 245.341 1938.85 240.643 cv
1940.29 238.235 1941.52 235.785 1942.53 233.293 cv
1945.05 227.061 1946.23 220.563 1946.11 213.793 cv
1946.08 212.438 1946 211.074 1945.88 209.7 cv
1944.88 199.972 1941.46 191.384 1935.61 183.786 cv
1934.77 182.7 1933.88 181.634 1932.95 180.588 cv
1925.58 172.451 1916.51 167.293 1905.96 165.117 cv
1905.85 165 1905.74 165 1905.62 165 cv
1905.86 165 li
1905.86 165 1903 163.742 1901.85 162.598 cv
1900.14 160.883 1899.34 158.94 1900 156.539 cv
1900 156.197 li
1899.23 155.053 1899.45 154.024 1899.91 153.11 cv
1905.06 142.708 1906.54 131.962 1904.25 120.645 cv
1902.54 112.242 1899.03 104.869 1893.71 98.5259 cv
1891.94 96.4106 1889.97 94.4087 1888 92.5239 cv
1888 92.4097 li
1887.45 92.0659 1887.11 91.8384 1886.76 91.4946 cv
1886.65 91.3804 li
1886.08 90.8091 1885.62 90.2368 1885.16 89.6646 cv
1885.05 89.5513 li
1878.31 80.521 1869.62 74.3472 1858.99 71.2603 cv
1858.87 71.146 li
1853.44 69.5474 1848.07 68.8618 1842.74 69.0757 cv
1837.61 69.2822 1827.65 72.7256 1826.91 72.9834 cv
1826.95 72.9932 1826.98 73 1826.98 73 cv
1826.86 73 li
1826.86 73 1826.88 72.9932 1826.91 72.9834 cv
1826.63 72.9165 1825.52 72.6821 1824.92 73 cv
1824.58 73 li
1823.09 72.6343 1821.83 72.1763 1820.8 71.146 cv
1819.78 70.1187 1819.21 68.7476 1819 67.2603 cv
1819 67.146 li
1819.21 65.6606 1819.78 64.4028 1820.8 63.3735 cv
1821.15 63.0317 1821.49 62.688 1821.83 62.3442 cv
1823.63 60.5435 1825.27 58.6587 1826.74 56.688 cv
1831.16 50.7778 1835 36.7378 1835 36.7378 cv
1835 36.6235 li
1835 36.6235 1836.88 19.2827 1834.05 10.9282 cv
1833.64 9.73584 1833.19 8.54541 1833 7.35986 cv
1833 7.24561 li
1832.24 6.06201 1831.71 4.96924 1831.16 3.93115 cv
1831.02 3.66455 1830.75 3 1830.75 3 cv
1762 3 li
1762 3.01953 li
1762.2 3.28125 1762.41 3.54053 1762.6 3.80273 cv
1765.44 7.5415 1768.65 11.2646 1772.17 14.7891 cv
1776.63 19.252 1781.43 23.2568 1786.46 26.5762 cv
1786.46 26.5859 1786.46 26.5884 1786.46 26.5981 cv
1774.91 37.6616 1769.08 51.1563 1769.08 67.2046 cv
1769.08 82.6538 1774.57 95.9297 1785.43 106.802 cv
1794.58 115.959 1805.44 121.223 1818.02 122.709 cv
1817.68 121.451 1817.57 120.192 1817.57 118.933 cv
1817.57 114.242 1819.17 110.236 1822.48 106.916 cv
1825.8 103.598 1829.8 101.997 1834.38 101.997 cv
1838.8 101.997 1842.59 103.497 1845.83 106.602 cv
1849.05 109.677 1851.04 113.896 1851.18 118.343 cv
1851.24 120.316 1850.99 122.132 1850.5 123.853 cv
1850.34 124.436 1850.15 125.009 1849.93 125.572 cv
1850.39 126.145 1850.84 126.601 1851.42 127.174 cv
1852.56 128.318 1853.82 129.463 1855.08 130.608 cv
1851.07 138.39 1849.13 147.086 1849.25 156.585 cv
1849.13 172.837 1854.96 186.801 1866.51 198.359 cv
1874.63 206.485 1884.01 211.864 1894.65 214.267 cv
1895.11 214.381 1895.56 214.381 1896.13 214.496 cv
1895.56 214.726 1895.11 214.954 1894.65 215.067 cv
1890.19 217.127 1886.19 219.989 1882.53 223.652 cv
1880.35 225.826 1878.52 228 1877.03 230.404 cv
1872.57 237.156 1870.29 244.824 1870.29 253.521 cv
1870.29 265.195 1874.41 275.151 1882.53 283.277 cv
1887.21 287.969 1892.36 291.29 1898.19 293.349 cv
1898.53 293.463 1898.76 293.577 1899.11 293.693 cv
1899.45 293.807 1899.91 293.922 1900.25 294.035 cv
1899.91 295.522 1899.68 297.125 1899.68 298.843 cv
1899.68 302.617 1900.71 306.166 1902.65 309.257 cv
1902.08 313.376 1901.74 317.611 1901.74 322.074 cv
1901.74 344.389 1909.4 363.465 1924.68 379.526 cv
1925.16 380.022 1925.61 380.523 1926.09 381.013 cv
1942.22 397.151 1961.89 405.277 1984.88 405.277 cv
2007.87 405.277 2027.54 397.151 2043.77 381.013 cv
2056.93 367.623 2064.82 352.059 2067.22 334.32 cv
2070.31 332.146 2073.28 329.629 2076.14 326.766 cv
2089.06 313.72 2095.47 298.04 2095.47 279.73 cv
2095.47 261.761 2089.29 246.426 2076.94 233.722 cv
2086.66 237.042 2097.07 238.758 2108.16 238.871 cv
2120.92 238.871 2132.87 236.526 2143.84 231.988 cv
cp
f
1826.98 73 mo
1826.96 72.9883 1826.94 72.9834 1826.92 72.9727 cv
1826.9 72.9824 1826.88 72.9902 1826.86 73 cv
1826.98 73 li
cp
.352483 0 .0276188 0 cmyk
f
2059.8 186 mo
2059.92 185.883 li
2070.95 181.974 2082.11 181.974 2093.37 186 cv
2093.74 186 li
2094.65 186.507 2095.57 186.971 2096.5 187.391 cv
2101.15 189.486 2106.08 190.475 2111.29 190.347 cv
2121.12 190.11 2131.96 185.877 2143.83 177.668 cv
2144.55 177.167 2145.27 176.687 2146 176.157 cv
2146 10.8574 li
2145.98 3 li
1831.06 3 li
1831.2 3.25439 1831.33 3.53564 1831.47 3.80273 cv
1832.01 4.8418 1832.54 5.93311 1833 7.12109 cv
1833 7.35986 li
1833 7.35986 1833.64 9.73584 1834.05 10.9282 cv
1836.88 19.2827 1835 36.6235 1835 36.6235 cv
1835 37.1035 li
1833.56 44.4785 1830.67 51.1436 1826.32 57.0537 cv
1824.87 59.0244 1823.25 60.9092 1821.48 62.71 cv
1821.14 63.0537 1820.8 63.3975 1820.47 63.7393 cv
1819.45 64.7686 1818.89 66.0264 1819 67.5117 cv
1819 67.626 li
1818.89 69.1113 1819.45 70.4844 1820.47 71.5117 cv
1821.48 72.542 1822.72 73 1824.18 73 cv
1824.92 73 li
1824.92 73 1826.22 72.5483 1826.92 72.9727 cv
1832.16 70.3965 1837.43 69.2866 1842.74 69.0757 cv
1848.07 68.8618 1853.44 69.5474 1858.87 71.146 cv
1858.99 71.2603 li
1869.62 74.3472 1878.31 80.521 1885.05 89.5513 cv
1885.16 89.6646 li
1885.62 90.2368 1886.08 90.8091 1886.65 91.3804 cv
1886.76 91.4946 li
1887.11 91.8384 1887.45 92.0659 1888 92.4097 cv
1888 92.5239 li
1889.97 94.4087 1891.94 96.4106 1893.71 98.5259 cv
1899.03 104.869 1902.54 112.242 1904.25 120.645 cv
1906.54 131.962 1905.06 142.708 1899.91 153.11 cv
1899.45 154.024 1900 156.197 1900 156.197 cv
1900 156.87 li
1900 159.081 1900.74 160.87 1902.31 162.448 cv
1903.37 163.501 1904.63 164.237 1906 164.552 cv
1906 164.604 li
1916.54 166.775 1925.6 171.92 1932.96 180.036 cv
1933.9 181.079 1934.79 182.143 1935.62 183.226 cv
1941.47 190.805 1944.89 199.368 1945.88 209.07 cv
1946.01 210.442 1946.08 211.805 1946.11 213.156 cv
1946.23 219.908 1945.06 226.39 1942.54 232.606 cv
1941.53 235.092 1940.3 237.535 1938.86 239.937 cv
1936.03 244.623 1932.74 248.625 1928.89 252.054 cv
1934.78 256.168 1939.65 261.656 1943.5 268.401 cv
1944.08 269.416 1944.63 270.435 1945.13 271.455 cv
1948.68 278.607 1950.4 285.946 1950.3 293.55 cv
1952.57 300.751 1953.13 308.182 1952 316.068 cv
1952 316.071 li
1952 316.185 li
1951.77 317.898 1951.66 319.613 1951.66 321.442 cv
1951.63 323.701 1951.81 325.879 1952.19 327.979 cv
1953.33 334.274 1956.31 339.848 1961.06 344.647 cv
1964.78 348.396 1969.03 351.02 1973.75 352.525 cv
1973.97 352.599 1974.19 352.695 1974.42 352.765 cv
1974.55 352.8 1974.67 352.82 1974.8 352.854 cv
1975.68 353.1 1976.57 353.322 1977.48 353.49 cv
1977.61 353.515 1977.75 353.521 1977.89 353.544 cv
1979.64 353.843 1981.45 353.99 1983.32 354 cv
1984.54 354 li
1985.73 353.997 li
1992.98 353.886 1999.31 351.688 2004.87 347.356 cv
2005.94 346.521 2006.99 345.639 2008 344.647 cv
2008 344.533 li
2012.95 339.39 2015.99 333.446 2017 326.7 cv
2017 327.332 li
2017.88 320.395 2020.07 314.027 2023.59 308 cv
2023.47 308 li
2026.99 301.975 2031.48 296.971 2036.97 292.99 cv
2037.19 292.763 li
2037.74 292.308 2038.39 291.854 2039.05 291.287 cv
2039.05 291.173 2039.05 291.173 2039.17 291.173 cv
2039.27 291.057 2039.27 290.943 2039.39 290.943 cv
2039.49 290.831 li
2042.24 287.76 2043.66 284.008 2043.66 279.802 cv
2043.66 275.594 2042.24 271.955 2039.49 269 cv
2039.39 269 li
2031.59 260.584 2027.1 250.692 2026 239.206 cv
2026 239 li
2026.11 239 li
2025.96 237.548 2025.86 236.108 2025.82 234.682 cv
2025.57 224.702 2028.29 215.333 2033.93 206.583 cv
2033.93 206.583 2033.93 206.582 2033.93 206.58 cv
2033.82 206.693 li
2040.14 196.691 2048.76 189.792 2059.8 186 cv
cp
f
1822.18 106.926 mo
1818.86 110.243 1817.26 114.244 1817.26 118.929 cv
1817.26 120.187 1817.37 121.445 1817.72 122.702 cv
1818.29 125.675 1819.78 128.304 1822.18 130.705 cv
1825.49 134.02 1829.49 135.735 1834.06 135.735 cv
1838.64 135.735 1842.52 134.02 1845.84 130.705 cv
1845.97 130.576 1846.06 130.435 1846.19 130.305 cv
1847.6 128.815 1848.77 127.243 1849.61 125.561 cv
1849.83 124.999 1850.02 124.426 1850.18 123.845 cv
1850.62 122.297 1850.87 120.676 1850.87 118.929 cv
1850.87 114.244 1849.15 110.243 1845.84 106.926 cv
1842.52 103.612 1838.64 102.012 1834.06 102.012 cv
1829.49 102.012 1825.49 103.612 1822.18 106.926 cv
cp
0 0 0 0 cmyk
f
1783.77 455.471 mo
1780.91 458.328 1779.42 461.873 1779.42 465.874 cv
1779.42 465.992 1779.43 466.105 1779.44 466.223 cv
1779.52 470.079 1780.99 473.502 1783.77 476.277 cv
1786.63 479.133 1790.17 480.62 1794.17 480.62 cv
1798.17 480.62 1801.71 479.133 1804.69 476.277 cv
1805.25 475.716 1805.74 475.123 1806.19 474.512 cv
1808.06 472.004 1809.03 469.091 1809.03 465.874 cv
1809.03 461.873 1807.55 458.328 1804.69 455.471 cv
1801.71 452.499 1798.17 451.013 1794.17 451.013 cv
1790.17 451.013 1786.63 452.499 1783.77 455.471 cv
cp
f
1701 25.8784 mo
1698.49 28.2798 1697.23 31.2524 1697.23 34.7944 cv
1697.23 38.2251 1698.49 41.1958 1701 43.7114 cv
1703.4 46.1118 1706.38 47.3696 1709.92 47.3696 cv
1713.35 47.3696 1716.32 46.1118 1718.84 43.7114 cv
1721.24 41.1958 1722.5 38.2251 1722.5 34.7944 cv
1722.5 31.2524 1721.24 28.2798 1718.84 25.8784 cv
1716.32 23.3628 1713.35 22.106 1709.92 22.106 cv
1706.38 22.106 1703.4 23.3628 1701 25.8784 cv
cp
f
1704.89 71.604 mo
1704.09 72.5181 1703.63 73.5474 1703.63 74.6909 cv
1703.63 75.7183 1704.09 76.7485 1704.89 77.5474 cv
1705.69 78.3501 1706.72 78.8052 1707.86 78.8052 cv
1709 78.8052 1709.92 78.3501 1710.72 77.5474 cv
1711.64 76.7485 1712.09 75.7183 1712.09 74.6909 cv
1712.09 73.5474 1711.64 72.5181 1710.72 71.604 cv
1709.92 70.8042 1709 70.4604 1707.86 70.4604 cv
1706.72 70.4604 1705.69 70.8042 1704.89 71.604 cv
cp
f
1716.32 196.663 mo
1714.5 196.549 1713.01 197.235 1711.75 198.493 cv
1710.49 199.75 1709.92 201.237 1709.92 203.064 cv
1709.92 204.78 1710.49 206.265 1711.75 207.523 cv
1713.01 208.78 1714.49 209.352 1716.32 209.465 cv
1718.04 209.352 1719.64 208.78 1720.9 207.523 cv
1722.15 206.265 1722.72 204.78 1722.72 203.064 cv
1722.72 201.237 1722.15 199.75 1720.9 198.493 cv
1719.64 197.235 1718.04 196.549 1716.32 196.663 cv
cp
f
1775.12 748 mo
1775.12 748 li
1775.09 747.207 1775.04 746.419 1775.08 745.604 cv
1775.04 746.419 1775.09 747.207 1775.12 748 cv
cp
.468818 0 .0271916 0 cmyk
f
1779.88 719 mo
1779.87 718.971 li
1779.76 719 li
1779.88 719 li
cp
f
1824.12 704 mo
1824.12 704 1824.12 704 1824.12 704 cv
1823.55 703.887 1822.98 703.772 1822.4 703.658 cv
1822.75 703.087 li
1823.2 703.429 1823.66 703.658 1824.12 704 cv
1824.12 704 1824.12 704 1824.12 704 cv
cp
2065.38 546.183 mo
2070.83 545.407 2076.67 543.856 2082.94 541.576 cv
2085.32 540.706 2087.76 539.728 2090.27 538.641 cv
2090.61 538.496 2090.93 538.371 2091.27 538.222 cv
2101.46 533.679 2114.74 533.505 2131.17 537.7 cv
2134.94 538.664 2138.88 539.859 2142.99 541.284 cv
2142.99 541.284 2143 541.287 2143 541.289 cv
2143 537.312 li
2143 501.202 li
2142.22 500.64 2141.55 499.973 2140.88 499.416 cv
2128.22 489.715 2113.51 484.922 2096.86 484.922 cv
2082.03 484.922 2068.8 488.802 2057.05 496.449 cv
2054.2 490.514 2050.21 485.037 2045.19 480.014 cv
2032.98 467.916 2018.39 461.866 2001.28 461.866 cv
1984.17 461.866 1969.57 467.916 1957.48 480.014 cv
1945.39 492.112 1939.34 506.722 1939.34 523.842 cv
1939.34 540.963 1945.39 555.572 1957.48 567.67 cv
1960.56 570.866 1963.98 573.605 1967.52 576.001 cv
1959.59 578.564 1952.1 582.17 1945.02 586.755 cv
1938.86 590.747 1933 595.473 1927.48 600.997 cv
1913.74 614.824 1904.71 630.574 1900.38 648.248 cv
1898.37 656.401 1897.37 664.96 1897.37 673.931 cv
1897.37 681.35 1898.05 688.653 1899.54 695.615 cv
1886.19 688.196 1871.48 683.86 1855.4 682.719 cv
1855.23 677.347 1853.73 672.521 1850.89 668.226 cv
1849.81 666.588 1848.55 665.022 1847.07 663.544 cv
1841.48 657.951 1834.87 655.211 1827 655.211 cv
1819.13 655.211 1812.51 657.951 1806.92 663.544 cv
1801.33 669.135 1798.6 675.757 1798.71 683.631 cv
1798.6 686.826 1799.06 689.908 1800.08 692.764 cv
1789.13 697.898 1778.98 705.203 1769.74 714.449 cv
1764.69 719.502 1760.26 724.808 1756.43 730.369 cv
1752.55 735.986 1749.28 741.863 1746.59 748 cv
1757.88 748 li
1760.4 736.423 1766.58 727.133 1776.32 720.282 cv
1779.51 718 li
1779.65 718 li
1779.87 718.971 li
1813.49 710 li
1813.6 710 li
1814.06 711 li
1814.51 711 li
1826.86 713.132 1836.63 719.306 1843.81 729.52 cv
1843.92 729.52 1843.92 729.632 1844.03 729.744 cv
1845.82 732.289 li
1847.57 732.601 1849.36 732.859 1851.22 733 cv
1851.67 733 li
1851.67 733 1867.79 735.883 1874.76 739.769 cv
1885.07 745.57 1895.8 747.52 1907.06 745.697 cv
1908.67 745.438 1910.28 745.098 1911.91 744.685 cv
1912.03 744.57 li
1924.94 741.254 1934.89 733.826 1941.98 722 cv
1942.09 722 li
1944.75 718.221 1946.72 713.822 1948 709.31 cv
1949.28 704.797 1949.88 700.174 1949.79 695.438 cv
1949.74 692.279 1949.38 689.07 1948.72 685.814 cv
1948.12 682.984 1947.78 680.09 1947.69 677.133 cv
1947.68 676.709 1947.7 676.276 1947.7 675.848 cv
1947.69 675.285 1947.68 674.723 1948 674.152 cv
1948 674.039 li
1947.7 670.409 1948.02 666.909 1948.66 663.539 cv
1948.79 662.822 1949 662.139 1949.17 661.432 cv
1951.33 652.191 1963 636.771 1963 636.771 cv
1963 636.378 li
1963 636.264 li
1963 636.378 li
1966.29 633.064 1969.8 630.285 1973.5 628 cv
1973.5 628 li
1974.85 627.169 1976.22 626.387 1977.62 625.693 cv
1979.37 624.826 1981.16 624.063 1983 623.41 cv
1983 623.524 li
1995.32 619.314 2004.58 611.58 2010.91 600.204 cv
2017.24 588.715 2018.82 576.543 2015.77 563.917 cv
2012.72 551.29 2005.83 541.28 1995.09 534 cv
1995.35 534 li
1994.55 533.43 1993.86 532.745 1993.07 532.06 cv
1990.78 529.776 1989.64 527.037 1989.76 523.842 cv
1989.64 520.647 1990.78 517.908 1993.07 515.625 cv
1995.35 513.34 1998.08 512.199 2001.28 512.314 cv
2004.47 512.199 2007.21 513.34 2009.49 515.625 cv
2010.52 516.65 2011.31 517.678 2012 518.934 cv
2012 519.048 li
2012.54 520.117 2013.11 521.162 2013.72 522.176 cv
2017.93 529.292 2023.65 535.084 2030.93 539.477 cv
2030.82 539.364 li
2039.14 544.499 2048.16 546.897 2057.85 546.783 cv
2060.27 546.754 2062.78 546.556 2065.38 546.183 cv
cp
f
1575.95 956.852 mo
1575.83 956.965 li
1575.95 956.623 1576.17 956.394 1576.29 956.166 cv
1575.95 956.852 li
cp
1469.6 964.053 mo
1470.17 963.025 1470.74 962.227 1471.54 961.424 cv
1473.82 959.139 1476.57 957.996 1479.77 958.109 cv
1482.97 957.996 1485.71 959.139 1488 961.31 cv
1488 961.424 li
1488.68 962.109 1489.26 962.795 1489.83 963.597 cv
1489.94 963.824 li
1490.85 965.082 1491.77 966.227 1492.8 967.369 cv
1485.14 966.227 1477.37 965.082 1469.6 964.053 cv
cp
1741.05 839.021 mo
1742.58 838.922 1744.12 838.776 1745.68 838.547 cv
1747.19 838.317 1748.66 838.03 1750.11 837.685 cv
1760.27 835.271 1768.99 830.043 1776.13 822 cv
1776.24 822 li
1777.62 820.424 1778.85 818.796 1780.01 817.139 cv
1781.53 814.959 1782.88 812.716 1784.02 810.396 cv
1766.13 784.884 li
1760.15 776.496 1757.28 767.304 1757.51 757.535 cv
1757.63 755.124 1757.85 752.711 1758.32 750.297 cv
1758.45 749.511 1758.65 748.766 1758.82 748 cv
1746.04 748 li
1746.04 748 1740.75 762.684 1739.33 770.409 cv
1738.26 776.205 1737.62 782.178 1737.47 788.354 cv
1729.92 783.666 1721.46 781.381 1712.09 781.381 cv
1698.72 781.381 1687.29 786.066 1677.8 795.555 cv
1668.31 805.043 1663.62 816.475 1663.62 829.85 cv
1663.62 831.677 1663.74 833.506 1663.85 835.335 cv
1660.31 835.906 1656.88 836.593 1653.56 837.622 cv
1654.59 839.338 1655.16 841.395 1655.16 843.68 cv
1655.16 844.48 1655.09 845.252 1654.95 845.996 cv
1654.95 846.005 1654.94 846.014 1654.94 846.025 cv
1654.51 848.24 1653.47 850.205 1651.85 851.91 cv
1649.56 854.084 1646.82 855.229 1643.62 855.229 cv
1640.3 855.229 1637.56 854.084 1635.39 851.91 cv
1635.01 851.541 1634.67 851.154 1634.36 850.756 cv
1633.42 849.561 1632.76 848.254 1633 846.883 cv
1633 846.881 li
1625.21 850.997 1618.58 856.141 1612.29 862.43 cv
1597.09 877.746 1587.95 895.58 1584.86 915.813 cv
1579.49 913.184 1573.54 911.811 1567.03 911.811 cv
1562.32 911.762 1557.92 912.479 1553.79 913.863 cv
1548.19 915.74 1543.1 918.883 1538.56 923.356 cv
1535.25 926.674 1532.73 930.33 1530.9 934.217 cv
1528.73 931.246 1526.33 928.387 1523.59 925.758 cv
1523.47 925.635 1523.34 925.523 1523.22 925.402 cv
1522.51 924.701 1521.79 924.018 1521.06 923.359 cv
1517.67 920.285 1514.08 917.67 1510.31 915.496 cv
1503.45 911.534 1495.97 909.063 1487.88 908.084 cv
1464.6 946.905 li
1464.03 947.707 1463.35 948.162 1462.55 948.393 cv
1461.63 948.507 1460.71 948.393 1459.91 947.935 cv
1431.31 930.703 li
1428.81 933.747 1426.64 936.932 1424.83 940.26 cv
1580.87 1034.29 li
1581.74 1034.47 1582.62 1034.63 1583.49 1034.81 cv
1583.6 1034.7 1583.72 1034.7 1583.83 1034.58 cv
1586.81 1032.39 1589.84 1030.23 1592.89 1028.09 cv
1595.54 1026.17 1598.22 1024.28 1600.98 1022.47 cv
1611.38 1015.27 1622.24 1008.29 1633.56 1001.43 cv
1634.36 1000.86 1635.05 1000.4 1635.85 1000.06 cv
1638.02 998.691 1640.3 997.319 1642.47 996.063 cv
1638.7 995.146 1635.05 994.232 1631.27 993.434 cv
1627.38 992.631 1623.5 991.718 1619.5 990.918 cv
1614.24 989.66 1608.98 988.518 1603.61 987.373 cv
1587.95 984.059 1572.06 980.857 1555.94 978 cv
1562 974.456 1546.11 969.998 1508.16 964.625 cv
1557.31 966.567 1585.66 966.911 1593.09 965 cv
1593.21 965 li
1603.84 963.824 1621 951.25 1621 951.25 cv
1621 951.962 li
1623.1 949.83 1624.95 947.59 1626.61 945.252 cv
1631.02 939.016 1633.88 932.042 1635.13 924.269 cv
1636.74 914.617 1641.11 906.112 1648.35 898.759 cv
1648.46 898.645 li
1653.17 893.932 1658.35 890.485 1663.97 888.071 cv
1666.85 886.922 1669.84 886.118 1672.94 885.544 cv
1682.68 883.907 1691.06 879.879 1698.08 873.505 cv
1700.42 871.381 1702.61 868.996 1704.65 866.354 cv
1705.8 864.86 1706.83 863.251 1707.87 861.644 cv
1713.16 853.026 1715.57 843.718 1715.11 833.605 cv
1723.28 837.842 1731.89 839.608 1741.05 839.021 cv
cp
f
1775.53 752.572 mo
1775.31 751.063 1775.18 749.541 1775.12 748 cv
1775.12 748 li
1775.18 749.541 1775.31 751.063 1775.53 752.572 cv
cp
f
1759.99 757.832 mo
1759.82 764.606 1761.25 770.992 1764.3 777.041 cv
1761.25 770.992 1759.82 764.604 1759.99 757.832 cv
cp
f
1824.12 704 mo
1824.12 704 1824.12 704 1824.12 703.999 cv
1824.12 704 1824.12 704 1824.12 704 cv
1824.12 704 li
cp
.352483 0 .0276188 0 cmyk
f
1824.12 703.999 mo
1823.66 703.658 1823.2 703.429 1822.75 703.087 cv
1822.4 703.658 li
1822.97 703.772 1823.55 703.887 1824.12 703.999 cv
cp
f
1576.29 956.166 mo
1576.17 956.394 1575.95 956.623 1575.83 956.965 cv
1575.95 956.852 li
1576.29 956.166 li
cp
f
1479.77 958.109 mo
1476.57 957.996 1473.82 959.139 1471.54 961.424 cv
1470.74 962.227 1470.17 963.025 1469.6 964.053 cv
1477.37 965.082 1485.14 966.227 1492.8 967.369 cv
1491.77 966.227 1490.85 965.082 1489.94 963.824 cv
1489.83 963.597 li
1489.26 962.795 1488.68 962.109 1488 961.424 cv
1488 961.31 li
1485.71 959.139 1482.97 957.996 1479.77 958.109 cv
cp
f
1633.95 850.756 mo
1634.26 851.154 1634.6 851.541 1634.97 851.91 cv
1637.15 854.084 1639.89 855.229 1643.2 855.229 cv
1646.4 855.229 1649.14 854.084 1651.43 851.91 cv
1653.05 850.205 1654.1 848.24 1654.53 846.025 cv
1654.53 846.014 1654.53 846.005 1654.54 845.996 cv
1654.67 845.252 1654.75 844.48 1654.75 843.68 cv
1654.75 841.395 1654.17 839.338 1653.15 837.622 cv
1652.69 836.822 1652.12 836.021 1651.43 835.335 cv
1649.14 833.164 1646.4 832.021 1643.2 832.021 cv
1639.89 832.021 1637.15 833.164 1634.97 835.335 cv
1632.69 837.622 1631.54 840.365 1631.54 843.68 cv
1631.54 844.709 1631.66 845.852 1632 846.881 cv
1632 846.883 1632 846.883 1632 846.883 cv
1632.34 848.254 1633.01 849.561 1633.95 850.756 cv
cp
0 0 0 0 cmyk
f
1787.61 816.974 mo
1782.93 810.292 li
1781.8 812.6 1780.46 814.831 1778.94 817 cv
1787.61 816.974 li
cp
.352483 0 .0276188 0 cmyk
f
1815.18 817 mo
1801.14 797.027 li
1815.18 817 li
1815.18 817 li
cp
f
1879.58 785.723 mo
1867 794.523 li
1867 794.525 li
1879.58 785.723 li
cp
f
1806.17 754 mo
1805.99 754 li
1806.13 754.045 li
1806.15 754.02 1806.17 754 1806.17 754 cv
cp
f
2141 686.426 mo
2141 616.89 li
2141.63 616.317 2142.26 615.743 2143 615.168 cv
2143 562.703 li
2142.94 541.397 li
2138.83 539.951 2134.9 538.737 2131.13 537.758 cv
2114.7 533.497 2101.43 533.674 2091.24 538.29 cv
2090.9 538.439 2090.58 538.566 2090.25 538.714 cv
2087.74 539.817 2085.29 540.813 2082.91 541.695 cv
2076.65 544.011 2070.8 545.586 2065.36 546.374 cv
2062.76 546.752 2060.25 546.955 2057.83 546.983 cv
2048.14 547.099 2039.13 544.664 2030.81 539.448 cv
2030.93 539.563 li
2023.64 535.102 2017.93 529.219 2013.71 521.99 cv
2013.11 520.96 2012.54 519.9 2012 518.813 cv
2012 518.698 li
2011.31 517.422 2010.52 516.38 2009.49 515.336 cv
2007.3 513.109 2004.68 511.986 2001.65 512 cv
2000.88 512.002 li
1997.86 511.997 1995.25 513.119 1993.07 515.336 cv
1990.79 517.656 1989.65 520.438 1989.77 523.683 cv
1989.65 526.928 1990.79 529.71 1993.07 532.029 cv
1993.87 532.726 1994.55 533.42 1995.35 534 cv
1995.38 534 li
2006.38 541.28 2013.44 551.29 2016.57 563.917 cv
2019.7 576.543 2018.08 588.715 2011.59 600.204 cv
2005.11 611.58 1995.62 619.314 1983 623.524 cv
1983 623.41 li
1981.12 624.063 1979.28 624.826 1977.48 625.693 cv
1976.05 626.387 1974.65 627.169 1973.27 628 cv
1973.27 628 li
1969.47 630.285 1965.88 633.064 1962.51 636.38 cv
1955.33 643.515 1950.68 651.722 1948.49 660.917 cv
1948.32 661.619 1948.11 662.3 1947.97 663.014 cv
1947.33 666.367 1947 669.851 1947 673.463 cv
1947 673.549 1947 673.637 1947 673.724 cv
1947 674.167 1946.99 674.614 1947 675.053 cv
1947.08 678.113 1947.43 681.107 1948.03 684.036 cv
1948.68 687.404 1949.04 690.724 1949.1 693.991 cv
1949.18 698.893 1948.59 703.676 1947.3 708.345 cv
1946.02 713.013 1944.06 717.564 1941.4 722 cv
1941.28 722 li
1934.2 733.709 1924.25 741.397 1911.33 744.826 cv
1911.22 744.944 li
1909.59 745.372 1907.97 745.724 1906.36 745.991 cv
1895.11 747.88 1884.37 745.862 1874.06 739.858 cv
1867.09 735.838 1859.32 733.591 1850.97 733 cv
1850.47 733 li
1848.61 732.859 1846.82 732.6 1845.06 732.289 cv
1880.45 782.751 li
1881.01 783.537 1881.13 784.324 1881.01 785.223 cv
1880.9 786.122 1880.45 786.795 1879.67 787.357 cv
1849.23 808.808 li
1848.44 809.37 1847.54 809.481 1846.65 809.37 cv
1845.75 809.146 1845.07 808.696 1844.51 808.022 cv
1807 754.674 li
1807 754.563 li
1806.89 754.227 1806.67 754.114 1806.33 754.114 cv
1806.13 754.045 li
1805.97 754.188 1805.45 754.649 1805.26 754.746 cv
1802 757.146 li
1802 757.029 li
1801.6 757.26 1801.48 757.602 1801.37 757.945 cv
1801.26 758.06 1801.26 758.174 1801 758.287 cv
1801 758.746 li
1801.37 758.859 1801.48 758.973 1801.6 759.203 cv
1842.04 817 li
2143 816.052 li
2143 727.898 li
2142.26 727.094 2141.63 726.406 2141 725.604 cv
2140.47 725.03 2140.05 724.573 2139.53 724 cv
2141 724 li
2141 686.426 li
cp
f
1787.92 915.934 mo
1790.33 913.414 1793.31 912.153 1796.86 912.153 cv
1800.3 912.153 1803.28 913.414 1805.8 915.934 cv
1807.29 917.424 1808.32 919.025 1808.89 920.859 cv
1843.38 909.517 li
1846.04 908.682 1848.73 907.897 1851.4 907.105 cv
1788.23 817 li
1778.85 817.026 li
1777.7 818.673 1776.48 820.29 1775.12 821.856 cv
1775 821.97 li
1775 821.856 li
1767.91 829.851 1759.25 835.044 1749.18 837.442 cv
1747.74 837.786 1746.27 838.072 1744.77 838.299 cv
1743.22 838.527 1741.7 838.672 1740.18 838.771 cv
1731.08 839.357 1722.54 837.599 1714.43 833.389 cv
1714.88 843.438 1712.49 852.688 1707.24 861.25 cv
1706.21 862.851 1705.19 864.447 1704.04 865.931 cv
1702.02 868.557 1699.84 870.926 1697.52 873.037 cv
1690.55 879.369 1682.23 883.371 1672.57 885 cv
1672.67 885 li
1672.57 885 li
1672.57 885 1672.56 885.002 1672.56 885.002 cv
1669.48 885.57 1666.51 886.372 1663.66 887.514 cv
1658.08 889.91 1652.94 893.337 1648.26 898.019 cv
1648.15 898.132 li
1640.96 905.438 1636.63 913.89 1635.03 923.48 cv
1633.79 931.207 1630.95 938.135 1626.57 944.332 cv
1624.92 946.655 1623.08 948.882 1621 950.999 cv
1621 951.563 li
1613.32 959.354 1604.04 964.166 1593.39 966 cv
1593.27 966 li
1585.83 967.26 1557.42 966.915 1508.15 964.968 cv
1546.19 970.354 1562.11 974.821 1556.04 978.372 cv
1572.19 981.236 1588.12 984.445 1603.81 987.767 cv
1609.2 988.913 1614.47 990.059 1619.74 991.319 cv
1623.75 992.121 1627.64 993.036 1631.54 993.841 cv
1635.32 994.642 1638.98 995.558 1642.77 996.476 cv
1647.24 993.841 1651.82 991.203 1656.52 988.568 cv
1658.46 987.539 1660.29 986.393 1662.24 985.361 cv
1686.65 972.415 li
1687.75 971.755 1688.85 971.202 1690.05 970.65 cv
1690.15 970.604 1690.25 970.551 1690.34 970.508 cv
1718.03 956.331 1746.62 943.524 1776.24 932.202 cv
1777.73 931.629 1779.22 931.17 1780.71 930.598 cv
1784.83 928.994 li
1784.37 927.733 1784.14 926.359 1784.26 924.871 cv
1784.14 921.318 1785.4 918.339 1787.92 915.934 cv
cp
f
1833.04 842.41 mo
1815.18 817 li
1815.18 817 li
1833.04 842.41 li
cp
f
1923.55 887.472 mo
1924.92 887.131 1926.29 886.904 1927.77 886.562 cv
1952.88 880.849 1978.6 876.033 2004.9 872.051 cv
2026.34 868.805 2048.16 866.1 2070.42 864 cv
2079.73 864 li
2079.73 864 2115.85 861.057 2133.23 865 cv
2143 865 li
2143 816 li
1842.63 816.942 li
1896.79 894.105 li
1905.6 891.783 1914.48 889.535 1923.55 887.472 cv
cp
f
0 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
1672.54 885 mo
1672.54 885 li
1672 885 li
@
1672 885 mo
1672 885 li
@
1775.12 822 mo
1775 822 li
1775 822.113 li
1775.12 822 li
cp
.468818 0 .0271916 0 cmyk
f
1963 637 mo
1963 637 li
.352483 0 .0276188 0 cmyk
@
1963 637 mo
1963 637 li
@
1942 723 mo
1942 723 li
.468818 0 .0271916 0 cmyk
@
2080.1 864.197 mo
2076.33 864.77 2072.67 865.571 2068.9 866.484 cv
2005.16 876.137 li
1923.95 888.432 li
1923.26 888.549 1922.58 888.776 1921.78 889.004 cv
1913.45 890.789 1905.19 892.712 1896.96 894.704 cv
1909.79 912.983 li
1910.92 912.662 1912.1 912.282 1913.2 911.98 cv
1934.58 905.924 1956.42 900.436 1978.71 895.521 cv
1994.94 891.977 2011.4 888.776 2028.2 885.917 cv
2059.64 880.432 2091.99 876.201 2125.26 873.114 cv
2125.48 873 2125.71 873 2125.94 873 cv
2143.77 873 li
2144 873 li
2144 866.484 li
2140.46 865.686 2137.03 864.886 2133.6 864.313 cv
2116.22 861.227 2098.39 861.227 2080.1 864.197 cv
cp
0 .703944 .460426 0 cmyk
f
1732.73 1078.42 mo
1760.05 1086.85 1785.56 1095.5 1809 1104.5 cv
1828.76 1112 1847.1 1119.69 1864.03 1127.55 cv
1901.28 1144.85 1931.7 1163.01 1955.36 1182.03 cv
1969.42 1182.48 1983.83 1182.71 1998.35 1182.71 cv
2049.92 1182.71 2098.18 1179.75 2143 1173.95 cv
2143 1052.94 li
2137.35 1053.86 2131.63 1054.71 2125.84 1055.51 cv
2085.34 1061.12 2041.51 1063.92 1994.36 1063.92 cv
1901.78 1063.92 1821.85 1053.07 1754.65 1031.36 cv
1750.17 1029.92 1745.74 1028.42 1741.38 1026.88 cv
1739.11 1026.08 1736.88 1025.27 1734.68 1024.46 cv
1730.28 1022.84 1726.03 1021.2 1721.93 1019.53 cv
1711.68 1015.37 1702.35 1011.08 1694 1006.65 cv
1694 1006.65 1694 1006.65 1694 1006.64 cv
1698.68 1003.79 1703.36 1000.93 1708.27 998.186 cv
1709.98 997.158 1711.69 996.242 1713.41 995.213 cv
1738.18 981.152 1763.87 968.35 1790.35 956.576 cv
1807.82 948.804 1825.74 941.6 1843.89 934.856 cv
1846.75 933.827 1849.49 932.798 1852.34 931.77 cv
1854.63 934.626 1859.65 937.027 1867.53 939.198 cv
1875.83 941.513 1885.48 942.993 1896.39 943.588 cv
1900.03 943.786 1903.8 943.887 1907.71 943.887 cv
1911.62 943.887 1915.4 943.786 1919.03 943.588 cv
1929.94 942.993 1939.59 941.513 1947.89 939.198 cv
1956.89 936.692 1962.2 933.807 1963.87 930.483 cv
1964.26 929.715 1964.45 928.927 1964.45 928.111 cv
1964.45 925.368 1962.28 922.854 1958.06 920.683 cv
1950.29 919.88 1942.76 918.853 1935.34 917.823 cv
1926.44 916.597 1917.87 915.149 1909.51 913.595 cv
1921.52 930.74 li
1922.1 931.426 1922.32 932.228 1922.21 933.142 cv
1922.1 933.94 1921.64 934.626 1921.07 935.198 cv
1920.38 935.771 1919.58 936 1918.79 936 cv
1872.11 936 li
1871.54 936 1870.97 935.884 1870.51 935.657 cv
1869.94 935.315 1869.6 934.975 1869.25 934.632 cv
1850.17 907.531 li
1847.5 908.318 1844.82 909.097 1842.16 909.927 cv
1807.74 921.198 li
1808.08 922.451 1808.31 923.703 1808.31 925.185 cv
1808.31 928.6 1807.05 931.56 1804.65 934.064 cv
1802.13 936.454 1799.16 937.707 1795.73 937.707 cv
1792.19 937.707 1789.21 936.454 1786.81 934.064 cv
1785.33 932.583 1784.3 930.99 1783.72 929.282 cv
1779.61 930.875 li
1778.24 931.444 1776.87 931.9 1775.49 932.471 cv
1745.88 943.742 1717.18 956.492 1689.5 970.496 cv
1689.48 970.507 1689.45 970.522 1689.42 970.536 cv
1689.37 970.561 1689.32 970.584 1689.28 970.609 cv
1689.23 970.631 1689.18 970.656 1689.13 970.678 cv
1688 971.21 1686.87 971.814 1685.73 972.432 cv
1661.37 985.296 li
1659.55 986.321 1657.71 987.46 1655.77 988.483 cv
1654.05 989.51 1652.34 990.419 1650.63 991.443 cv
1645.48 994.289 1640.45 997.25 1635.53 1000.32 cv
1634.73 1000.78 1633.93 1001.23 1633.13 1001.69 cv
1621.81 1008.52 1610.84 1015.47 1600.43 1022.64 cv
1597.7 1024.5 1595.01 1026.37 1592.33 1028.24 cv
1591.14 1029.1 1589.94 1029.95 1588.77 1030.84 cv
1587.97 1031.41 1587.16 1031.97 1586.36 1032.54 cv
1587.16 1032.66 1587.97 1032.88 1588.77 1033 cv
1588.76 1033 1588.76 1033 1588.76 1033 cv
1588.76 1033 1588.76 1033 1588.77 1033 cv
1587.09 1034.14 1585.43 1035.37 1583.85 1036.53 cv
1595.18 1043.33 li
1674.64 1061.92 li
1675.55 1062.14 1676.58 1062.37 1677.61 1062.6 cv
1688.82 1065.67 1699.91 1068.75 1711 1071.94 cv
1711 1072.05 li
1718.2 1074.1 1725.52 1076.26 1732.73 1078.42 cv
cp
0 .490944 .268315 0 cmyk
f
1896.59 894.534 mo
1904.81 892.543 1913.08 890.619 1921.4 888.834 cv
1922.2 888.606 1922.89 888.379 1923.57 888.262 cv
1922.77 888.379 1922.08 888.606 1921.29 888.834 cv
1912.92 890.623 1904.71 892.533 1896.56 894.498 cv
1896.59 894.534 li
cp
0 .321447 .154726 0 cmyk
f
2027.43 885.917 mo
2010.62 888.776 1994.16 891.977 1977.93 895.521 cv
1955.64 900.436 1933.81 905.924 1912.43 911.98 cv
1911.33 912.282 1910.14 912.662 1909.02 912.983 cv
1909.2 913.24 li
1917.57 914.795 1926.15 916.242 1935.06 917.469 cv
1942.5 918.498 1950.04 919.525 1957.81 920.328 cv
1984.79 923.185 2014.05 924.556 2045.72 924.556 cv
2076.13 924.556 2104.48 923.299 2130.77 920.67 cv
2134.88 920.212 2139 919.756 2143 919.298 cv
2143 873 li
2125.17 873 li
2124.94 873 2124.71 873 2124.48 873.114 cv
2091.22 876.201 2058.87 880.432 2027.43 885.917 cv
cp
0 .865904 .709102 0 cmyk
f
254 622.731 mo
254 622.856 253.986 622.981 253.979 623.106 cv
253.985 623.187 253.996 623.263 254 623.345 cv
254 622.731 li
cp
.468818 0 .0271916 0 cmyk
f
248.012 650.56 mo
248.13 653.39 248.488 656.25 249.087 659.149 cv
249.358 660.569 249.682 661.96 250.056 663.327 cv
252.679 672.881 257.829 681.091 265.427 687.954 cv
265.542 688.073 li
265.885 688.423 266.228 688.656 266.57 689.01 cv
266.684 689.125 li
267.255 689.712 267.713 690.297 268.17 691 cv
268.283 691 li
269.095 692.133 269.939 693.217 270.813 694.257 cv
270.856 694.311 270.901 694.363 270.946 694.413 cv
271.766 695.386 272.615 696.312 273.49 697.204 cv
273.575 697.289 273.656 697.378 273.742 697.463 cv
274.417 698.143 275.126 698.776 275.836 699.41 cv
276.057 699.602 276.268 699.813 276.493 700 cv
293.898 700 li
367.094 700 li
383 700 li
383 699.5 li
383 699.5 375.981 681.004 368.444 673.467 cv
357.584 662.607 344.324 657.119 328.893 657.235 cv
321.689 657.119 315.061 658.264 309 660.664 cv
307.058 658.035 304.887 655.52 302.485 653.119 cv
301.228 651.861 300.084 650.718 298.826 649.691 cv
302.715 641.801 304.657 633.229 304.657 623.741 cv
304.657 607.393 298.941 593.563 287.396 582.015 cv
279.166 573.787 269.791 568.527 259.274 566.125 cv
258.703 566.011 258.246 566.011 257.789 565.898 cv
258.246 565.669 258.703 565.442 259.274 565.326 cv
263.619 563.268 267.619 560.412 271.392 556.753 cv
273.449 554.581 275.277 552.409 276.879 550.008 cv
281.338 543.264 283.623 535.49 283.623 526.917 cv
283.623 515.257 279.508 505.311 271.392 497.195 cv
266.705 492.508 261.562 489.194 255.73 487.137 cv
255.388 487.02 255.158 486.907 254.816 486.792 cv
254.359 486.679 253.901 486.565 253.559 486.449 cv
253.901 484.963 254.131 483.362 254.244 481.649 cv
254.131 477.762 253.216 474.332 251.272 471.247 cv
251.377 470.499 251.429 469.723 251.518 468.969 cv
251.914 465.563 252.188 462.089 252.188 458.442 cv
252.138 448.61 250.611 439.387 247.623 430.779 cv
243.628 419.272 237.01 408.858 227.724 399.571 cv
211.605 383.454 192.058 375.336 169.08 375.336 cv
146.771 375.336 127.598 383.011 111.643 398.208 cv
111.166 398.665 110.68 399.102 110.209 399.571 cv
96.9482 412.833 89.1758 428.377 86.7744 446.21 cv
83.6885 448.384 80.7148 450.899 77.8574 453.756 cv
64.9414 466.672 58.4238 482.334 58.5391 500.739 cv
58.4238 518.686 64.5977 534.004 77.0586 546.693 cv
67.3418 543.264 56.9395 541.549 45.8496 541.549 cv
32.2461 541.549 19.7871 544.064 8.24121 549.208 cv
8.13184 549.315 8.12109 549.32 8 549.32 cv
8 604.186 li
28.3672 589.446 45.7383 586.248 60.2539 594 cv
60.3691 594 li
71.4561 598.249 93.6328 595 93.6328 595 cv
93.748 595 li
93.748 595 113.296 583.731 119.584 573.787 cv
119.469 573.901 li
125.756 563.955 128.385 553.208 127 541.663 cv
127 541.549 li
128 541.663 li
128 541.549 li
126.099 530.004 113.41 512 113.41 512 cv
113.939 512 li
111.126 508.851 109.664 505.237 109.664 500.921 cv
109.664 496.605 111.126 492.758 113.939 489.609 cv
114.052 489.493 li
114.163 489.376 114.163 489.376 114.276 489.26 cv
114.276 489.144 114.276 489.144 114.388 489.144 cv
114.951 488.56 115.626 487.978 116.301 487.626 cv
116.526 487.395 li
122.151 483.313 126.764 478.182 130.363 472 cv
130.251 472 li
133.851 465.82 136.1 459.29 137 452.176 cv
137 452.409 li
137.885 446.389 140.322 440.994 144.234 436.225 cv
144.792 435.542 145.381 434.874 146 434.218 cv
146 434.841 li
146.796 434.055 147.616 433.317 148.457 432.628 cv
153.64 428.377 159.635 426.001 166.376 425.561 cv
167.283 425.5 168.194 425.456 169.126 425.467 cv
169.36 425.464 169.582 425.489 169.815 425.491 cv
170.699 425.496 171.58 425.509 172.438 425.578 cv
180.013 426.202 186.544 429.34 192.025 434.841 cv
198.405 441.242 201.595 449.016 201.595 458.046 cv
201.595 459.875 201.481 461.704 201.252 463.42 cv
200.115 471.192 200.683 478.737 202.962 485.938 cv
202.948 487.011 202.971 488.081 203.032 489.148 cv
203.454 496.622 205.711 503.986 209.798 511.087 cv
212.617 516.146 216.077 520.497 220.18 524.093 cv
221.546 525.292 222.985 526.405 224.496 527.435 cv
225.748 526.293 226.887 526.979 227.912 529.608 cv
226.658 528.922 225.52 528.236 224.496 527.435 cv
220.507 530.865 217.202 534.866 214.469 539.552 cv
208.659 549.04 206.267 559.328 207.405 570.418 cv
208.431 581.505 212.759 591.107 220.279 599.452 cv
227.685 607.569 236.797 612.713 247.507 614.886 cv
247.621 614.886 247.735 614.886 247.849 615 cv
247.507 615 li
248.988 615.342 250.24 616.027 251.493 617.285 cv
253.035 618.943 253.826 620.817 253.979 623.106 cv
253.986 622.981 254 622.856 254 622.731 cv
254 623.345 li
253.996 623.263 253.985 623.187 253.979 623.106 cv
253.932 624.036 253.718 624.965 253.314 625.893 cv
249.459 633.885 247.659 642.075 248.012 650.56 cv
cp
f
326.72 707 mo
326.605 707 li
326.644 707.019 li
326.691 707.007 326.72 707 326.72 707 cv
cp
f
646.86 946.955 mo
647.195 946.545 647.557 946.15 647.942 945.764 cv
648.328 945.377 648.725 945.018 649.132 944.681 cv
651.982 942.328 655.357 941.191 659.259 941.191 cv
659.26 941.191 659.26 941.191 659.26 941.191 cv
663.604 941.191 667.262 942.677 670.349 945.764 cv
673.434 948.852 675.035 952.621 675.035 957.08 cv
675.035 958.707 674.809 960.242 674.365 961.684 cv
673.625 964.088 672.277 966.239 670.349 968.169 cv
667.262 971.256 663.604 972.855 659.26 972.855 cv
659.26 972.855 659.26 972.855 659.259 972.855 cv
655.357 972.855 651.982 971.631 649.132 969.257 cv
648.725 968.918 648.328 968.555 647.942 968.169 cv
644.855 965.082 643.37 961.424 643.37 957.08 cv
643.37 953.18 644.507 949.805 646.86 946.955 cv
cp
556.725 986.628 mo
555.443 986.886 554.174 987.164 552.956 987.45 cv
550.897 987.909 548.839 988.366 546.78 988.825 cv
548.152 989.628 549.525 990.432 550.897 991.233 cv
552.278 992.083 553.654 992.929 555.028 993.777 cv
557.183 995.108 559.324 996.438 561.418 997.767 cv
570.896 1003.66 579.974 1009.6 588.774 1015.64 cv
592.815 1018.41 596.814 1021.19 600.733 1024 cv
600.875 1024 li
629.999 1019.31 659.696 1015.07 690.19 1011.52 cv
703.68 1009.8 717.283 1008.32 731 1006.94 cv
731 1006.56 li
731 1006.56 721.413 972.48 707.843 958.91 cv
694.021 945.089 677.84 937.254 659.24 935.297 cv
656.149 934.971 652.998 934.79 649.771 934.79 cv
642.619 934.79 635.795 935.607 629.303 937.225 cv
624.797 938.348 620.447 939.843 616.277 941.764 cv
618.105 938.677 619.821 935.59 621.307 932.389 cv
620.164 932.045 619.135 931.359 618.335 930.445 cv
616.734 928.844 615.934 926.901 615.934 924.617 cv
615.934 922.215 616.734 920.271 618.335 918.557 cv
620.049 916.955 621.994 916.155 624.394 916.155 cv
625.194 916.155 625.88 916.27 626.566 916.385 cv
628.051 909.984 628.738 903.238 628.738 896.266 cv
628.738 872.031 620.164 851.342 603.018 834.193 cv
585.983 817.16 565.294 808.586 541.059 808.586 cv
527.456 808.586 515.109 811.217 503.792 816.589 cv
503.907 816.702 504.136 816.93 504.363 817.16 cv
507.222 820.018 508.708 823.563 508.822 827.676 cv
508.708 831.68 507.222 835.107 504.363 838.08 cv
501.506 840.938 497.963 842.426 493.961 842.426 cv
489.961 842.426 486.417 840.938 483.559 838.08 cv
482.072 836.593 480.93 834.879 480.129 833.051 cv
479.787 833.393 479.328 833.85 478.986 834.193 cv
476.699 836.479 474.527 838.88 472.584 841.281 cv
472.572 841.268 472.559 841.254 472.547 841.238 cv
471.186 839.65 469.713 838.066 468.24 836.596 cv
462.893 831.248 457.067 827.014 450.796 823.867 cv
449.473 823.205 448.138 822.574 446.775 822.01 cv
438.99 818.783 430.552 817.16 421.486 817.16 cv
416.57 817.16 411.998 817.618 407.54 818.531 cv
405.367 798.184 396.794 780.465 381.705 765.377 cv
377.247 760.918 372.445 756.916 367.416 753.602 cv
367.759 753.26 368.102 752.916 368.444 752.574 cv
379.305 741.713 384.791 728.453 384.791 713.02 cv
384.791 711.85 384.762 710.686 384.703 709.533 cv
384.527 706.07 384.077 702.705 383.306 700 cv
367.412 700 li
294.148 700 li
276.766 700 li
280.553 702.646 284.781 705.192 289.438 707.145 cv
291.104 707.844 292.819 708.477 294.598 709.019 cv
294.713 709.133 li
305.095 712.227 325.292 707.352 326.644 707.019 cv
326.605 707 li
326.72 707 li
326.72 707 326.691 707.007 326.644 707.019 cv
328.663 708 li
328.889 708 li
330.333 708 331.556 708.443 332.555 709.443 cv
333.555 710.442 334 711.777 334 713.222 cv
334 713.332 li
334 714.778 333.555 716 332.555 717 cv
332.222 717.334 331.889 717.666 331.556 718 cv
332.394 718 li
324.837 725.201 320.039 733.662 318 743.605 cv
318 743.72 li
315.841 753.666 316.801 763.496 321 772.984 cv
321 773.033 li
321 773.033 324.611 780.755 327.117 784.097 cv
328.963 786.556 331.012 788.842 333.3 790.918 cv
336.333 789.73 339.502 788.852 342.838 788.354 cv
345.238 787.896 347.64 787.666 350.154 787.666 cv
363.301 787.552 374.503 792.01 384 801.156 cv
384 801.271 li
386.506 803.785 li
386.62 803.9 386.85 804.127 386.964 804.243 cv
395.994 813.273 400.681 824.361 400.795 837.279 cv
400.892 848.299 397.681 857.992 391.239 866.328 cv
399.811 869.219 408.486 869.871 417.371 868.03 cv
418.629 867.688 420 867.572 421.371 868 cv
421.486 868 li
425.716 867.688 429.26 869.172 432.346 872.031 cv
432.346 872.145 432.46 872.145 432.574 872.26 cv
433.146 872.83 433.604 873.402 434.061 873.975 cv
434.176 874.089 434.289 874.201 434.403 874.432 cv
435.232 875.361 436.084 876.254 436.959 877.109 cv
443.084 883.111 458.638 889 458.638 889 cv
458.753 889 li
458.638 890 li
458.429 890 li
468.031 892.665 477.633 892.555 487.235 889.666 cv
495.537 887.137 502.701 882.822 508.729 876.725 cv
509.589 875.852 510.428 874.944 511.242 874 cv
511.355 874 li
512.271 872.889 513.299 871.777 514.328 870.778 cv
514.442 870.666 li
519.844 865.417 526.146 862.167 533.299 860.87 cv
535.683 860.438 538.162 860.223 540.734 860.223 cv
543.307 860.195 545.785 860.397 548.171 860.822 cv
555.324 862.104 561.625 865.417 567.027 870.666 cv
572.428 876 575.836 882.146 577.25 889.103 cv
577.723 891.424 577.972 893.834 578 896.333 cv
578 896.43 li
578.115 903.309 576.4 909.498 573.084 915 cv
572.969 915 li
567.865 923.326 565.3 932.267 565.353 941.744 cv
565.36 943.096 565.42 944.463 565.536 945.838 cv
566.45 956.957 570.567 966.7 577.887 975.068 cv
579.829 977.245 581.882 979.304 584.053 981.138 cv
584.056 981.14 584.058 981.143 584.061 981.145 cv
575.714 982.751 567.365 984.469 559.018 986.189 cv
558.25 986.316 557.486 986.474 556.725 986.628 cv
cp
f
659.259 941.191 mo
655.359 941.191 651.982 942.328 649.132 944.681 cv
648.725 945.018 648.328 945.377 647.942 945.764 cv
647.557 946.15 647.195 946.545 646.86 946.955 cv
644.507 949.805 643.37 953.18 643.37 957.08 cv
643.37 961.424 644.855 965.082 647.942 968.169 cv
648.328 968.555 648.725 968.918 649.132 969.257 cv
651.982 971.631 655.359 972.855 659.259 972.855 cv
659.26 972.855 659.26 972.855 659.26 972.855 cv
663.604 972.855 667.262 971.256 670.349 968.169 cv
672.277 966.239 673.625 964.088 674.365 961.684 cv
674.809 960.242 675.035 958.707 675.035 957.08 cv
675.035 952.621 673.434 948.852 670.349 945.764 cv
667.262 942.677 663.604 941.191 659.26 941.191 cv
659.26 941.191 659.26 941.191 659.259 941.191 cv
cp
0 0 0 0 cmyk
f
332.778 709.133 mo
331.75 708.104 330.492 707.647 329.006 707 cv
328.663 707 li
327.863 707.531 326.605 708 326.605 708 cv
326.471 708 li
315.931 711.966 305.39 712.421 294.738 709.247 cv
294.624 709.134 li
292.853 708.607 291.159 707.971 289.502 707.287 cv
284.601 705.263 280.188 702.555 276.273 699.14 cv
275.569 698.527 274.866 697.913 274.196 697.256 cv
274.111 697.173 274.03 697.087 273.946 697.005 cv
273.079 696.142 272.236 695.244 271.423 694.304 cv
271.378 694.255 271.334 694.204 271.292 694.152 cv
270.424 693.146 269.587 692.096 268.782 691 cv
268.42 691 li
268.42 691 267.505 689.471 266.934 688.898 cv
266.819 688.785 li
266.477 688.441 266.134 688.213 265.791 687.871 cv
265.676 687.755 li
258.074 681.055 252.923 673.041 250.299 663.713 cv
249.924 662.379 249.601 661.021 249.329 659.635 cv
248.729 656.805 248.372 654.012 248.254 651.25 cv
247.9 642.965 249.701 634.973 253.559 627.169 cv
254.017 626.142 254.244 625.112 254 624.083 cv
254 623.741 li
254.131 621.34 253.33 619.397 251.729 617.681 cv
250.472 616.423 249.215 615.738 247 615.396 cv
247 615.282 li
236.982 613.109 227.839 607.965 220.408 599.848 cv
212.862 591.503 208.52 581.901 207.49 570.814 cv
206.348 559.724 208.748 549.436 214.578 539.948 cv
217.32 535.262 220.637 531.261 224.639 527.831 cv
223.123 526.801 221.68 525.688 220.309 524.489 cv
216.191 520.893 212.72 516.542 209.891 511.483 cv
205.79 504.382 203.525 497.018 203.102 489.544 cv
203.041 488.477 203.018 487.407 203.032 486.334 cv
200.745 479.133 200.175 471.588 201.316 463.816 cv
201.546 462.1 201.66 460.271 201.66 458.442 cv
201.66 449.412 198.459 441.638 192.058 435.237 cv
186.558 429.736 180.004 426.598 172.403 425.974 cv
171.542 425.905 169.771 426 169.771 426 cv
168.018 426.005 li
167.379 426.009 166.745 426.027 166.121 426.069 cv
159.465 426.51 153.544 428.886 148.426 433.137 cv
147.595 433.826 146.786 434.563 146 435.35 cv
146 435.464 li
145.381 436.107 144.792 436.762 144.234 437.432 cv
140.322 442.106 137.887 447.396 137 453.297 cv
137 452.672 li
136.122 459.608 133.927 465.975 130.415 472 cv
130.524 472 li
127.013 478.027 122.512 483.03 117.023 487.01 cv
116.803 487.236 li
116.145 487.578 115.486 488.146 114.937 488.715 cv
114.828 488.715 114.828 488.715 114.828 488.829 cv
114.718 488.941 114.718 488.941 114.609 489.055 cv
114.499 489.169 li
111.754 492.239 110.327 495.99 110.327 500.198 cv
110.327 504.404 111.754 507.93 114.499 511 cv
114.609 511 li
122.402 519.413 126.792 529.306 128 540.789 cv
128 542 li
127.885 542 li
129.032 553.587 126.394 564.371 120.084 574.352 cv
120.2 574.237 li
113.89 584.217 105.171 591.101 94.2729 595 cv
93.6328 595 li
60.3691 594 li
60.2813 594 li
45.7549 585.892 28.3706 589.087 8.01172 603.814 cv
8.00781 603.817 8.00391 603.818 8 603.821 cv
8 822 li
297.945 821.093 li
317.225 801.413 li
322.088 796.406 327.522 792.736 333.533 790.385 cv
331.243 788.31 329.193 786.026 327.346 783.569 cv
324.838 780.23 322.708 776.563 321 772.516 cv
321 773.64 li
316.801 763.686 315.841 753.371 318 742.937 cv
318 743.541 li
318 743.541 324.434 725.137 331.636 717.936 cv
332.778 716.906 li
333.807 715.879 334.265 714.618 334 713.133 cv
334 713.02 li
334.265 711.534 333.807 710.16 332.778 709.133 cv
cp
.352483 0 .0276188 0 cmyk
f
8 866 mo
8.00098 866 li
68 866 li
68 864 li
140.563 863.886 li
175.196 867.137 208.904 871.849 241.658 877.911 cv
296.339 822 li
8 822 li
8 866 li
cp
f
354.656 838.716 mo
354.886 838.372 355 838.144 355 837.803 cv
355 837.344 li
355 837.005 354.886 836.67 354.664 836.439 cv
351.686 833.572 li
351.341 833.228 350.885 833 350.541 833 cv
350.199 833 li
350.084 833.113 349.855 833.113 349.74 833.228 cv
349.627 833.344 349.513 833.458 349.513 833.572 cv
295.437 888.766 li
299.275 889.673 303.1 890.6 306.912 891.547 cv
306.471 890.959 306.188 890.318 306.188 889.586 cv
306.188 888.67 306.531 887.87 307.103 887.185 cv
354.656 838.716 li
cp
f
585 980.386 mo
584.824 980.419 584.648 980.455 584.472 980.488 cv
584.648 980.642 584.821 980.803 585 980.953 cv
585 980.386 li
cp
f
432.574 913.641 mo
430.975 915.355 429.031 916.155 426.631 916.155 cv
424.229 916.155 422.286 915.355 420.572 913.641 cv
418.972 912.041 418.171 910.098 418.285 907.697 cv
418.171 905.297 418.972 903.353 420.572 901.637 cv
422.286 900.037 424.229 899.238 426.631 899.352 cv
429.031 899.238 430.975 900.037 432.574 901.637 cv
434.289 903.353 435.089 905.297 435.089 907.697 cv
435.089 910.098 434.289 912.041 432.574 913.641 cv
cp
574.068 915 mo
577.395 909.478 579.116 903.264 579 896.358 cv
579 896.13 li
578.972 893.541 578.722 891.046 578.247 888.642 cv
576.828 881.437 573.408 875.071 567.988 869.547 cv
562.566 864.11 556.243 860.679 549.064 859.353 cv
546.669 858.912 544.182 858.703 541.601 858.731 cv
539.02 858.731 536.531 858.954 534.139 859.401 cv
526.959 860.744 520.635 864.11 515.214 869.547 cv
515.1 869.664 li
514.067 870.697 513.035 871.849 512.117 873 cv
512.003 873 li
511.186 873.979 510.344 874.918 509.48 875.822 cv
503.431 882.137 496.241 886.605 487.91 889.225 cv
478.273 892.217 468.637 892.331 459 889.571 cv
459 890 li
458.884 890 li
450.558 887.519 443.284 883.302 437.141 877.348 cv
436.263 876.499 435.409 875.613 434.577 874.691 cv
434.462 874.463 434.349 874.351 434.233 874.237 cv
433.775 873.67 433.316 873.103 432.743 872.536 cv
432.628 872.423 432.513 872.423 432.513 872.311 cv
429.418 869.474 425.863 868 421.621 868 cv
421.506 868 li
420.13 867.887 418.755 868 417.494 868.341 cv
408.582 870.167 399.88 869.52 391.283 866.652 cv
390.104 868.162 388.853 869.644 387.453 871.063 cv
387.338 871.175 387.338 871.175 387.223 871.288 cv
354.21 904.654 li
374.971 910.847 395.314 917.638 415.201 925.041 cv
424.946 928.783 434.577 932.639 444.208 936.61 cv
444.555 936.754 444.898 936.904 445.245 937.048 cv
447.777 938.103 450.292 939.183 452.809 940.259 cv
463.188 944.699 473.445 949.317 483.566 954.128 cv
503.749 963.725 523.426 974.036 542.585 985.031 cv
542.948 985.224 543.307 985.421 543.662 985.621 cv
546.385 985.982 550.158 986.482 552.881 986.844 cv
554.383 986.48 555.982 986.128 557.602 985.805 cv
558.364 985.653 559.129 985.499 559.899 985.373 cv
568.089 983.706 576.281 982.046 584.472 980.488 cv
582.498 978.776 580.618 976.893 578.836 974.9 cv
571.52 966.556 567.404 956.84 566.49 945.752 cv
566.375 944.381 566.314 943.018 566.308 941.669 cv
566.255 932.217 568.818 923.303 573.92 915 cv
574.068 915 li
cp
f
8 1263 mo
9 1263 li
9 1190.62 li
9 1110 li
8 1110 li
8 1257.83 li
8 1263 li
cp
f
420.572 913.641 mo
422.286 915.355 424.229 916.155 426.631 916.155 cv
429.031 916.155 430.975 915.355 432.574 913.641 cv
434.289 912.041 435.089 910.098 435.089 907.697 cv
435.089 905.297 434.289 903.353 432.574 901.637 cv
430.975 900.037 429.03 899.238 426.631 899.352 cv
424.229 899.238 422.286 900.037 420.572 901.637 cv
418.972 903.353 418.171 905.297 418.285 907.697 cv
418.171 910.098 418.972 912.041 420.572 913.641 cv
cp
0 0 0 0 cmyk
f
224.639 527.831 mo
225.666 528.632 226.809 529.318 228.066 530.004 cv
227.038 527.375 225.896 526.689 224.639 527.831 cv
cp
.352483 0 .0276188 0 cmyk
f
127.114 542 mo
127 541.887 li
127 542 li
127.114 542 li
cp
f
248.344 615 mo
248.229 614.886 248.114 614.886 248 614.886 cv
248 615 li
248.344 615 li
cp
f
82.876 866 mo
68.4727 866 li
68.4707 866 li
8 866 li
7.99902 866 li
7.99902 873 li
25.9473 873 li
26.1748 873 26.4043 873 26.7461 873.123 cv
46.5234 875.087 65.957 877.542 85.1621 880.365 cv
115.227 884.908 144.604 890.434 173.299 897.187 cv
187.68 900.547 201.854 904.235 215.865 908.174 cv
231.877 890.589 li
231.877 890.589 231.877 890.589 231.877 890.588 cv
214.529 886.371 197.069 882.678 179.242 879.506 cv
147.92 873.736 115.798 869.192 82.876 866 cv
cp
0 .490944 .268315 0 cmyk
f
340.308 918.909 mo
340.095 919.128 li
339.408 919.814 338.609 920.158 337.694 920.158 cv
336.779 920.158 335.979 919.814 335.293 919.242 cv
332.109 916.139 li
317.223 911.244 302.099 906.698 286.768 902.451 cv
285.646 902.14 284.536 901.815 283.412 901.508 cv
265.682 919.606 li
279.906 924.123 293.943 928.896 307.743 933.988 cv
326.605 940.961 345.125 948.393 363.187 956.51 cv
368.56 955.709 373.932 954.794 379.076 953.879 cv
388.075 952.228 396.455 950.515 404.174 948.743 cv
407.144 948.064 410.036 947.377 412.798 946.678 cv
397.023 939.934 381.02 933.533 364.672 927.473 cv
356.623 924.512 348.487 921.677 340.308 918.909 cv
cp
f
223.271 931 mo
234.926 919.126 li
234.925 919.124 li
223.27 931 li
223.271 931 223.271 931 223.271 931 cv
cp
0 .321447 .154726 0 cmyk
f
155.465 934.529 mo
165.183 932.672 176.194 931.394 188.501 930.726 cv
189.169 930.69 189.872 930.67 190.548 930.637 cv
215.866 904.749 li
201.855 901.082 187.681 897.648 173.3 894.52 cv
144.605 888.231 115.228 883.088 85.1631 878.857 cv
65.958 876.229 46.5244 873.943 26.7471 872.114 cv
26.4053 872 26.1758 872 25.9482 872 cv
8 872 li
8 961.393 li
8.00098 961.393 li
39.9873 965.007 74.7832 967.379 112.426 968.547 cv
129.536 969.079 147.234 969.36 165.525 969.396 cv
241.544 969.279 307.39 964.821 363.061 956.021 cv
344.999 947.904 326.479 940.473 307.617 933.5 cv
293.817 928.407 279.78 923.635 265.556 919.118 cv
252.755 932.185 li
258.31 932.821 263.587 933.594 268.522 934.529 cv
284.184 937.387 291.956 940.932 291.956 944.932 cv
291.956 948.932 284.184 952.477 268.522 955.333 cv
252.86 958.192 234.114 959.678 212.051 959.794 cv
203.735 959.749 195.886 959.515 188.501 959.086 cv
176.194 958.371 165.183 957.12 155.465 955.333 cv
141.762 952.834 134.098 949.808 132.396 946.41 cv
132.153 945.923 132.031 945.432 132.031 944.932 cv
132.031 944.432 132.153 943.939 132.396 943.453 cv
134.098 940.056 141.762 937.029 155.465 934.529 cv
cp
f
241.781 932 mo
241.783 932 li
234.927 919.279 li
234.926 919.279 li
241.781 932 li
cp
f
244.414 936.882 mo
241.783 932 li
241.781 932 li
244.414 936.882 li
cp
0 .490944 .268315 0 cmyk
f
223.271 931 mo
223.271 931 223.271 931 223.27 931 cv
204.633 949.989 li
223.271 931 li
cp
f
190.674 930.933 mo
189.998 930.966 189.295 930.986 188.627 931.021 cv
176.32 931.689 165.31 932.968 155.592 934.825 cv
141.889 937.325 134.225 940.352 132.522 943.749 cv
132.279 944.235 132.157 944.728 132.157 945.228 cv
132.157 945.728 132.279 946.219 132.522 946.706 cv
134.225 950.104 141.889 953.13 155.592 955.629 cv
165.31 957.416 176.32 958.667 188.627 959.382 cv
196.012 959.811 203.861 960.045 212.177 960.09 cv
234.24 959.974 252.986 958.488 268.648 955.629 cv
284.31 952.772 292.082 949.228 292.082 945.228 cv
292.082 941.228 284.31 937.683 268.648 934.825 cv
263.713 933.89 258.436 933.117 252.881 932.48 cv
233.782 951.973 li
233.097 952.658 232.297 953 231.383 953 cv
177.082 953 li
176.168 953 175.368 952.658 174.797 951.973 cv
174.111 951.287 173.768 950.485 173.768 949.571 cv
173.652 948.658 173.996 947.856 174.682 947.284 cv
190.674 930.933 li
cp
f
332.778 716.971 mo
331.636 718 li
331.75 718 li
332.093 717.656 332.436 717.314 332.778 716.971 cv
cp
.352483 0 .0276188 0 cmyk
f
503.792 816.589 mo
500.934 814.074 497.733 812.816 493.962 812.816 cv
489.961 812.816 486.417 814.301 483.559 817.16 cv
480.586 820.018 479.101 823.563 479.215 827.676 cv
479.101 829.619 479.443 831.335 480.129 833.051 cv
480.93 834.879 482.072 836.593 483.559 838.08 cv
486.417 840.938 489.961 842.422 493.962 842.422 cv
497.963 842.422 501.506 840.938 504.363 838.08 cv
507.222 835.107 508.708 831.68 508.822 827.676 cv
508.708 823.563 507.222 820.018 504.363 817.16 cv
504.136 816.93 503.907 816.702 503.792 816.589 cv
cp
0 0 0 0 cmyk
f
459 890 mo
458.885 890 li
459 890.113 li
459 890 li
cp
.352483 0 .0276188 0 cmyk
f
1422.22 1013.44 mo
1418.91 1012.98 1415.47 1012.52 1412.16 1012.18 cv
1381.18 1008.39 1349.48 1005.12 1317.11 1002.38 cv
1287.96 999.908 1258.27 997.859 1228 996.29 cv
1228 996.404 li
1227.2 996.29 1226.51 996.29 1225.71 996.29 cv
1224.69 996.176 1223.77 996.176 1222.86 996.063 cv
1169.14 994.519 li
1047.84 991.033 li
1014.58 991.973 li
982.071 992.891 li
956.387 993.617 li
934.328 994.239 li
897.949 995.268 li
898.927 1004.88 li
957.115 1001.37 1019.32 999.605 1085.56 999.605 cv
1226.12 999.605 1348.54 1007.51 1452.86 1023.32 cv
1440.4 1015.8 li
1434.96 1015.07 1429.51 1014.35 1424.05 1013.67 cv
1423.48 1013.55 1422.79 1013.55 1422.22 1013.44 cv
cp
0 0 0 .05098 cmyk
f
722.589 1269 mo
722.475 1268.47 722.475 1268.59 722.589 1269 cv
722.589 1269 li
cp
f
136.729 1266.53 mo
136.615 1266.87 136.615 1267.21 136.502 1267.56 cv
136.272 1269 li
136.845 1269 li
722.589 1269 li
722.475 1268.59 722.475 1268.47 722.589 1269 cv
2014.68 1269 li
2015.25 1269 li
2015.02 1267.79 li
2014.91 1267.33 2014.8 1266.87 2014.68 1266.53 cv
2014.57 1266.19 2014.57 1265.96 2014.57 1265.73 cv
2014.45 1265.5 li
2014.11 1264.01 2013.76 1262.53 2013.42 1261.16 cv
2011.25 1253.61 2008.28 1246.18 2004.51 1238.86 cv
2001.33 1232.76 1997.56 1226.71 1993.19 1220.75 cv
1983.6 1207.62 1971.13 1194.85 1955.81 1182.51 cv
1932.15 1163.41 1901.74 1145.18 1864.51 1127.81 cv
1847.58 1119.91 1829.24 1112.2 1809.49 1104.66 cv
1786.05 1095.63 1760.56 1086.94 1733.24 1078.48 cv
1726.04 1076.31 1718.72 1074.14 1711.52 1072.08 cv
1700.43 1068.77 1689.23 1065.68 1677.91 1062.59 cv
1677 1062.36 1676.08 1062.14 1675.17 1061.91 cv
1595.73 1043.24 li
1706.95 1110.26 li
1707.75 1110.72 1708.21 1111.4 1708.43 1112.32 cv
1708.66 1113.12 1708.55 1114.03 1708.09 1114.83 cv
1682.14 1157.93 li
1681.57 1158.73 1680.88 1159.3 1680.08 1159.53 cv
1679.17 1159.65 1678.26 1159.53 1677.45 1159.07 cv
1637.56 1135.01 li
1610.88 1150.71 1562.89 1164.84 1493.52 1177.36 cv
1380.69 1197.71 1244.55 1207.88 1085.08 1207.88 cv
1060.16 1207.88 1035.81 1207.64 1012.04 1207.14 cv
883.637 1204.46 771.851 1194.53 676.749 1177.36 cv
674.368 1176.93 672.049 1176.5 669.719 1176.06 cv
571.958 1157.9 518.404 1136.42 509.051 1111.71 cv
508.061 1109.09 507.564 1106.43 507.564 1103.75 cv
507.564 1075.05 563.922 1050.47 676.75 1030.13 cv
726.525 1021.14 780.878 1014.14 839.783 1009.13 cv
838.643 997.885 li
818.244 999.148 798.113 1000.64 778.244 1002.32 cv
768.24 1003.17 758.289 1004.05 748.425 1004.99 cv
742.685 1005.54 736.969 1006.11 731.277 1006.69 cv
731.271 1006.69 731.266 1006.69 731.26 1006.69 cv
717.549 1008.07 703.951 1009.55 690.467 1011.27 cv
659.986 1014.8 630.301 1019.03 601.189 1023.71 cv
601.15 1023.71 601.111 1023.72 601.074 1023.72 cv
599.474 1023.95 597.873 1024.18 596.272 1024.53 cv
594.789 1024.76 593.336 1025.01 591.861 1025.25 cv
584.35 1026.47 576.918 1027.73 569.523 1029.07 cv
567.963 1029.35 566.395 1029.61 564.836 1029.9 cv
564.037 1030.01 563.236 1030.24 562.438 1030.36 cv
563.236 1030.93 564.037 1031.5 564.836 1032.07 cv
566.354 1033.19 567.934 1034.37 569.523 1035.56 cv
570.209 1036.07 570.891 1036.58 571.58 1037.1 cv
572.266 1037.67 573.066 1038.13 573.866 1038.7 cv
573.066 1038.82 572.266 1039.04 571.467 1039.27 cv
537.857 1046.13 505.278 1053.79 473.614 1062.25 cv
462.297 1065.34 451.208 1068.42 440.234 1071.62 cv
432.803 1073.79 425.602 1075.97 418.399 1078.25 cv
302.371 1113.92 221.895 1154.16 176.969 1198.97 cv
170.752 1205.11 165.218 1211.35 160.364 1217.67 cv
149.686 1231.59 142.303 1245.96 138.216 1260.81 cv
137.76 1262.19 137.301 1263.67 136 1265.16 cv
136 1265.61 li
137 1265.73 li
137 1266.19 li
136.729 1266.3 136.729 1266.41 136.729 1266.53 cv
cp
f
912.35 1175.76 mo
860.681 1181.02 li
859.652 1181.13 858.852 1180.79 858.166 1180.22 cv
857.365 1179.65 857.023 1178.85 856.908 1177.93 cv
839.783 1009.13 li
780.878 1014.14 726.525 1021.14 676.75 1030.13 cv
563.922 1050.47 507.564 1075.05 507.564 1103.75 cv
507.564 1106.43 508.061 1109.09 509.051 1111.71 cv
518.405 1136.42 571.959 1157.9 669.719 1176.06 cv
672.049 1176.5 674.368 1176.93 676.749 1177.36 cv
771.851 1194.53 883.637 1204.46 1012.04 1207.14 cv
1035.81 1207.64 1060.16 1207.88 1085.08 1207.88 cv
1244.55 1207.88 1380.69 1197.71 1493.52 1177.36 cv
1562.89 1164.84 1610.88 1150.71 1637.56 1135.01 cv
1452.37 1023.32 li
1348.05 1007.51 1225.63 999.605 1085.08 999.605 cv
1018.83 999.605 956.629 1001.37 898.44 1004.88 cv
915.438 1171.99 li
915.553 1172.9 915.208 1173.71 914.637 1174.51 cv
914.065 1175.19 913.265 1175.65 912.35 1175.76 cv
cp
0 0 0 0 cmyk
f
626.566 916.385 mo
625.88 916.27 625.194 916.155 624.394 916.155 cv
621.994 916.155 620.049 916.955 618.335 918.557 cv
616.734 920.271 615.934 922.215 615.934 924.617 cv
615.934 926.901 616.734 928.844 618.335 930.445 cv
619.135 931.359 620.164 932.045 621.307 932.389 cv
622.221 932.73 623.251 932.961 624.394 932.961 cv
626.795 932.961 628.738 932.159 630.338 930.445 cv
631.757 929.121 632.516 927.549 632.748 925.758 cv
632.797 925.383 632.854 925.012 632.854 924.617 cv
632.854 922.215 632.053 920.271 630.338 918.557 cv
629.352 917.569 628.146 916.803 626.74 916.441 cv
626.681 916.426 626.626 916.398 626.566 916.385 cv
cp
f
500.592 990.802 mo
498.877 989.775 497.162 988.859 495.447 987.831 cv
485.186 982.063 474.746 976.539 464.214 971.143 cv
460.346 969.16 456.486 967.168 452.58 965.236 cv
449.181 963.555 445.741 961.926 442.313 960.283 cv
432.572 955.611 422.762 951.039 412.798 946.678 cv
410.035 947.377 407.144 948.064 404.174 948.743 cv
396.455 950.515 388.075 952.228 379.076 953.879 cv
373.932 954.794 368.56 955.709 363.187 956.51 cv
365.951 957.742 368.682 959.027 371.43 960.283 cv
391.863 969.621 411.871 979.563 431.317 990.346 cv
433.718 991.604 436.119 992.975 438.519 994.347 cv
440.234 995.376 441.948 996.29 443.664 997.319 cv
448.808 1000.29 453.951 1003.26 458.867 1006.24 cv
470.641 1013.32 481.845 1020.53 492.59 1027.84 cv
508.594 1022.01 521.512 1015.95 531.456 1009.44 cv
529.855 1008.41 528.256 1007.49 526.655 1006.46 cv
522.998 1004.18 519.339 1001.89 515.682 999.719 cv
510.766 996.632 505.735 993.661 500.592 990.802 cv
cp
0 .703944 .460426 0 cmyk
f
473.614 1062.25 mo
505.278 1053.79 537.857 1046.13 571.467 1039.27 cv
570.82 1038.75 570.17 1038.27 569.523 1037.77 cv
567.192 1035.96 564.852 1034.23 562.436 1032.53 cv
563.236 1032.41 564.036 1032.18 564.836 1032.07 cv
564.037 1031.5 563.236 1030.93 562.438 1030.36 cv
562.438 1030.36 562.436 1030.36 562.436 1030.36 cv
552.49 1023.27 542.202 1016.29 531.456 1009.44 cv
521.512 1015.95 508.594 1022.01 492.59 1027.84 cv
496.934 1030.81 501.277 1033.79 505.508 1036.87 cv
506.307 1037.44 507.107 1038.13 507.907 1038.7 cv
507.107 1038.82 506.307 1038.93 505.508 1039.04 cv
508.594 1041.22 511.566 1043.5 514.652 1045.79 cv
485.731 1051.73 460.925 1060.31 440.234 1071.62 cv
451.208 1068.42 462.297 1065.33 473.614 1062.25 cv
cp
0 .490944 .268315 0 cmyk
f
505.381 1036.87 mo
501.15 1033.79 496.807 1030.81 492.463 1027.84 cv
476.688 1033.56 457.939 1039.04 436.334 1044.19 cv
356.656 1063.28 260.404 1072.77 147.691 1072.77 cv
97.8506 1072.77 51.3252 1070.94 8 1067.28 cv
8 1190.62 li
47.0947 1194.4 88.5059 1196.88 132.279 1198.13 cv
146.87 1198.55 161.724 1198.83 176.842 1198.97 cv
221.768 1154.16 302.244 1113.92 418.272 1078.25 cv
425.475 1075.97 432.676 1073.79 440.107 1071.62 cv
460.798 1060.31 485.604 1051.73 514.525 1045.79 cv
511.439 1043.5 508.467 1041.22 505.381 1039.04 cv
506.18 1038.93 506.98 1038.82 507.78 1038.7 cv
506.98 1038.13 506.18 1037.44 505.381 1036.87 cv
cp
0 .321447 .154726 0 cmyk
f
438.392 994.347 mo
435.992 992.975 433.591 991.604 431.19 990.346 cv
411.742 979.564 391.736 969.621 371.301 960.283 cv
368.553 959.027 365.824 957.742 363.06 956.51 cv
307.389 965.31 241.543 969.768 165.524 969.885 cv
147.233 969.849 129.535 969.567 112.425 969.035 cv
74.7822 967.867 39.9863 965.496 8 961.881 cv
8 1067.28 li
51.3252 1070.94 97.8506 1072.77 147.691 1072.77 cv
260.404 1072.77 356.656 1063.28 436.334 1044.19 cv
457.939 1039.04 476.688 1033.56 492.463 1027.84 cv
481.718 1020.53 470.514 1013.32 458.74 1006.24 cv
453.824 1003.26 448.681 1000.29 443.537 997.319 cv
441.821 996.29 440.107 995.376 438.392 994.347 cv
cp
0 .865904 .709102 0 cmyk
f
8 1263.4 mo
8 1269 li
136 1269 li
136 1268.36 li
136.502 1267.56 li
136.615 1266.99 136.729 1266.3 136.845 1265.73 cv
137 1265.61 li
137 1265.46 li
137.342 1263.97 137.802 1262.48 138.259 1261.11 cv
142.351 1246.26 149.743 1231.89 160.436 1217.97 cv
165.295 1211.65 170.837 1205.41 177.062 1199.27 cv
161.924 1199.12 147.051 1198.84 132.441 1198.43 cv
88.6113 1197.18 47.1465 1194.69 8 1190.92 cv
8 1263.4 li
cp
0 .490944 .268315 0 cmyk
f
136.729 1269 mo
136.845 1269 li
136.729 1268.47 136.729 1268.59 136.729 1269 cv
cp
0 .865904 .709102 0 cmyk
f
1947.64 938.674 mo
1939.32 940.988 1929.66 942.469 1918.73 943.063 cv
1915.09 943.262 1911.31 943.363 1907.4 943.363 cv
1903.48 943.363 1899.7 943.262 1896.06 943.063 cv
1885.14 942.469 1875.48 940.988 1867.16 938.674 cv
1859.27 936.503 1854.25 934.102 1851.96 931.246 cv
1849.1 932.273 1846.36 933.303 1843.5 934.332 cv
1825.32 941.076 1807.38 948.279 1789.89 956.052 cv
1763.37 967.826 1737.64 980.628 1712.84 994.688 cv
1711.12 995.718 1709.41 996.635 1707.69 997.661 cv
1702.78 1000.41 1698.09 1003.26 1693.41 1006.12 cv
1701.76 1010.55 1711.1 1014.85 1721.37 1019.01 cv
1725.48 1020.67 1729.74 1022.32 1734.14 1023.94 cv
1736.34 1024.75 1738.57 1025.55 1740.85 1026.35 cv
1745.22 1027.9 1749.65 1029.39 1754.13 1030.84 cv
1821.42 1052.54 1901.46 1063.39 1994.16 1063.39 cv
2041.38 1063.39 2085.26 1060.59 2125.82 1054.99 cv
2131.62 1054.19 2137.34 1053.33 2143 1052.42 cv
2143 919.128 li
2139 919.586 2134.88 920.043 2130.77 920.5 cv
2104.48 923.129 2076.13 924.386 2045.72 924.386 cv
2014.05 924.386 1984.79 923.015 1957.81 920.158 cv
1962.04 922.33 1964.21 924.844 1964.21 927.588 cv
1964.21 928.402 1964.02 929.19 1963.63 929.959 cv
1961.96 933.283 1956.65 936.168 1947.64 938.674 cv
cp
0 .321447 .154726 0 cmyk
f
1796.23 911.927 mo
1792.68 911.927 1789.71 913.185 1787.31 915.699 cv
1784.79 918.099 1783.54 921.072 1783.65 924.617 cv
1783.54 926.102 1783.77 927.473 1784.22 928.73 cv
1784.79 930.445 1785.83 932.045 1787.31 933.533 cv
1789.71 935.932 1792.68 937.189 1796.23 937.189 cv
1799.66 937.189 1802.63 935.932 1805.14 933.533 cv
1807.55 931.018 1808.8 928.045 1808.8 924.617 cv
1808.8 923.129 1808.57 921.871 1808.23 920.613 cv
1807.66 918.784 1806.63 917.186 1805.14 915.699 cv
1802.63 913.185 1799.66 911.927 1796.23 911.927 cv
cp
0 0 0 0 cmyk
f
2014.91 1269 mo
2143 1269 li
2143 1268 li
2091 1268 li
2143 1268 li
2143 1174.39 li
2098.59 1180.22 2050.35 1183.19 1998.79 1183.19 cv
1984.27 1183.19 1969.87 1182.96 1955.81 1182.51 cv
1971.13 1194.85 1983.6 1207.62 1993.19 1220.75 cv
1997.56 1226.71 2001.33 1232.76 2004.51 1238.86 cv
2008.28 1246.18 2011.25 1253.61 2013.42 1261.16 cv
2013.76 1262.53 2014.11 1264.01 2014.45 1265.5 cv
2014.57 1265.73 li
2014.57 1265.96 2014.57 1266.19 2014.68 1266.53 cv
2014.8 1266.87 2014.91 1267.33 2015.02 1267.79 cv
2015.25 1268 li
2014.68 1268 li
2014.68 1268 2014.8 1268.93 2014.91 1269 cv
cp
0 .321447 .154726 0 cmyk
f
1690.03 970.113 mo
1717.69 956.052 1746.39 943.25 1775.99 931.932 cv
1777.37 931.359 1778.74 930.901 1780.11 930.33 cv
1778.62 930.901 1777.14 931.359 1775.65 931.932 cv
1746.1 943.229 1717.57 956.007 1689.95 970.152 cv
1689.97 970.139 1690 970.123 1690.03 970.113 cv
cp
f
1686.26 972.056 mo
1687.39 971.438 1688.53 970.83 1689.66 970.295 cv
1688.46 970.846 1687.36 971.396 1686.26 972.056 cv
cp
f
1689.95 970.152 mo
1689.85 970.195 1689.76 970.248 1689.66 970.295 cv
1689.71 970.273 1689.75 970.248 1689.8 970.227 cv
1689.85 970.201 1689.9 970.177 1689.95 970.152 cv
cp
f
1635.85 1000.06 mo
1635.05 1000.41 1634.36 1000.86 1633.56 1001.43 cv
1622.24 1008.29 1611.38 1015.27 1600.98 1022.47 cv
1611.38 1015.27 1622.35 1008.29 1633.67 1001.43 cv
1634.47 1000.98 1635.27 1000.52 1636.07 1000.06 cv
1640.99 996.977 1646.02 994.002 1651.16 991.146 cv
1652.88 990.117 1654.59 989.203 1656.31 988.173 cv
1658.25 987.146 1660.08 986.002 1661.91 984.973 cv
1659.96 986.002 1658.14 987.146 1656.19 988.173 cv
1651.51 990.802 1646.93 993.434 1642.47 996.063 cv
1640.3 997.319 1638.02 998.691 1635.85 1000.06 cv
cp
f
1592.89 1028.22 mo
1589.84 1030.36 1586.81 1032.52 1583.83 1034.71 cv
1583.72 1034.83 1583.6 1034.83 1583.49 1034.94 cv
1583.22 1035.13 1582.96 1035.33 1582.69 1035.51 cv
1584.41 1036.55 li
1585.99 1035.38 1587.65 1034.15 1589.32 1033 cv
1589.32 1033 1589.32 1033 1589.32 1033 cv
1588.52 1032.88 1587.72 1032.66 1586.92 1032.54 cv
1587.72 1031.97 1588.52 1031.4 1589.32 1030.83 cv
1590.49 1029.94 1591.69 1029.08 1592.89 1028.22 cv
cp
f
1592.89 1028.09 mo
1595.56 1026.21 1598.25 1024.34 1600.98 1022.47 cv
1598.22 1024.28 1595.54 1026.17 1592.89 1028.09 cv
cp
f
1678.39 1062.59 mo
1689.71 1065.68 1700.91 1068.77 1712 1072.08 cv
1712 1071.97 li
1700.91 1068.77 1689.83 1065.68 1678.62 1062.59 cv
1677.59 1062.36 1676.56 1062.13 1675.65 1061.91 cv
1676.56 1062.14 1677.48 1062.36 1678.39 1062.59 cv
cp
f
1638.24 798.525 mo
1639.5 799.783 1640.99 800.355 1642.82 800.355 cv
1644.53 800.355 1646.02 799.783 1647.28 798.525 cv
1648.53 797.271 1649.1 795.783 1649.1 793.953 cv
1649.1 792.24 1648.53 790.754 1647.28 789.496 cv
1646.02 788.238 1644.53 787.552 1642.82 787.552 cv
1640.99 787.552 1639.5 788.238 1638.24 789.496 cv
1636.99 790.754 1636.3 792.24 1636.42 793.953 cv
1636.3 795.783 1636.99 797.271 1638.24 798.525 cv
cp
0 0 0 0 cmyk
f
1846.87 527.145 mo
1845.27 528.86 1844.47 530.803 1844.47 533.205 cv
1844.47 535.49 1845.27 537.432 1846.87 539.034 cv
1848.58 540.75 1850.53 541.549 1852.93 541.549 cv
1855.33 541.549 1857.27 540.75 1858.87 539.034 cv
1860.58 537.432 1861.38 535.49 1861.38 533.205 cv
1861.38 530.803 1860.58 528.86 1858.87 527.145 cv
1857.27 525.545 1855.33 524.746 1852.93 524.746 cv
1850.53 524.746 1848.58 525.545 1846.87 527.145 cv
cp
f
1842.52 575.386 mo
1837.84 575.386 1833.84 576.987 1830.52 580.302 cv
1827.21 583.617 1825.61 587.617 1825.72 592.192 cv
1825.61 596.764 1827.21 600.65 1830.52 603.964 cv
1833.33 606.777 1836.65 608.425 1840.45 608.934 cv
1841.13 609.024 1841.81 609.09 1842.52 609.109 cv
1847.1 608.995 1850.99 607.28 1854.3 603.964 cv
1857.61 600.65 1859.33 596.764 1859.33 592.192 cv
1859.33 587.617 1857.61 583.617 1854.3 580.302 cv
1852.41 578.413 1850.32 577.097 1848.04 576.301 cv
1846.32 575.701 1844.49 575.386 1842.52 575.386 cv
cp
f
533.515 25.5713 mo
534.085 25 li
534.2 25 li
533.971 25.1162 533.742 25.3438 533.515 25.5713 cv
cp
216.979 181.117 mo
216.635 180.659 216.178 180.202 215.836 179.86 cv
216.407 180.087 216.863 180.318 217.436 180.659 cv
216.979 181.117 li
cp
635.658 53.5488 mo
635.659 53.5488 li
634.881 54.2148 634.104 54.7695 633.104 55.3257 cv
630.216 56.5479 627.328 56.6577 624.441 55.6577 cv
621.444 54.6567 619.333 52.7695 618 50.1045 cv
618 49.8838 li
617.556 49.1064 617.223 48.2168 617 47.3296 cv
617 47.1055 li
616.556 45.6626 616.112 44.3296 615.556 42.9976 cv
622.22 46.4395 628.884 49.9937 635.658 53.5488 cv
cp
568.951 61.2026 mo
569.98 64.6313 571.237 68.0591 572.953 71.604 cv
580.268 87.0356 592.043 97.6685 608.275 103.383 cv
624.394 109.099 640.17 108.299 655.602 100.983 cv
671.034 93.5513 681.665 81.8921 687.381 65.7749 cv
692.525 51.1421 692.41 36.8521 687.038 22.7915 cv
684.064 21.3062 681.209 19.9341 678.35 18.4497 cv
677.779 18.105 677.207 17.8774 676.635 17.5337 cv
667.807 13.0239 659.061 8.50342 650.323 3.93115 cv
648.479 2.96631 646.63 2.01221 644.785 1.04053 cv
644.554 1 li
541.745 1 li
547.803 4.50244 553.862 8.04541 560.035 11.5903 cv
558.766 11.7974 558.194 12.2915 558.28 13.0503 cv
558.669 16.4722 572.73 25.4868 600.502 40.1685 cv
594.801 37.8813 589.397 35.728 584.293 33.7065 cv
548.559 19.5522 520.939 11 520.939 11 cv
520.208 11 li
509.636 9.06738 499.407 10.5474 489.63 15.2065 cv
489.518 15.3203 li
479.741 19.9824 472.353 27.0293 467.237 36.4644 cv
462.577 44.8755 455.643 51.3535 446.549 55.7876 cv
446.436 55.9004 li
440.823 58.5298 435.167 60.0493 429.465 60.4585 cv
426.043 60.7021 422.607 60.5469 419.154 59.9941 cv
419.269 59.8804 li
417.662 59.6094 416.072 59.4146 414.495 59.29 cv
412.918 59.165 411.354 59.1123 409.806 59.1338 cv
400.513 59.2607 391.732 62.0098 383.462 67.3828 cv
383.349 67.4966 li
379.938 69.626 376.913 72.0781 374.27 74.8008 cv
373.388 75.71 372.551 76.647 371.754 77.6133 cv
374.823 80.9092 376.416 84.7739 376.416 89.2065 cv
376.416 90.3438 376.309 91.4375 376.097 92.4897 cv
375.462 95.6499 373.885 98.4414 371.413 100.916 cv
368.94 103.388 366.148 104.965 362.989 105.598 cv
361.95 105.807 360.868 105.913 359.747 105.916 cv
355.032 105.927 350.502 103.867 347.287 100.417 cv
344.708 97.6494 343.286 94.4917 342.956 90.8789 cv
342.906 90.333 342.882 89.7759 342.882 89.2065 cv
342.882 86.5928 343.45 84.2046 344.473 82.0459 cv
341.744 81.0225 338.903 80.2271 335.948 79.6582 cv
324.013 77.2715 312.758 79.0903 302.075 85 cv
301.051 85 li
299.286 85.9775 297.641 87.0542 296.048 88.1792 cv
287.939 93.9033 282.035 101.503 278.4 110.969 cv
277.7 112.742 276.936 114.457 276.105 116.113 cv
270.298 127.701 261.327 136.408 249.115 142.314 cv
249.114 142.314 li
249 142.428 li
249 142.314 li
242.48 145.403 236.072 147.348 229.553 148.148 cv
223.946 148.72 218.685 150.209 213.879 152.382 cv
209.761 148.492 204.957 145.403 199.466 143 cv
200.564 143 li
192.822 139.686 186.235 135 180.918 128.94 cv
171.904 118.766 160.694 113.164 147.172 111.909 cv
147.057 112.022 li
133.652 110.765 121.633 114.308 111 122.652 cv
111 122.769 li
110.884 122.652 li
104.24 127.868 99.3105 134.021 96.0962 141.14 cv
94.167 145.413 92.856 150.032 92.1631 155.004 cv
91.5854 158.776 90.5459 162.549 89.2744 166.436 cv
89.1577 166.549 li
84.1899 180.154 75.1753 190.214 62 196.499 cv
62 196.587 li
54.4468 200.195 46.7788 201.999 39 201.999 cv
39 201.923 li
39 201.923 19.6934 204.235 11.3916 209.538 cv
10.2246 210.284 9.07813 211.087 7.95215 211.943 cv
8 212.094 li
8 347.043 li
8 349.159 li
8.74609 348.889 9.5918 348.56 10.4395 348.243 cv
12.1074 347.62 13.7754 346.943 15.4424 346.186 cv
30.875 338.754 41.3926 326.982 47.2217 310.864 cv
52.9375 294.745 52.1377 278.854 44.8223 263.422 cv
42.877 259.422 40.5918 255.65 38.1914 252.335 cv
53.7383 252.677 69.1699 249.362 84.374 242.161 cv
86.7314 241.024 88.999 239.805 91.2207 238.545 cv
113.131 226.133 128.457 207.804 137.072 183.518 cv
139.588 176.431 141.303 169.341 142.331 162.369 cv
152.506 173.917 164.852 182.833 179.598 189.348 cv
177.312 196.321 177.769 203.294 181.084 210.268 cv
184.398 217.241 189.771 222.155 197.201 224.784 cv
204.633 227.415 211.834 227.071 218.922 223.756 cv
226.01 220.211 230.924 214.84 233.555 207.523 cv
234.583 204.438 235.154 201.351 235.154 198.378 cv
247.157 197.121 259.16 193.692 271.049 188.09 cv
297.228 175.629 315.402 156.083 325.691 129.448 cv
331.178 136.307 338.381 141.336 347.297 144.421 cv
359.757 148.879 372.102 148.194 384.221 142.592 cv
396.338 136.762 404.682 127.504 409.141 115.043 cv
409.712 113.328 410.283 111.5 410.74 109.786 cv
430.174 113.1 449.379 110.357 468.355 101.44 cv
487.674 92.1802 502.307 78.4634 512.023 60.4009 cv
516.139 64.7446 521.282 68.0591 527.341 70.2329 cv
537.857 73.8911 548.146 73.4331 558.092 68.7456 cv
558.32 68.6313 558.549 68.5171 558.777 68.4038 cv
556.605 68.2896 554.662 67.4897 553.062 65.8882 cv
551.461 64.2866 550.662 62.3442 550.662 59.9448 cv
550.662 57.5435 551.461 55.6001 553.062 53.8853 cv
554.775 52.2856 556.719 51.4839 559.12 51.6001 cv
561.406 51.4839 563.35 52.2856 564.95 53.8853 cv
566.666 55.6001 567.465 57.5435 567.465 59.9448 cv
567.465 60.9722 567.352 62.0024 567.008 62.9155 cv
567.58 62.3442 568.266 61.7739 568.951 61.2026 cv
cp
.468818 0 .0271916 0 cmyk
f
8 211.969 mo
8 211.908 li
7.98438 211.92 7.96777 211.931 7.95215 211.943 cv
7.9375 211.954 7.92285 211.963 7.90918 211.974 cv
8 211.969 li
cp
.352483 0 .0276188 0 cmyk
f
88.4956 166.146 mo
88.6094 166.035 li
89.8496 162.215 90.8643 158.507 91.4277 154.799 cv
92.1035 149.912 93.3828 145.372 95.2646 141.171 cv
98.4009 134.175 103.21 128.127 109.692 123 cv
109.693 123 109.693 123 109.693 123 cv
109.805 123 li
120.179 114.798 131.904 111.315 144.983 112.552 cv
145.096 112.44 li
158.288 113.674 169.224 119.18 178.019 129.181 cv
183.206 135.137 189.631 139.742 197.186 143 cv
199.832 143 li
199.832 143 210.119 148.652 214.234 152.539 cv
219.036 150.368 224.294 148.879 229.896 148.308 cv
236.411 147.508 249.329 143 249.329 143 cv
249.443 143 li
249.444 143 li
261.646 136.577 270.611 127.875 276.414 116.296 cv
277.244 114.641 278.008 112.928 278.707 111.157 cv
282.34 101.698 288.239 94.103 296.343 88.3833 cv
47.9688 1 li
7.95117 1 li
8 1.10791 li
8 3.93115 li
8 197.749 li
8 197.75 li
8 211.908 li
9.11084 211.066 10.2412 210.273 11.3916 209.538 cv
19.6934 204.235 39 201.923 39 201.923 cv
39 200.867 li
46.7788 200.867 54.4468 199.069 62 195.474 cv
62 195.585 li
74.854 189.407 83.6489 179.52 88.4956 166.146 cv
cp
f
429.465 60.4585 mo
435.167 60.0493 440.823 58.5298 446.436 55.9004 cv
446.549 55.7876 li
455.643 51.3535 462.577 44.8755 467.237 36.4644 cv
472.353 27.0293 479.741 19.9824 489.518 15.3203 cv
489.63 15.2065 li
499.407 10.5474 509.636 9.06738 520.208 11 cv
520.252 11 li
526.866 12.1206 548.348 19.916 584.7 34.3149 cv
589.893 36.3716 595.39 38.562 601.189 40.8887 cv
572.938 25.9531 558.634 16.7827 558.238 13.3018 cv
558.15 12.5269 558.732 12.0273 560.023 11.8164 cv
553.744 8.21045 547.58 4.60645 541.417 1 cv
541.015 1 li
48.6982 1 li
296.338 88.1675 li
297.924 87.0469 299.564 85.9736 301.323 85 cv
302.075 85 li
312.758 79.0903 324.013 77.2715 335.948 79.6582 cv
338.903 80.2271 341.744 81.0225 344.473 82.0459 cv
345.422 80.0107 346.695 78.3008 348.679 76.5229 cv
351.033 74.4141 353.988 73.0391 357.125 72.6592 cv
362.811 71.9712 367.51 73.4819 371.413 77.3838 cv
371.527 77.4976 371.64 77.4976 371.754 77.6133 cv
372.551 76.647 373.388 75.71 374.27 74.8008 cv
376.913 72.0781 379.938 69.626 383.349 67.4966 cv
383.462 67.3828 li
391.732 62.0098 400.513 59.2607 409.806 59.1338 cv
411.354 59.1123 412.918 59.165 414.495 59.29 cv
416.072 59.4146 417.662 59.6094 419.269 59.8804 cv
419.154 59.9941 li
422.607 60.5469 426.043 60.7021 429.465 60.4585 cv
cp
f
559.12 51.1963 mo
556.719 51.0801 554.775 51.8818 553.062 53.4814 cv
551.461 55.1963 550.662 57.1396 550.662 59.541 cv
550.662 61.9404 551.461 63.8828 553.062 65.4844 cv
554.662 67.084 556.605 67.8857 558.777 68 cv
558.892 68 559.006 68 559.12 68 cv
561.406 68 563.35 67.2002 564.95 65.4844 cv
565.865 64.5713 566.551 63.541 567.008 62.5117 cv
567.352 61.5986 567.465 60.5684 567.465 59.541 cv
567.465 57.1396 566.666 55.1963 564.95 53.4814 cv
563.35 51.8818 561.406 51.0801 559.12 51.1963 cv
cp
0 0 0 0 cmyk
f
359.414 72.6343 mo
354.727 72.6343 350.725 74.2329 347.41 77.5474 cv
345.924 79.0356 344.896 80.521 344.096 82.2358 cv
343.066 84.4067 342.496 86.8081 342.496 89.437 cv
342.496 90.0093 342.52 90.5698 342.57 91.1187 cv
342.922 94.9722 344.51 98.3091 347.41 101.21 cv
350.727 104.528 354.727 106.241 359.414 106.241 cv
360.557 106.241 361.658 106.133 362.717 105.921 cv
365.894 105.285 368.701 103.699 371.188 101.21 cv
373.674 98.7241 375.26 95.9165 375.898 92.7388 cv
376.111 91.6802 376.219 90.5806 376.219 89.437 cv
376.219 84.979 374.617 81.0923 371.531 77.7778 cv
371.416 77.6616 371.303 77.6616 371.188 77.5474 cv
367.873 74.2329 363.986 72.6343 359.414 72.6343 cv
cp
f
327.748 219.87 mo
329.234 221.355 330.95 222.041 332.894 222.041 cv
334.951 222.041 336.665 221.355 338.151 219.87 cv
339.638 218.382 340.323 216.555 340.323 214.61 cv
340.323 212.667 339.638 210.954 338.151 209.465 cv
336.665 207.981 334.951 207.181 332.894 207.181 cv
330.949 207.181 329.234 207.981 327.748 209.465 cv
326.263 210.954 325.463 212.667 325.576 214.61 cv
325.463 216.555 326.263 218.382 327.748 219.87 cv
cp
f
284.652 286.171 mo
281.109 289.6 279.395 293.831 279.395 298.747 cv
279.395 303.661 281.109 307.891 284.652 311.436 cv
288.082 314.865 292.312 316.58 297.228 316.58 cv
302.143 316.58 306.371 314.865 309.916 311.436 cv
313.345 307.891 315.061 303.661 315.061 298.747 cv
315.061 293.831 313.345 289.6 309.916 286.171 cv
306.371 282.627 302.143 280.914 297.228 280.914 cv
292.312 280.914 288.082 282.627 284.652 286.171 cv
cp
f
474.985 537.432 mo
469.156 537.432 464.125 539.493 460.01 543.493 cv
458.731 544.808 457.676 546.224 456.797 547.723 cv
454.927 550.913 453.951 554.5 453.951 558.469 cv
453.951 560.6 454.233 562.605 454.778 564.493 cv
455.722 567.767 457.472 570.675 460.01 573.215 cv
464.125 577.329 469.156 579.386 474.985 579.5 cv
478.843 579.424 482.291 578.479 485.348 576.668 cv
486.91 575.743 488.378 574.606 489.731 573.215 cv
493.848 569.212 495.905 564.298 496.02 558.469 cv
495.941 554.5 494.94 550.913 493.026 547.723 cv
492.129 546.224 491.046 544.808 489.731 543.493 cv
485.731 539.493 480.814 537.432 474.985 537.432 cv
cp
f
498.877 599.163 mo
497.048 601.106 496.133 603.279 496.133 605.908 cv
496.133 608.422 497.048 610.594 498.877 612.423 cv
500.82 614.367 502.992 615.282 505.621 615.282 cv
508.137 615.282 510.309 614.367 512.137 612.423 cv
514.081 610.594 514.996 608.422 514.996 605.908 cv
514.996 603.279 514.081 601.106 512.137 599.163 cv
510.309 597.333 508.137 596.419 505.621 596.419 cv
502.992 596.419 500.82 597.333 498.877 599.163 cv
cp
f
458.182 653.119 mo
459.668 654.607 461.382 655.293 463.325 655.293 cv
463.483 655.293 463.637 655.26 463.794 655.25 cv
465.56 655.146 467.219 654.486 468.584 653.119 cv
470.069 651.635 470.755 649.918 470.755 647.975 cv
470.755 645.918 470.069 644.202 468.584 642.717 cv
467.098 641.232 465.268 640.43 463.325 640.545 cv
461.795 640.455 460.411 640.951 459.165 641.883 cv
458.828 642.135 458.497 642.402 458.182 642.717 cv
456.694 644.202 455.895 645.918 456.009 647.975 cv
455.895 649.918 456.694 651.635 458.182 653.119 cv
cp
f
1250.83 994.119 mo
1251.63 994.119 1252.32 994.119 1253 994.232 cv
1253 994.119 li
1252.32 994.005 1251.63 994.005 1250.83 994.005 cv
1249.91 993.889 1249 993.889 1248.09 993.889 cv
1249 994.005 1249.91 994.005 1250.83 994.119 cv
cp
0 .240513 .10724 0 cmyk
f
1328.05 931.964 mo
1326.9 929.219 1325.99 926.362 1325.3 923.274 cv
1321.53 907.957 1323.59 893.553 1331.71 880.178 cv
1334.45 875.72 li
1334.56 875.605 1334.56 875.491 1334.68 875.378 cv
1342.79 862.117 1354.34 853.658 1369.43 850 cv
1369.54 850 li
1384.63 846.228 1398.92 848.284 1412.3 856.401 cv
1412.87 856.629 li
1471.97 892.295 li
1487.52 901.669 li
1477.23 919.158 li
1455.96 906.472 li
1432.53 927.275 li
1386.35 899.382 li
1384.86 898.469 1383.38 898.241 1381.77 898.696 cv
1381.32 898.811 li
1379.72 899.154 1378.46 899.954 1377.54 901.325 cv
1374.69 906.241 li
1373.77 907.727 1373.54 909.442 1374 911.157 cv
1374 911.271 li
1374.12 911.615 1374.23 911.843 1374.34 912.185 cv
1374.57 912.757 li
1374.92 913.786 1375.71 914.473 1376.97 915.044 cv
1418.24 939.851 li
1398.92 957.111 li
1461.68 995.064 li
1481.11 977.804 li
1540.1 1013.35 li
1520.78 1030.5 li
1597.94 1077.14 li
1617.38 1059.88 li
1676.36 1095.43 li
1657.04 1112.69 li
1692.37 1133.96 li
1679.22 1155.9 li
1637.04 1130.3 li
1578.05 1094.75 li
1500.77 1048.22 li
1441.79 1012.67 li
1378.92 974.944 li
1351.14 958.027 li
1340.28 951.624 1332.5 942.938 1328.05 931.964 cv
cp
1440.56 1015.67 mo
1453.09 1023.19 li
1639.38 1135 li
1639.38 1135 li
1679.51 1159.09 li
1680.32 1159.54 1681.23 1159.66 1682.15 1159.54 cv
1682.96 1159.32 1683.65 1158.74 1684.23 1157.94 cv
1710.33 1114.8 li
1710.79 1114 1710.9 1113.08 1710.67 1112.28 cv
1710.44 1111.37 1709.98 1110.68 1709.18 1110.22 cv
1597.3 1043.13 li
1585.91 1036.3 li
1584.18 1035.27 li
1582.36 1034.17 li
1425.38 940.042 li
1379.03 912.249 li
1378.92 912.136 1378.69 912.021 1378.58 911.907 cv
1378.23 911.794 1378.12 911.678 1378 911.563 cv
1378 911.26 li
1377.77 910.694 li
1377.65 910.47 1377.65 910.245 1377.65 910.13 cv
1377.43 909.34 1377.54 908.551 1378 907.873 cv
1380.88 903.018 li
1380.76 903.242 li
1381.11 902.565 1381.68 902.115 1382.49 902 cv
1382.71 902 li
1382.94 902 li
1383.64 901.775 1384.32 901.889 1384.9 902.228 cv
1431.91 930.032 li
1460.68 947.052 li
1461.48 947.504 1462.4 947.617 1463.33 947.504 cv
1464.13 947.276 1464.82 946.826 1465.39 946.035 cv
1488.81 907.69 li
1491.38 903.47 li
1491.96 902.68 1492.07 901.775 1491.84 900.873 cv
1491.61 899.969 1491.15 899.291 1490.35 898.839 cv
1415.14 854.355 li
1414.91 854.242 1414.68 854.127 1414.45 854.016 cv
1414.22 853.902 li
1400.08 845.66 1384.9 843.514 1368.91 847.467 cv
1365.92 848.164 1363.1 849.1 1360.37 850.154 cv
1348.5 854.722 1339.01 862.56 1332 873.66 cv
1331.89 873.775 1331.89 873.888 1331.89 874 cv
1331.77 874 li
1331.66 874.113 1331.66 874.113 1331.66 874.225 cv
1328.9 878.629 li
1320.28 892.743 1317.97 907.761 1322 923.792 cv
1322 924.266 li
1322.8 927.356 1323.73 930.446 1324.99 933.308 cv
1326.96 938.057 1329.5 942.387 1332.58 946.33 cv
1337.06 952.083 1342.71 956.996 1349.6 961 cv
1349.48 961 li
1440.56 1015.67 li
cp
0 0 0 0 cmyk
f
1477.29 919.471 mo
1487.58 901.98 li
1472.03 892.606 li
1456.03 906.783 li
1477.29 919.471 li
cp
0 0 0 .2 cmyk
f
1456.03 907 mo
1472.03 892.823 li
1412.93 857.157 li
1396.82 871.447 li
1398.53 872.248 1400.36 873.161 1402.07 874.19 cv
1456.03 906.998 li
1456.03 907 li
1456.03 907 li
cp
.181186 1 1 .105287 cmyk
f
1369.61 850 mo
1369.49 850 li
1354.4 853.658 1342.86 862.117 1334.74 875.378 cv
1334.74 875.491 1334.74 875.715 1334.63 875.833 cv
1340.69 871.605 1347.54 868.632 1355.2 866.803 cv
1369.83 863.03 1383.67 864.401 1396.82 870.919 cv
1412.93 856.629 li
1412.36 856.401 li
1398.99 848.284 1384.7 846.228 1369.61 850 cv
cp
0 0 0 .2 cmyk
f
1334.63 876.145 mo
1334.74 876.026 1334.74 875.803 1334.74 875.689 cv
1334.63 875.803 1334.63 875.918 1334.51 876.031 cv
1331.77 880.489 li
1323.65 893.864 1321.59 908.269 1325.37 923.586 cv
1326.05 926.674 1326.97 929.53 1328.11 932.275 cv
1344.34 917.871 li
1342.63 915.242 1341.26 912.383 1340 909.525 cv
1338.4 906.096 1337.14 902.438 1336.23 898.666 cv
1334.77 892.838 1334.15 887.135 1334.27 881.61 cv
1334.31 879.768 1334.43 877.947 1334.63 876.145 cv
cp
0 0 0 .08236 cmyk
f
1334.63 876.145 mo
1334.43 877.947 1334.31 879.768 1334.27 881.61 cv
1334.15 887.135 1334.77 892.838 1336.23 898.666 cv
1337.14 902.438 1338.4 906.096 1340 909.525 cv
1341.26 912.383 1342.63 915.242 1344.34 917.871 cv
1396.82 871.23 li
1383.67 864.713 1369.83 863.342 1355.2 867.115 cv
1347.54 868.943 1340.69 871.918 1334.63 876.145 cv
cp
0 0 0 0 cmyk
f
1377.54 901.637 mo
1378.46 900.266 1379.72 899.467 1381.32 899.122 cv
1381.77 899.008 li
1383.38 898.551 1384.86 898.78 1386.35 899.693 cv
1432.53 927.588 li
1455.96 906.783 li
1455.96 906.781 li
1402.01 873.975 li
1400.29 872.945 1398.46 872.031 1396.75 871.23 cv
1344.28 917.871 li
1349.19 925.301 1355.82 931.588 1364.17 936.617 cv
1398.92 957.423 li
1418.24 940.162 li
1376.97 915.355 li
1375.71 914.784 1374.92 914.098 1374.57 913.068 cv
1374.34 912.496 li
1374.23 912.154 1374.12 911.927 1374 911.584 cv
1374 911.469 li
1373.54 909.754 1373.77 908.039 1374.69 906.553 cv
1377.54 901.637 li
cp
0 .872068 .714076 0 cmyk
f
1344.34 917.871 mo
1328.11 932.275 li
1332.57 943.25 1340.34 951.936 1351.2 958.339 cv
1378.98 975.256 li
1398.99 957.423 li
1364.23 936.617 li
1355.89 931.588 1349.26 925.302 1344.34 917.871 cv
cp
0 .321447 .154726 0 cmyk
f
1441.85 1012.98 mo
1461.75 995.376 li
1398.99 957.423 li
1378.98 975.256 li
1441.85 1012.98 li
cp
0 0 0 .08236 cmyk
f
1657.11 1113 mo
1676.43 1095.74 li
1617.44 1060.19 li
1598.01 1077.45 li
1657.11 1113 li
cp
0 .872068 .714076 0 cmyk
f
1679.28 1156.21 mo
1692.43 1134.27 li
1657.11 1113 li
1637.1 1130.61 li
1679.28 1156.21 li
cp
0 0 0 .08236 cmyk
f
1637.1 1130.61 mo
1657.11 1113 li
1598.01 1077.45 li
1578.12 1095.06 li
1637.1 1130.61 li
cp
0 .321447 .154726 0 cmyk
f
1520.84 1030.81 mo
1540.16 1013.67 li
1481.18 978.115 li
1461.75 995.376 li
1520.84 1030.81 li
cp
0 .872068 .714076 0 cmyk
f
1500.84 1048.53 mo
1520.84 1030.81 li
1461.75 995.376 li
1441.85 1012.98 li
1500.84 1048.53 li
cp
0 .321447 .154726 0 cmyk
f
1578.12 1095.06 mo
1598.01 1077.45 li
1520.84 1030.81 li
1500.84 1048.53 li
1578.12 1095.06 li
cp
0 0 0 .08236 cmyk
f
1806.94 751.041 mo
1805.68 750.813 1804.54 751.041 1803.5 751.727 cv
1800.06 754.241 li
1798.92 755.044 1798.23 756.071 1798 757.442 cv
1798 757.673 1798 757.9 1798 758.128 cv
1798 758.7 li
1797.88 759.502 1798.23 760.302 1798.92 760.987 cv
1819.89 790.823 li
1801.21 796.767 li
1815.29 816.739 li
1833.19 842.149 li
1851.76 836.206 li
1881.79 878.731 li
1863.22 884.675 li
1896.34 932 li
1872.84 932 li
1843.86 890.891 li
1813.96 848.409 li
1781.99 803.072 li
1767.91 782.974 li
1766.53 781.032 1765.34 779.056 1764.32 777.041 cv
1761.27 770.998 1759.83 764.616 1760 757.852 cv
1760 757.85 1760 757.85 1760 757.85 cv
1760 755.563 1760.23 753.282 1760.69 751.112 cv
1762.75 739.351 1768.59 729.986 1778.33 723.248 cv
1781.54 720.966 li
1781.65 720.85 1781.65 720.85 1781.77 720.85 cv
1791.39 714.113 1802.05 711.828 1813.61 714 cv
1813.73 714 li
1825.3 715.94 1834.58 721.765 1841.46 731.471 cv
1841.68 731.813 li
1871.7 774.523 li
1879.6 785.714 li
1867 794.508 li
1867 794.366 li
1856.34 779.162 li
1833.64 786.479 li
1810.15 753.099 li
1809.46 752.071 1808.54 751.385 1807.29 751.155 cv
1806.94 751.041 li
cp
1807 755.201 mo
1845.5 809.502 li
1846.07 810.188 1846.75 810.645 1847.67 810.873 cv
1848.58 810.986 1849.5 810.873 1850.3 810.301 cv
1881.28 788.468 li
1882.08 787.896 1882.53 787.21 1882.65 786.295 cv
1882.76 785.381 1882.65 784.58 1882.08 783.779 cv
1846.06 732.416 li
1844.24 729.824 li
1844.12 729.71 1844.12 729.596 1844.01 729.596 cv
1836.69 719.193 1814.18 710 1814.18 710 cv
1814.06 710 li
1813.6 711 li
1812.51 711 li
1800.99 708.955 1790.33 711.324 1780.74 718 cv
1779.88 718 li
1779.65 719 li
1779.54 719 li
1776.34 720.451 li
1766.58 727.314 1760.39 736.625 1757.86 748.225 cv
1757.86 748.229 1757.86 748.229 1757.86 748.23 cv
1757.69 748.992 1757.5 749.732 1757.36 750.515 cv
1756.9 752.916 1756.67 755.316 1756.56 757.717 cv
1756.33 767.434 1759.19 776.578 1765.13 784.923 cv
1782.93 810.303 li
1787.61 816.984 li
1850.65 906.891 li
1869.73 934.102 li
1870.07 934.447 1870.42 934.789 1870.99 935.132 cv
1871.44 935.359 1872.02 935.477 1872.59 935 cv
1918.89 935 li
1919.69 935.477 1920.49 935.246 1921.17 934.674 cv
1921.75 934.102 1922.2 933.416 1922.32 932.617 cv
1922.43 931.703 1922.2 930.901 1921.63 930.217 cv
1909.59 913.07 li
1909.42 912.813 li
1896.59 894.534 li
1896.56 894.498 li
1896.37 894.232 li
1842.04 816.814 li
1801.6 759.203 li
1801.48 758.973 1801.37 758.859 1801 758.746 cv
1801 758.287 li
1801.26 758.174 1801.26 758.06 1801.37 757.945 cv
1801.48 757.602 1802 757.029 1802 757.029 cv
1802 757.146 li
1805.26 754.746 li
1805.49 754.631 1805.83 754.515 1806.17 755 cv
1806.29 755 li
1806.63 754.631 li
1806.97 754.631 1807.2 754.746 1807 755.088 cv
1807 755.201 li
cp
0 0 0 0 cmyk
f
1759.99 757.832 mo
1759.99 757.832 li
1759.99 757.832 li
1759.99 757.832 li
cp
0 0 0 .08236 cmyk
f
1781.36 721.137 mo
1781.48 721.022 1781.48 720.908 1781.59 720.793 cv
1781.48 720.793 1781.48 720.793 1781.36 720.908 cv
1778.16 723.193 li
1768.44 729.938 1762.61 739.313 1760.56 751.086 cv
1760.1 753.258 1759.87 755.543 1759.87 757.83 cv
1775.42 752.802 li
1775.19 751.293 1775.06 749.771 1775 748.23 cv
1775 748.229 1775 748.229 1775 748.225 cv
1774.97 747.432 1774.92 746.644 1774.96 745.828 cv
1774.85 742.971 1775.08 740.113 1775.65 737.254 cv
1776.68 731.311 1778.5 725.938 1781.36 721.137 cv
cp
f
1813.6 714 mo
1813.49 714 li
1801.94 711.826 1791.31 714.113 1781.71 720.856 cv
1781.6 720.973 1781.6 721.087 1781.48 721.2 cv
1786.85 720.171 1792.57 720.171 1798.51 721.2 cv
1809.72 723.144 1818.86 728.287 1826.06 736.862 cv
1841.5 731.832 li
1841.27 731.488 li
1834.41 721.772 1825.15 715.942 1813.6 714 cv
cp
0 0 0 .2 cmyk
f
1775.42 752.802 mo
1825.94 736.798 li
1818.74 728.223 1809.6 723.08 1798.39 721.137 cv
1792.45 720.107 1786.74 720.107 1781.36 721.137 cv
1778.5 725.938 1776.67 731.311 1775.65 737.254 cv
1775.08 740.113 1774.84 742.971 1774.96 745.828 cv
1774.92 746.644 1774.97 747.432 1775 748.225 cv
1775 748.229 1775 748.229 1775 748.23 cv
1775.06 749.771 1775.19 751.293 1775.42 752.802 cv
cp
0 0 0 0 cmyk
f
1760 757.83 mo
1760 757.83 1760 757.83 1760 757.832 cv
1759.83 764.606 1761.26 770.992 1764.31 777.041 cv
1765.33 779.059 1766.52 781.037 1767.89 782.98 cv
1781.95 803.1 li
1801.16 796.926 li
1783.66 771.893 li
1779.32 765.832 1776.58 759.545 1775.55 752.802 cv
1760 757.83 li
cp
0 .321447 .154726 0 cmyk
f
1798 758.287 mo
1798 758.06 1798 757.832 1798 757.602 cv
1798.23 756.23 1798.92 755.203 1800.06 754.4 cv
1803.49 751.887 li
1804.52 751.201 1805.66 750.973 1806.92 751.201 cv
1807.26 751.314 li
1808.52 751.545 1809.43 752.23 1810.12 753.258 cv
1833.55 786.639 li
1856.19 779.322 li
1828.86 740.227 li
1827.95 738.969 1827.04 737.826 1826.12 736.798 cv
1775.59 752.802 li
1776.63 759.545 1779.37 765.832 1783.71 771.893 cv
1801.2 796.926 li
1819.84 790.982 li
1798.92 761.146 li
1798.23 760.461 1797.88 759.662 1798 758.859 cv
1798 758.287 li
cp
0 .872068 .714076 0 cmyk
f
1826.06 736.798 mo
1826.98 737.826 1827.89 738.969 1828.81 740.227 cv
1856.13 779.322 li
1871.44 774.521 li
1841.5 731.768 li
1826.06 736.798 li
cp
.181186 1 1 .105287 cmyk
f
1867 794.525 mo
1867 794.523 li
1879.58 785.723 li
1871.69 774.521 li
1856.37 779.322 li
1867 794.525 li
cp
0 0 0 .2 cmyk
f
1862.99 884.834 mo
1881.5 878.891 li
1851.56 836.365 li
1833.04 842.309 li
1862.99 884.834 li
cp
0 .872068 .714076 0 cmyk
f
1813.83 848.482 mo
1843.67 891.008 li
1862.99 884.834 li
1833.04 842.309 li
1813.83 848.482 li
cp
0 .321447 .154726 0 cmyk
f
1872.59 932 mo
1896.02 932 li
1862.99 884.675 li
1843.67 890.849 li
1872.59 932 li
cp
0 0 0 .08236 cmyk
f
1781.94 803.1 mo
1813.83 848.482 li
1833.04 842.309 li
1815.18 816.898 li
1801.14 796.926 li
1781.94 803.1 li
cp
f
357.626 841.323 mo
358.542 840.409 359 839.379 359 838.123 cv
359 837.664 li
359 836.406 358.542 835.262 357.741 834.461 cv
354.538 831.372 li
353.509 830.342 352.364 829.884 351.105 830 cv
350.877 830 li
350.648 829.886 350.419 829.886 350.191 830 cv
349.733 830.113 li
348.819 830.228 348.131 830.686 347.56 831.486 cv
321.477 858.142 li
311.982 840.523 li
272.287 881.134 li
281.897 898.636 li
244.604 936.729 li
241.969 931.845 li
235.108 919.114 li
223.446 930.997 li
204.794 950 li
177.223 950 li
225.385 900.925 li
262.563 862.944 li
302.145 822.449 li
319.762 804.373 li
324.823 799.141 330.594 795.516 336.975 793.403 cv
339.101 792.699 341.296 792.162 343.555 791.791 cv
345.729 791.447 348.018 791.219 350.419 791.219 cv
362.66 791.104 373.071 795.222 381.764 803.688 cv
384.624 806.548 li
384.739 806.662 384.739 806.662 384.853 806.776 cv
393.317 815.127 397.551 825.423 397.666 837.434 cv
397.894 849.445 393.776 859.857 385.31 868.55 cv
385.081 868.895 li
347.789 906.988 li
337.951 917.054 li
337.95 917.054 li
326.625 906.187 li
340.01 892.574 li
328.456 871.181 li
357.626 841.323 li
cp
307.401 887.349 mo
306.83 888.034 306.486 888.834 306.486 889.75 cv
306.486 890.482 306.77 891.123 307.211 891.711 cv
307.32 891.855 307.381 892.015 307.516 892.15 cv
332.109 916.139 li
335.293 919.242 li
335.979 919.814 336.779 920.158 337.694 920.158 cv
338.609 920.158 339.408 919.814 340.095 919.128 cv
340.308 918.909 li
354.277 904.635 li
387.191 871.001 li
387.306 870.887 387.306 870.887 387.421 870.773 cv
388.816 869.344 390.063 867.85 391.239 866.328 cv
397.681 857.992 400.892 848.299 400.795 837.279 cv
400.681 824.361 395.994 813.273 386.964 804.243 cv
386.85 804.127 386.62 803.9 386.506 803.785 cv
384 801.271 li
384 801.156 li
374.503 792.01 363.301 787.552 350.154 787.666 cv
347.64 787.666 345.238 787.896 342.838 788.354 cv
339.502 788.852 336.333 789.73 333.3 790.918 cv
327.294 793.271 321.863 796.945 317.004 801.956 cv
297.738 821.652 li
242.865 877.76 li
232.004 888.865 li
215.992 905.238 li
190.674 931.125 li
174.682 947.477 li
173.996 948.049 173.652 948.852 173.768 949.764 cv
173.768 950.678 174.111 951.48 174.797 952.165 cv
175.368 952.852 176.168 953.192 177.082 953 cv
231.383 953 li
232.297 953.192 233.097 952.852 233.782 952.165 cv
252.881 932.673 li
265.682 919.606 li
283.412 901.508 li
285.801 899.07 li
295.735 888.93 li
349.812 833.736 li
349.812 833.622 349.926 833.508 350.039 833.393 cv
350.154 833.277 350.383 833.277 350.498 833 cv
350.84 833 li
351.184 833.164 351.64 833.393 351.984 833.736 cv
354.963 836.604 li
355.185 836.834 355.299 837.169 355 837.508 cv
355 837.967 li
355.299 838.309 355.185 838.537 354.955 838.88 cv
307.401 887.349 li
cp
0 0 0 0 cmyk
f
241.783 931.621 mo
244.414 936.503 li
281.681 898.438 li
272.077 880.947 li
234.927 918.9 li
241.783 931.621 li
cp
0 .872068 .714076 0 cmyk
f
234.926 918.9 mo
234.927 918.9 li
272.077 880.947 li
262.361 862.771 li
225.209 900.724 li
234.926 918.898 li
234.925 918.898 li
234.926 918.9 li
cp
0 .321447 .154726 0 cmyk
f
272.077 880.947 mo
311.744 840.365 li
301.914 822.305 li
262.361 862.771 li
272.077 880.947 li
cp
0 0 0 .08236 cmyk
f
381.477 803.556 mo
372.789 795.097 362.386 790.982 350.154 791.097 cv
347.754 791.097 345.467 791.324 343.295 791.668 cv
351.184 806.414 li
353.469 805.615 355.87 805.043 358.271 804.585 cv
361.128 804.014 363.986 803.785 367.072 803.785 cv
373.131 803.672 378.848 804.471 384.221 806.414 cv
384.334 806.529 384.449 806.529 384.563 806.643 cv
384.449 806.529 384.449 806.529 384.334 806.414 cv
381.477 803.556 li
cp
f
384.791 868.717 mo
385.02 868.372 li
393.479 859.686 397.595 849.281 397.366 837.279 cv
397.252 825.275 393.021 814.988 384.563 806.643 cv
384.449 806.529 384.334 806.529 384.221 806.414 cv
386.277 811.672 387.306 817.389 387.421 823.563 cv
387.535 835.107 384.105 845.281 376.904 854.084 cv
384.791 868.717 li
cp
0 0 0 .2 cmyk
f
358.271 804.585 mo
355.87 805.043 353.469 805.615 351.184 806.414 cv
376.904 854.084 li
384.105 845.281 387.535 835.107 387.421 823.563 cv
387.306 817.389 386.277 811.672 384.221 806.414 cv
378.848 804.471 373.131 803.672 367.072 803.785 cv
363.986 803.785 361.128 804.014 358.271 804.585 cv
cp
0 0 0 0 cmyk
f
357.627 841.315 mo
328.478 871.151 li
340.023 892.529 li
374.203 857.663 li
375.232 856.52 376.146 855.378 377.176 854.234 cv
351.455 806.564 li
344.938 808.966 338.994 812.853 333.851 818.225 cv
312.016 840.516 li
321.504 858.121 li
347.568 831.485 li
348.139 830.686 348.826 830.228 349.74 830.113 cv
350.197 830 li
350.426 829.886 350.654 829.886 350.883 830 cv
351.111 830 li
352.369 829.884 353.513 830.342 354.541 831.371 cv
357.742 834.458 li
358.542 835.258 359 836.401 359 837.658 cv
359 838.117 li
359 839.372 358.542 840.401 357.627 841.315 cv
cp
0 .872068 .714076 0 cmyk
f
319.519 804.242 mo
301.914 822.305 li
311.744 840.365 li
333.579 818.074 li
338.723 812.702 344.666 808.816 351.184 806.414 cv
343.295 791.668 li
341.037 792.039 338.844 792.576 336.719 793.279 cv
330.343 795.39 324.576 799.014 319.519 804.242 cv
cp
0 .321447 .154726 0 cmyk
f
337.693 916.842 mo
347.525 906.783 li
339.752 892.379 li
326.377 905.981 li
337.693 916.842 li
cp
0 0 0 .2 cmyk
f
339.752 892.379 mo
347.525 906.783 li
384.791 868.717 li
376.904 854.084 li
375.875 855.229 374.961 856.369 373.932 857.514 cv
339.752 892.379 li
cp
.181186 1 1 .105287 cmyk
f
204.633 950 mo
223.27 931.011 li
234.925 919.135 li
234.926 919.135 li
225.209 900.96 li
177.082 950 li
204.633 950 li
cp
0 0 0 .08236 cmyk
f
946 771 mo
946 770 li
0 0 0 0 cmyk
@
875.885 775 mo
875.77 775 li
875.799 775.083 875.821 775.135 875.839 775.168 cv
875.854 775.117 875.866 775.072 875.885 775 cv
cp
f
873 718.994 mo
872.972 718.997 872.935 718.993 872.913 719 cv
873 719 li
873 718.994 li
cp
f
883.658 770.063 mo
877.943 770.635 li
876.113 770.748 874.627 771.548 873.484 773.033 cv
873.369 773.15 li
873.141 773.377 872.913 773.605 872.798 773.836 cv
872.455 774.521 li
871.883 775.549 871.655 776.578 871.998 777.836 cv
877.028 827.563 li
877.027 827.563 li
850.735 822.191 li
858 897.867 li
858 897.864 li
884.688 903.011 li
891.889 973.998 li
865.711 968.74 li
875.084 1061.56 li
901.377 1066.82 li
908.464 1137.81 li
882.286 1132.44 li
886.516 1174.96 li
860.338 1177.59 li
855.308 1126.95 li
847.992 1055.96 li
838.504 963.139 li
831.416 892.265 li
823.758 816.702 li
820.213 783.207 li
818.842 770.291 821.357 758.518 827.644 747.887 cv
829.13 745.258 830.959 742.742 833.017 740.342 cv
843.42 727.651 856.68 720.564 872.798 718 cv
873.027 718 li
873 718.734 li
873 718.994 li
873.121 718.979 873.277 718.987 873.369 719.08 cv
898.404 719.422 914.295 723.537 921.039 731.311 cv
921.268 731.424 li
932.271 740.327 939.072 751.504 941.672 764.957 cv
942.043 766.88 942.33 768.848 942.529 770.863 cv
942.645 771.32 li
949.846 842.422 li
951.675 861.172 li
930.755 863.456 li
928.24 837.964 li
896.347 831.563 li
890.746 776.006 li
890.631 774.291 889.831 772.806 888.574 771.776 cv
888.115 771.32 li
886.858 770.291 885.373 769.949 883.658 770.063 cv
cp
896.576 866.887 mo
896.689 867.801 897.032 868.602 897.833 869.172 cv
898.519 869.743 899.318 869.975 900.232 869.857 cv
952.019 864.6 li
952.932 864.485 953.732 864.027 954.304 863.342 cv
954.875 862.543 955.105 861.742 954.989 860.827 cv
945.959 770.977 li
945.846 770.863 946 770.748 946 770.748 cv
946 770.521 li
946 770.521 936.586 739.541 923.325 728.795 cv
923.096 728.682 922.867 728.451 922.753 728.338 cv
918.066 724.564 913.15 721.48 908.121 719.307 cv
887.088 714.508 872.913 713.592 865.481 716.564 cv
851.422 719.422 839.761 726.625 830.388 738.17 cv
828.215 740.799 826.387 743.428 824.785 746.17 cv
818.041 757.375 815.412 769.834 816.898 783.552 cv
820.602 820.06 li
831.512 927.588 li
838.643 997.885 li
839.783 1009.13 li
856.908 1177.93 li
857.023 1178.85 857.365 1179.65 858.166 1180.22 cv
858.852 1180.79 859.652 1181.13 860.681 1181.02 cv
912.35 1175.76 li
913.265 1175.65 914.065 1175.19 914.637 1174.51 cv
915.208 1173.71 915.553 1172.9 915.438 1171.99 cv
898.44 1004.88 li
897.463 995.268 li
875 777.492 li
875 777.037 li
875.199 776.692 875.199 776.465 875 776.234 cv
875 776.121 li
875.656 775.549 li
875.751 775.454 875.77 775.423 875.839 775.168 cv
875.821 775.135 875.799 775.083 875.77 775 cv
875.885 775 li
875.866 775.072 875.854 775.117 875.839 775.168 cv
875.892 775.26 875.914 775.178 875.998 775.093 cv
876.57 774.408 877.256 774.063 878.171 773.949 cv
884 773.377 li
884.801 773.264 885.943 774 885.943 774 cv
885.83 774 li
886.401 775 li
886.516 775 li
887.088 774.863 887.316 775.435 888 776.234 cv
888 776.352 li
896.576 866.887 li
cp
f
827.644 747.887 mo
821.357 758.518 818.842 770.291 820.213 783.207 cv
823.758 816.702 li
850.735 822.191 li
846.505 780.578 li
845.477 770.521 846.505 761.146 849.592 752.459 cv
827.644 747.887 li
cp
0 .321447 .154726 0 cmyk
f
873 718 mo
872.913 718 li
872.938 718.205 872.968 718.359 873 718.488 cv
873 718 li
cp
0 0 0 .08236 cmyk
f
833.017 740.342 mo
830.959 742.742 829.13 745.258 827.644 747.887 cv
849.592 752.459 li
850.735 749.371 852.107 746.4 853.822 743.541 cv
855.65 740.227 857.937 736.912 860.566 733.826 cv
863.652 730.053 866.854 726.738 870.398 723.879 cv
871.197 723.193 872.112 722.508 873.027 721.936 cv
873.369 719.08 li
873.28 718.989 873.12 718.963 873 718.488 cv
873 718.734 li
873.027 719 li
872.798 719 li
856.68 720.564 843.42 727.651 833.017 740.342 cv
cp
f
870.398 723.879 mo
866.854 726.738 863.652 730.053 860.566 733.826 cv
857.938 736.912 855.652 740.227 853.822 743.541 cv
852.107 746.4 850.735 749.371 849.592 752.459 cv
920.811 766.863 li
918.408 754.4 912.809 743.655 903.892 734.855 cv
903.776 735.654 li
903.436 735.424 903.206 735.197 902.977 734.969 cv
893.031 727.08 882.742 723.765 871.883 724.795 cv
873.027 721.936 li
872.112 722.508 871.197 723.193 870.398 723.879 cv
cp
0 0 0 0 cmyk
f
872.798 773.836 mo
872.913 773.605 873.141 773.377 873.369 773.15 cv
873.484 773.033 li
874.627 771.548 876.113 770.748 877.943 770.635 cv
883.658 770.063 li
885.373 769.949 886.859 770.291 888.117 771.32 cv
888.574 771.776 li
889.831 772.806 890.631 774.291 890.746 776.006 cv
896.347 831.563 li
928.24 837.964 li
921.725 772.92 li
921.496 770.863 921.152 768.806 920.811 766.863 cv
849.592 752.459 li
846.506 761.146 845.478 770.521 846.506 780.578 cv
850.735 822.191 li
877.027 827.563 li
877.028 827.563 li
871.998 777.836 li
871.655 776.578 871.883 775.549 872.455 774.521 cv
872.798 773.836 li
cp
0 .872068 .714076 0 cmyk
f
831.416 892.265 mo
858.395 897.867 li
850.735 822.191 li
823.758 816.702 li
831.416 892.265 li
cp
0 0 0 .08236 cmyk
f
838.504 963.139 mo
865.711 968.74 li
858.395 897.867 li
831.416 892.265 li
838.504 963.139 li
cp
0 .321447 .154726 0 cmyk
f
921.267 731.424 mo
921.039 731.311 li
914.295 723.537 898.404 719.422 873.369 719.08 cv
873.027 721.936 li
871.883 724.795 li
882.742 723.765 893.031 727.08 902.977 734.969 cv
903.32 734.855 903.549 734.855 903.892 734.855 cv
912.809 743.655 918.408 754.4 920.811 766.863 cv
942.643 771.32 li
942.529 770.863 li
942.33 768.848 942.043 766.88 941.672 764.957 cv
939.072 751.504 932.271 740.327 921.267 731.424 cv
cp
0 0 0 .2 cmyk
f
921.725 772.92 mo
928.24 837.964 li
949.846 842.422 li
942.643 771.32 li
920.811 766.863 li
921.152 768.806 921.496 770.863 921.725 772.92 cv
cp
.181186 1 1 .105287 cmyk
f
930.755 863.456 mo
951.675 861.172 li
949.846 842.422 li
928.24 837.964 li
930.755 863.456 li
cp
0 0 0 .2 cmyk
f
858 897.867 mo
865.316 968.74 li
891.494 973.998 li
884.293 903.011 li
858 897.864 li
858 897.867 li
cp
0 .872068 .714076 0 cmyk
f
882.286 1132.44 mo
908.464 1137.81 li
901.377 1066.82 li
875.084 1061.56 li
882.286 1132.44 li
cp
f
855.308 1126.95 mo
882.286 1132.44 li
875.084 1061.56 li
847.992 1055.96 li
855.308 1126.95 li
cp
0 .321447 .154726 0 cmyk
f
847.992 1055.96 mo
875.084 1061.56 li
865.711 968.74 li
838.504 963.139 li
847.992 1055.96 li
cp
0 0 0 .08236 cmyk
f
860.338 1177.59 mo
886.516 1174.96 li
882.286 1132.44 li
855.308 1126.95 li
860.338 1177.59 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (ABCDetective) ()
%%Title: (xmas_game_gui_background.eps)
%%CreationDate: 12/24/2018 2:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B6tg_dkLWI^9;>P"2W!s(u..07$ASjK+6+g$mqFI]<`U)Da.6"7qePY4+!TJT(@8_Ub8W=PtMb7p3(I5+#^^JG&m4fg_Z5Y
%hA>9RdDlSVmo*ce\,U8_T6G4B;\*j3;11WA%VMW[W8=%>;ks>*16)0/5H7(XU"Y5O<Sq;mh]MgU9D5FZ*q[i4`:n)Whoq*-KBgZ.
%`>I%E^QZsP;s4Aei-Wm)^L%DBWSF#gJ.rh>_7*?sa.+.t1rj,mPrTW:8@$C<!dV[K)n]#c<Y/j"mdgfO]Z?i>+q#C'$LfOZa>-Cq
%7=6far\]X:ZjV^g<GmhtPNo52)?Lq!*t/*liM&!]CfTZs)(!mI6,D;YfS;g^I)RhK9M$nZa7qXBS^IJBoUfSN)#p<]rjT\/hr/q-
%a86!sVc685%ZUT]N)(#D18f>(QOmQJ/g1jq?YL"irT^IUABdb@$p*u04PS^3THH>u-F5F%!@m&sifaKk-?D@BP[Yi76X&3kr4Uk_
%,ORX3<ZB;?Xp!Hh<poqj_WFrdo!+_/kSJ.!rT<0afUW&l,grPf0bd*:Afi@6%?TsYM,)^cLsH8nV)i<LB;!DBrZ%aGpF2&Pj_@!#
%=+<&(?!/1>ESMO77X'O8.&Vr;9EdTLnI3=S(e"QN`E5]pI4Qn""XjGp%FN;e_AV!_FEJQ_+:`$,P#51);!6i6g[5R3;3"L>ECCTH
%?tD>&HE6=7Il?OL/>WTs.eJRjM(,lgC-;,k!)I45k0TJ2bIse\2Y1?dKsH`6d[:V\_eL!5$BgW"T7R1mRm:2h3idjG(]gL^hYbih
%r%Vt^i@4qZ4HIgOK[6ZUc`*/Vb4GDNo6?P`nLDl6X4]&g::j(1Jk6T(OsC0o,Qs=,Ct9G&<=q]#&Oob,BCH@^W@EMY4+'N%<!pH>
%.I<KqiK[@L@Bs%KRa"G;l(6-D5W27s;5,M]PTl!K?H'(eFe4BVpjum50765CS<ks7H4;6UcNo/e_IkWJK,q<Tc3p97'2An,E@As\
%3]'S=T?5mY%6!7Z&1cikV#\>NCA<`AfdsQL;Bj%X:/bIs<oGk%8nUpI5foqR;>c)l6W=6qrBi9/,<k-a<024aoU7BlI"Pfd7mk^h
%27,0b&YJS,:6=`A53p-s'0[WXc4Q\J0WDW[k#)NtVkFKOGXIZ'd8:N*mh(L6ceo8'4e2QrSruPte$0@e;%Vau@;pgQNoC15G<0ek
%)<Zh%#Y&qWk=GD846&-6huoacU#h"T;>*j,<7;;!2O)5.4$l&0)6+C*OVkC#go'dAhG_X_H%^E00ZO#=q$:TjVo-sak]Qa"'2K(&
%C,V>?AIok+9E(k>>LlUI5^1+l/NYbUA_@+7FMe;69dJOHD)*["P.&2B9,^?b_+rG7@YmCR6*c'0%SXL?/49F+<Hj_0rl9$NP4_HI
%"G)$1?KiPR(Id%g^!],JVOstlqPPb6Z_Ei>(&^qWkU#P[r[!d#Zh6rjTR/^oS#f]fQc[V#egp]/bWjq0UC?[\b*RQ851*H%,:B90
%_Bd5fnTtf1DZ;,ip4pS<Y,m&E7pTq+]0*gTh=9FPphEX4JU$K(0j\IQh3XRiR6+bq84$+0dY+epI+m97nr!HXj9#=e%tWQgGBLP"
%FTT4>E"J[sFX>o;iC318*_q-f*e\c25b;>*I3>UI<9'H8^agR7bL._]eQAR_K#KcZr@<I=Z7#Yhr.K?&enRM_+s`5$>Z;[=ONmOJ
%qB=Fg9fC6%KGSF$A]S0HmOY^rrhGW(X>?CLC-]r#0]_ohN(M*:T<cI>D!VY&)?&*_WZ1;1<t#Th7'K=i#&su2aOCV=d[)Lt[HK/t
%dX"h'ICQZP1aMoi]6i$^q^\M!'#2kY=q=RVcXF]Y0\uYX&OK1NJ&^=sG@?Obh\a4]*D+[%DL-:A1lP8=&bL%XkfRAG#g5*XUi%tt
%_qq6O93tr\m+kVJld`&F=W0mELcVkSaE0BNF7,?'B\CA?@/l0h?tmMjHiF9;@V)_4II(ZWefNTMA%.02AAPW4?/?X8qXWs]ls83E
%fm9K8s$g+2`GWo=>CL#+T!<tU9.de\]WSV+i@Kcp:q<c/%?K.YQ=a'Tp"VgG5jXHG#VrPNP8*oWe_L12R.-b,0$]']IL!K`ffmTF
%DdRT)FRC?tR?mG7.id5X$\\O_KDh[Z=R._)@L$IN*_s/?7W,cCOd]/!BJ\D-+X>fK85"5\[o[LeLg,<OlR&CArEIo_#Vudpj]2lc
%.%@31To1EPcEl?mK)8];Z,U)I4SH.ICG"k*A0aes4Ya:hrZ;O^hX#[D<NN"='6]oc,XDJQ3/\C6749QaNHK"Ae:IVNgkD4mI+MZ6
%%I'geN$?GA&&SY)SYTQ%aFdl5Z<9p#F`QC3C<J<8]9-q-*UJro/g;r\)L</jL8S)YlVa%bVOZoP$r$XZgk@=?q1\7R`GI0:$qon#
%EPYp35#u84s+%^88cM6I_O,kkD)g>T@@1T(`Yq3%<9CsU/loNB?[t;Ac[AqR9YO/[G><@E2A]QA9E2N6YYjAprX6*YDCG2n>-!Qe
%!d]NR`'gu3K]fZ!kDPI0lYSbo%&^/QYrdn"AZT"&B!g-Cr:4<-NP07nqka^(13<UF7`#H<O\T2kbM?a9_bG"7.e:oq$i@h\<\'?]
%Kp_$<Hccf9=tQrp-g!2Q$>hTbQ![[Q/3"%GHYS3$40JT7FrQ(YQ-r)CCZGBQlU'Z>p9`_'[I8p^8UeRX@q4UJYo@[nZ,#8`2!f@T
%=0l2-2W&m5<09fa19@?`ZgLd1NnQe/e%[LfJ_MJ]kIb$l@_?om7IM1p.itaqYH)'ZZoE9Gm_/eiF;FR<?/HOY>n`;go3AD?9+Pru
%q^X5C%4a3Vf]$o=!SXqjBpI=ShH4:%VMHfg^R17eb@an@6Jm67@S\RbiR?@j[s_YtL*c2Lc+O]ZM/PG7oTCi&=3B@Rj1j:'=JaM1
%,GXS;IK)g0X%XTcQ[WJSllq/DB=!gs?M%XuRalne]?U/>W^55jS=?NrRuR^=b`n#]4'!$CGco$<hHscs5A0SGm_WhO96P$Y@CJ1`
%)u'3lPVm*O='4*?hrli>fE7Wt/2=R!0#%!nFZ2nkHYTm;"Xdg[m$,0-<Dq:#4KElD_7l1Ldg;M[b3"T?ce5qZ#q[D(m]oVmC?%l[
%W"Nm'V&QkNMks][@iN[8;oquX)qSpnU[%Abm+ne,pgr=%<a`&^8COm4k:h?h4F:IW)^`$?efd/F>Og]*QA+U1__0#YeLO@Z*;ctG
%N\,+cAn>0*WcK#lXZiVi<4,>Q%9dW+9a_aY7e\4;IA=Ejg%B[SV@g8IY<&8Zlnh89+ks"']-$joX)49Vrp"G<.4YHN.[.->it7c/
%<R]*hh<2Gj=VuHn7bED7rgRs&no-$[9XX\1XYU'R>r>mLlukG+,pBb+(C8>'4h]n+g'Mo0E6GO-IYM%J;@Vs2=W!aH%6GT`S,fn.
%:L\Z%]?57,]%,lKc>UdpqO,TC6V:Yq5/7PL%3hfl&90_FFpSh_gkG@M4L.9V-`o:+_sVC/(s2u?o[$lB'Z"t728<DC4@;Wi\;R1'
%"!/nN*;p(ZkW5uo?$J?pl0u(;G8W<TBaQK!,AA4SL98(C&@(#f,Z@l=KC10PR8Qp$]0;R%cS(U>Kd4o7g#[+XGLQPnjaEWG8o.*u
%[A9U5.:-LAR]`g`2G:%5)HS*:Y?Pa/Nh`JmFtd;>,t6kF9-*V^Q#g<X1DZ!iV01cV.0k_YR7`@*U'aGVS?]6-FC-_m"o%*-"@mZO
%9uasUI,G>!['ir$]#];JIUTm@`@9IkRQ4(M,r5QUb!70hE%tp\TtCpo'eM$e.OgK9*.Wst]<5&[lYa[tq5Pfm`e">L:/aCg'oc2C
%Mhf*7?JQ+l0=hOY8.+QH:LkfBOsIXdVQT>R7M,Y3">rab_mT7cO+e=t<@d.5%t(g@$Osj(UO,cQV-&+iEYhmpr=<'QT#WN$4W+-&
%Xb.S\fnG*A/YsnJ`i4QQQEi%-J&BjWg+5V#GPdg;3SI:$fn1*&NOc7`Yt5c`K,UmA8ao+Z%2TK[s5s+E^^?2I4]F<b^+&C'Kkj+I
%QQbmL^2mslGK;'!Mh6j57hRM]&4g%di0ZTZ>Xeg&L(?_'LM.Z+TK*6g.mC"c$3j)5>DpO6W#"WTWM.PEWQ9fpA@&kdBuG13Sn;JH
%6CE[%!b0KMla8`$o+\)o]OTb5ohjg"2f(QbqQ#Ena2eJb3:nh:biV9C<eYLHc%9g1L>N"WhsI1iaUHXVRD#Y=8>b<!d3;p9>g`Wh
%<AGSL\J)!21n[B=:"4"Y-10JUGHl@&#j?Gtj:MH]4f>P1g4E+u%i'3&iWNM_aU.dadoZ12aDoSAX=Vhg07+mq'6ZT9Ad+rkd%CXI
%K45,7#U<*f2[aS[C.KOW"ct>^,p6D[D@k>RZQ.`.NdF*cS#M"Ga2eaj6ADdP<Lg[uRVJPL?a2,eN2B+"SYM/5(mg/YV0(A<!E6`-
%%0ii4Q6A9<ApoDbIKnho#%Gq.+uP+S2YQ81-%?1!*i2Q@5o?%7s,_Iu/V#,r<ARSV46Wl"d900f-`EUZ8"dJmMOIEA/ljLtC'i&r
%*%R[g,]V'9FPNHR8/A.t*c?N3W?U.aK"r$\0=1"%%ur3<%5]Z2fe1Ztl?LN5OZ=BP,ofr/*%C_Ah(B0(5a)d2<fj*>BkP(5@_%f4
%3=IDq6A7ZZO9W>6XK!gfb+s6ZaU&Thr,ifgd%I)e0Q8:Df6!"YBtWAO"nsDiL$1]+Qh1NgN`D;4d-)bY6EO.2W`cWDdgFJ.jVXLB
%:`0(L[V>kr!6qkF[$`6l<u?\6\/^N:OC4#Z1be7h+>.Y#+EFAhF)&;B+YLMB?AM10BH>Sr]^AF`YEEcsP%dmp'F4W)k_Hn5jX)C2
%cDTn`W$AP[L4pOHpTt<>)<O`)"@;u-<EO!s$bO2"C'1]PkAu.'_Z[21U-984hfu!SL8]kKb=n,-Xboa?bg;l4)E)2V(sGNo6*h@*
%U!h8aPm\it+Gg./RoFOSV%;'0n/(qi&B0YQP+%*:gl5BE1<V/"h+_%UGu1nO^6CssGYltWl`0a$lAA7O.VLi(Ae!95(/9LWLP%/N
%^gI8k@>3Vtak.;D8f*rq8d+<n,37M=C!(B,T^<`\Ga>@3P%7UJ/9)RJ8[skAL4$6FmB0*6f6sp?q=VaA]Q[K7''GU?'3nR!RFZF#
%9cjc\aKh%PNcL`d'u`]RaWo'/QGT_5WU=IX%R$f:^*QgCLHo"@;CATe,-#dCcHWFV)@]V1+S&YmY2X1+%9,C[a:1^_YrFnViuo9.
%8LRN^.6'>+4_RZfHslJV)9>8qa>oZ'-]&)&hHcJZ6@^B#i0%NY^60mSS%Y@#4<5&9YAdm$R;rI*S7"57]626BXjsTnX-X-]2>9P]
%$H?^'g=VW/P_R.V9jd<UVJ'#]TJ&?<*B[a=T%N4EGZoH'ZH*:66g"b-%dDbkgoEM6Xt4>m_+lXd$sCE+,bX+=Ze!A?\he&1IS@n$
%I^X'.M*?^Q>TSW(9^>0JI]p@m,]+#uUM'@FS[Zkn-Jo99Aef%OGF%.@3/#a\RR<0:XJI0GfUB5qJH)Rin/Ao><E;<7Yg/n3e$Y]c
%Ia2OA/aaE_G>H*^Fqq\%QaV/A_E+^eaX-IsEdH-e/^in$jS[=erjCQ`0Mj*SU6,E>cH;#^hgZs.J$/*e"1o;obUb,oVLo7$)W&2i
%]N)&gniO$CBn*99^61PFkIUXDG)e*\.JQNj"aSeH$laF-5lGP71r+Gui]R;+*<Jlt;1I*HY?E$h[;p=H+9+fKJk-g:Y=?m442e`B
%rq;s7H;/Z<p#g;aCbhH?08?UVDu\M@)P^KbGLrqB7[*7Ic%`E(qh,JghsLluEA+uC]^Ptb,aLV^L:2pO[)7$K_s9L46'1aIXOU1`
%cQ]`S'LnBsC_L0Wg)Yr-&=;cc-VY\r$@U#dj4-g&FL*in%'0J9G_W!c+C-a4d3c.Y&OE#l]Lk<!LPIGUkZF83n'1iFN;2YA?3htP
%X2F5@7kX^6quQ!iba!HZ+uTbLZB%TX5@>i_&Q;'u^l3q'B+LSIDGI'=OAbgsKCpSi)ZacA]V*DkLJ("In>n>PSA)?m>tHgDM$sB4
%0)GPBF>g+MB#U3g2E.<]pR8F7kAMN@6[TtuWB0A?P5XOI1&_"G^rj#/TatL!"!0n&#9co;?:7Zi0rU*.h<D`7K]qIsTg5hU>2jY,
%0IFn`.!SCtJ^<Hc=@sIq,N8mXB6b4I.RtY$Ne6+718n+$afJ_82p4F_Z_f+F93(lfDL58%GIhp(E\a81I$N*XrsSVHfhBUD1Z"uN
%K'joo\Zgepl8FMA7)i]:9E\q)Q]R-THEpM_rTn&s*)`p8Keqh8bG@kON#54MCM'>9AsAtg^J;c7okS\G&$@[c>9HEb,m4/(Brq#D
%FeW#sP@+iZYW4]6=f/Q6R&(HOr/tHt21<Jj(*jh_N2)Sid<1]R)p-USe<alk+lKIn&(\U^s/89Bb]dhAU(RgEeK$Pu-foVtetd"/
%lXYcYj>f7OBP7uoSltg512fqB)RsT\+ML3TD9n`I;%GZE:!O(01j:kR7)`8YjKB"+-r'bHGgf+=g?<YZcZ;W\Q7j>5I5.98/.W`]
%qu]l%'jUiJ'nplAn#"A:5*fWuK-C!P-a1:VI$J$UgYU8*o^QPY#J&gWO!4>[MZYi_0/Ao\N&cb(3^S:f!.V$Lgm&;V-%fZp^JQ+H
%Y@6>)<HZ[\mDDKVmU-IVLbTV(/)lck2[1>'fQ%'i*e#PhG'qZ@Mt,6s%mTR4-+s,.[Qf.kYMabVAUKKpi#7PIO>MKR;AEg348eJ1
%^&t<*n-tdKE6L67btKZgqb=:t3fd2+4+r+HLE6_R*r_o#p\sIiV)g`%eiZW@^S_82mWA.9P$_fM*U"kNP@`rHRVq.^s2Sf._%p6V
%@F1oar9ApKG49rg1n\=;a)2oIMkN3-Tf5(JnlMSUF2d6.hsR+hrX]((i5-ktg3hJ).V54PCQh?_^H0Rl_IA.uGImamUcHqu38_OU
%YfaV;:U;-Fi02?rU#GYBpZc:8#hE>e%)]Lep@i<OD?AjPkmG3L\.0NSVe55lpck?M[4_:N)V,:oJ>MAim#(;N"2!pXqu;Pq%S+E:
%UcTpW+4Y__L8RT]TYFARr]VRZoo/AelYa,]DgJ\t0@Kh!>km3#$M!#e]*3ldG:5JsZTb#,7Y?2Aqtil`1d8$N6AI90*0#/:rGU<t
%q/NHb(Hqf19R5@gj'SJ:rrYCZ[,8"cmr@CKfC]VkRaqD+.KAl_miVQBO%k'\E7:'NoVTM*OsuN#X4oJ-5IuhWa4%D;aFD1Yn2L,#
%:9E"3[QC&^J-l)@R%3Uf3?##h=`$!JbTbq\c03LFH(*c6VghDR6+g]Q1nW9ejJP+iRA9[e;BR_IQQ6L)Oe7[kIQR'Dm7AIe48g\Z
%J%'NB`X29-=2!Z1/b:>n4jD[jrkE1[+\7+4bR;Su\A^^^W72L(m,7mN("qps]>Icmd]_4b/g/f_s+eg;2Q71aj!p!ipQfMR48^U@
%a_[L/E)cV(Xu\ZB&"+a=,g\c:\nV9GCZ>)#O8[t<\"/ZK?U<+R4R3KgIi1JqrU1m<9)*l>*J<LUg8N;s^OR0oD\Ee#kW;)%/CF_s
%]0FcHG2lgF*p,.OI*aHgj&hXa!Qg;lZmXPs1QcGh/F,+$VoYQ3TDnH8c&&V\Bhk-RT5Bjc(!ZSG]23p0k-X0\WD:9LkW7q6IVW3W
%_D@3)`VF=4T5Ek(A>X8:jf?;m]\79"8u",4?.a@D^Tuf])rkgP1&=VbUR?gm[LK7cSjBYbhi=`H_]]B`GkFp`ZIlY?n(JPDZjWKa
%T8h&T)U&jTJQ'dLWP7Y.<Z>$d%::-NMN@A:-V[Om2?I*c=qX81>Reh:`n^o*Zh0Nh_:c^g%+oFlVUisb7Ngd%3X4E.FpIVfeL&_(
%Loh!:L'-rb<oE:qP#Q'gTWh#][CgP&2PV!3pP,GhDZjh.VT3*b^1V`87<Kf,&S%7,hXjg:J'Q+aRqf([n'6lfLm<4=2hs533`R4"
%?CdB6<n[a0BCC8JIWt.ZN:>I9+i'JO@N(O!D!r6tjW,lAbb$]7D6/<%_;tt.n1Mc$fU+hVmqETkH,"8/Hj<#HXI1XX!H:?q[7oa\
%*R;5[0T>;HKjBWH&GY,&"38mDACNDV$t]V6%(NrYi&^G35/M/i5=)p85kZO.`eG$p^GdNMgtao8aHl6TH;'-W7t2oLkC'aQ^H/GT
%=#hRG%d)^M\9*i.F$,o8E!]m@Ju>1%RQjhq?#!c;MK3#PjF'K%i4GO<;rt=JYuoPH*0+%=FVA*t.U(j/I4=+5BS_C@JT0e!@2RSb
%&Ag@fnk0JL6U/J@Gj@0Yg!&^8":@BJ;)C<`hsAG;,KKYK/U8ZG:X@).!?Irc-/%WaJ+&htCA6gohZg?^#Dh;IJC1efYI-iJ4SWR8
%#FnBlC:=J^8d?0^f:6MsjssEsm_de1m^pBVkRSJV?3In]G5kh.YjHbgl(f-.mqDX:Q`Sbb(`.oZiJFdO=RXS0%"'If<_[a7R6W[G
%hN^\V/L6jUH9!jSq\CeqKt_Kh-N@=0_akO`cA$5LX5\'_`OPf)%D>F?n?$#O&Tc1*]!4o:^KS^:TEI`>[n8kTY3Hc@b2[4W@e_s4
%gM8X9<Vrp?g"D/5FJ1au/?^)+U*)rG*NPkT."]ZP#(Fc(4aN15?p+=KCA.O'=.-VF+[;u.SX%4[0R>XoDsJ7#U>L&m6YD`XqAqT&
%cL!\XloH,tq_5`i\0tnnn1+IDkcm],bAZW/)37n'Sq.?@XE&k+X#$*Tg$E*,HYp@\,[!^)AW@Ka,BB?[%;92@-Chb#Zi_l+8olQ-
%Trj:;&/4("B[UQP>WD"1\/NV^f,\uebP@gL4.B1g>sr$')JLA-[e-E0aB.[MR4#[=V6JImM2V%<9',LdUYS%?qf\fQ=E5Gq?_])*
%2gJMP+ZLHEBsb'*,cUQPg,5/\T39J_CgOT*i@J*8=N=$&_b.lt.P1ar!u;^=!IFu9+nWXIlmQB1AHMt.MZO.UqmN0[p3P\i>2V\H
%=M(T>3#>J8VY&$q`_e`NX6*]m$F3CWAE_g"[Bb2L3NC&5h:\HY-.nB<;SBNVO5#:n$s[hZ0l"+*F;*AcpFG/,eOa\j"OFZ@iuEM3
%D1ZIInY<o*MoA?F?n/MNXM5T$Qf+<"XSa!+^rV[+XZDlQ@n1sqLnV*HX5d=&/)]lc:_O%L!h*T*hZSVo2u,Z*ZKGA^n76&h)^`R]
%/#Cp4[SZS^#>!Xi`#/[8\20TO[199&!EK_^2)AJYgs#.WHS#=K$p&8&Ufh<kJ5aO;R\oR4!ZJSf'tB+$?-hp7GW^hFKtXmX7Ap]`
%_6c5W#ku@`S1C3:UIK;\8p^oQb%2-V4MoA;%=jH#[+cYU7H&.##Wm,2Mq*'Q;sLV'Z;4QSRXP7UX%2J7>9::k;uJQ`M4PQm1!.]#
%[>)"iUVBAU:*M&D$$l$O1WurQ=k-^UjWqVrU8t;^)+^k?.HMIU3re`G26qhHLH4&Kj=Z#JXKN">4Dq7Z5JhtAX3USu$ZPd#!/%TB
%DpVM6&rM*CYQH!go`g10lh6ZdUh0R*+&4bS1p)i9k(/(`nsI^<dr4I%`*%/`AatGDc*/L#XEejihYOrCIS\\mB"GN>-J9%`a1On?
%IZn;+[cD1_#Up3@#mrDYF.FW`W/IL<:#VA)U9'-XWMUlD0khrD_paLC(gBRbh;O0I[#nV*6kkB48]#du7p`Vs^R$RqcA\,9]=]`[
%[=@/(I)0+7P!t[c%GA6-#Q5k?$J?R3RqrCrD%'ruLTSrbF.,EBMokFV\549c;#&l*3dh/S@mctSpgH.ch:)];o7eo&4M0!#g%Ve!
%;(h]I:(lV9(ZuW)GR:QO:`Rh'/`"5iNQH:Kf7:\Rd:1?ke_tIXS*%$S$'_]k17bQ[!JR$Sl^M:P\b/0`=P5G.3OYuKS%&K.3Zk+N
%Vgif]!aZhS!-g><bVqi;8"1Wula.NPE/Uma?M?';)Mp2JD)Zu3WkH]6VQi<h-S&rtT`F25I&1b((pV:p2!ZtGS&QBYrbj2MVQjR9
%?,[i4j`Qgl^hK_#BMP#^oG+'g1K84\@_:@0Qs,"L9QnVGJ\fVp7RE[cfOUtA-4<IaTP_0$H]8rrp0RP0,&[D:1_t*Bbme\u#LX#?
%+"e29/3qSD$MW'bkL'gV\ZO]?f3INQlP<dY7GtRH4VVGOqT-[A`3fb;^MfW!=Jo.)5626iVTmN,g1+>EoX*3j6hWV.D1FE5fROjG
%*,B,1FVSK3"R=2(An[.(G"AO^>`NQD!tr5k0Iq:Cic6lK4KOS33tV/o,MXtuT/PGVVMg7)\2"cO%_(Xc%_/dhdNFIg/?mSYeJr)$
%\!FUT2Z(k'eMQH5OR*lXUm4jp(Q+Ra7;@pr?#9E:rleV!>peJ-O!c<&qOi)9*bMJ-PN-2a<=%a__^iKOEmOMJ_YHnM?;/SmDRT'*
%QVr4$GI!pKr:mJ1rpos(+)/K>D^XK;mp63I_n3/91W@,15="8l&sMVh(>`k%n7+nN?e^!RZ[E9Y!Tbl#BV&(Y66-1?'6gWe@<f,b
%6U#*Gl5,f^nW8,lo#fo?IOnCTb#:H`+7&!_VHi_&GdA@)_2gFLo\"h?iFDdf!AnFN0l8!rllf?dk%qYR`P]=d/*rj!Ff1K,r('?n
%e$5D+'])5\E]'>$:;65X/UiXj5#/h8nP'ai<&)L;C(p0#c:.uk,]R2mA5fV^j1hB;C#$h[.SLt3Pb)YF5(C/a-P)ptXn"@*c=W5d
%*:S=L2,i7e5Gq^IkM,7VS:;bg,Q&h%WIbb=BL.-'94./l0"potB0Pb9S%nq0NOL5@8\48sV+UCMM9G[hab.ms,\"gt]&O/11lCe2
%V2K;rpI#s;=19NlSR;GC*I0#lfH&[!@B)E"2e_Z&%H'Jk79"Yi.i1,[_(nlVjE:8tiEr`slrioLksi:!S;*2pK:kIXg5WMThBM3J
%hJjl!HIt;P^.9?f?G*P8pj29RD&Qsp>=<nWO_lX_KR."Z@+:c\O0TQj8]oTP;VgC)GU-5/Z\bm7\fAiQZW@dS26[&Qf0Sj\kDu.W
%-F1pniFQ7EmjEjhDS(Jo!g*^@-a@c7H7ER!>1mF1IeDAUaL*4D4EtIV([*:f?;/\'R2WCrf5cqg(<H)'P)QEmcfpA-`=<<ClmMXW
%Z7g+IAGKWeijDAVJrTEP=#?/Wod/PAO0nK5hh`U7>jG'n-dbI/[8YP=BIo6_7:5h3Z;<M`'W`q7^PFZFjU[+!W':R@NBbcLs7H3;
%pAuc3,j"cm?I"Y\J1e(qhJ9nK^3]SFn&<g?U?kjj!2<]dmON_nAp6`Po9XP@m7.f<E*L.O;,hRca<(]$`r3aPoTaoaMq%[Z10AP[
%\;3@?iSTJJBE$`9rj+hZ.?FCR\\je!EZI^Ip[?u,r6^kTVa"4?LA_AEm]iB%PcjuO<,VR.i,$T_cYk,E(co8#9DcOa^WaDfr(<^!
%qphcemZ69%hu&7PE]50AETga&T:B.%rMOk[D1?$97f:C'?J;#t%_hfrTuiTb>P^tecaUqJreobqkg)]\RQk08IeR3?7`,.&8@n:t
%f<h]qHr1IQ\'2als).fRn3;m*1]F<Hisqf/H+9.<DqFq(s$oN5pXehNb5TDuGg"uZSE0VhW2fd/&9I7]`#lblULNT6s&Hi6o$@$?
%o76k83Y)A6a[.,7%#+hqSVPrb,^%64U=8Lj!)og;#'dR1!&O`H1O^3<Y'+sjL[j=ri+/a3'M(n=^B1C[9f\;`b6``Xf8G)#s)MES
%'H73!E7;QC#&\'tQ,"UH"2/CH5iB?BIh1$5J@]lJ_$.EZ0YeejILV6/ap"N-mG(=M5^BXM$jii&@(9FQ%n=ajH'%,0Q(SuR,=,m;
%SHb-=%U6cfc0&"ZI<A[$SsPj]0RqtA%[LG(Kja$63#[/QL3J6Ql8T?VQE$-VZX"UT5IoPsTEu*H;Ou`&Up[Z5`REDhc@2e,'mVn,
%Cb^^UcRmOo44mG<hS6KoEb#,M.a@BtSb$$,Wt;fX[r1o;a'8;Cpt=6A_-LcU)@o#M[0jIi<psNZh\shd@b^n"q(\Pq%R"(Y[j1L8
%QYlGr3o$$5>%INo.WhteA6S*^Zd*]+]9#)aDjTQf@f%l6He<f5pV+'TT3Z1.oDPGk4`8dT+b-7:KQ_[$lVK,h(l&5SE#=J!f]Q)*
%X6ftWd$]!B$Pa_/_b_YdIiNdG5-'C;9NMM-S)SL&R(eW8k0`\s:2"qqh2+$#*d34Kf@\C-p#4(h1,fhh/rJc1:?gm$FQ^BM45P7P
%G7$D`kqTJ"aBuUKb^,+EoS,FTa8Xms97>HX<%5P.r2In`1YK[$h#dAmh9)rAg3n7Geor("j8<dZa[j%MA1eGM8N,nnK2eW\QLjp9
%nEJ[a(-_Uf:W'#2Y7Z5n9\kIg7fHZ&HW!-diNKs>mVSl:,($TAF)Xp$9n2Q$SdW6FF+11#G9%T%pDuiL[lm:]?M8^$fB9j#kl!LS
%%_#diS2,DO*1dCMOn8n-MHoPHqiUcm_^&+h9Xc7="XOqP"`Eg2.ee/EK?8NoHZ?HC'HK@*B;XAMI^)'GmQ\FOq#1$oT@k=9HM>h&
%YgSG![ne2F3?H_Fg==f'1tQZ*U3BF"7mC>J$di;IVA#N0T9r_+q-8_ITis[Hk_p*J/9eRM+1o]<D8iNcg[ePIEnES^>k1Aid@6WZ
%J^Og]#H@OpgHdPXit%`!0Ad7)*Q<Z7dT_^ah:7N&r\iD=:;pt6\X\q:b[!;Ycd]+kFrpcpG5G`-%qo)=.X]#QQbsj;U<42&gQB^b
%2)[=$LZbKqDYpK8ESU(ZKKC&_qHPZGp;fD``Qkt_ZRg0)q;;`):7$aK,_SDWPk]7AQfR3Rs/Kr_ps4=l&H_\qr&n6B@$ZZUa%(/@
%\9s5<KSR7CRF$?:RL2uBCFVf"HS\O4QNQ5M.^^kb*YcM$4kaMdYPgUeg=o8l8dbH8/nL4OAZ9]KI[=gJh7iNX5)/.3(I=57E!($#
%/YB`<*ospHXsZ.TUHNnV^gL(hhCD+Zk@5g)8d`_ial/N5bp>R(?noKs>VfGZPG,UnHCa:?W?9A:Y^GPG5JG`t]T1%=!C+)te$JgZ
%ZSRVc/'%G."c$<mrod0LSRi>\l(.'I-2j8sCtrCc*6tS.r=Q@T'TWm+cgFZ0;nk;l.PKbUYL_1CEV/lXFaULH#TmDR48%Y.]<0lY
%pep0Kp<RcCPN-cPp#IU3GB*3Q<'V0X)0a,pdqCSg4$C-C]UfnZq9it7]:V9XN2p^QTQkXAct%SQ;;U.&-Q7Wo=S';@p,'M[gsn0>
%a0p0K^2I_X44R)HkG\-C<3PJ;A8]UbP&JIK?ueB/7fZ75G.#Ag1bO9@.aM^nWE/EQ0"pp3DkuLSeMM\WN5a5KpDkhKr[=!e#GI?!
%-E6?c1Uf#d/^rMp4D&g*5H!2PK8uD6CA)PO[Gl"Kk)Y:YcbudQG'4J368W>Yg\&G:=!TmgB@L2O4C+EJc6#*8POlUs^O<@oadl[M
%iUH$Lm;kF5nYr*S0#MbulLL_gN*MZ!S_)'1?1T>N>C<%)Nh>1rE];7C$I5t>bO6pEa8GHhLUUX6QZogMI-9qnZOgaIGD25u10(:.
%G.GJ&o$Dk$OkZEW:!,S*h2B+MX231V\elr.%u][2L+>Fmk53-$9Q-iIFfN:+`TbRYoKIVk?2Iu5o4oX6$="Cth/,Duh24b^S)&]0
%F*#KRau=Oe_<K5&lLqN2cj\`rcOOi-jgS]D>k&&*+r-qpH;l?4GDha[XAumgX5=)!PL$f7m8H#bI64DJp?ol.A+m(P3@Wak6CH0s
%E3bEeAot5a>IX?&b')]ldQ5K48E[1K&&lWXiBt4YW'<a8[cGL$lYZ%ZopJaMr7,]N.Gi1=5#q=:USgC)S:>-Te%OoahgToi][]b`
%_T-g!95;*9o^Ym!T=k#-@j+,/H?^1.^#!(^o<4o]?[`Zg;XggPIqlZ>jh9FCf^3P<rF2+Yhs1fDa@B@BR"(odD"$EOGuh+d?.<2\
%Vhr%_l;OEVY0J[mf<rMc;Q4ik\1?)VHaT?SE](H22"gF(IBJWO(Y+8Ihu7Fsf9o3?E;(>i$C?_(/0-r$S,Ljq9oD79Wjdl[&+`i*
%Q/LCZa'Z33jj8@d2]_]Ur:TQ`;`YcNFo&enUas*2&%gH&n`T?0.Z]GNVc9['I$S+`K?nQ7ijbn@qMj?;>*F<^cZ-@BPdsikO)q`i
%#WrMj#)T,G@.;0I08DX$lHV)i_nHQF#L)^O?]NB#Qfn;FW)Gc<)KSS,3%gKR5K9ISrt<\+.3BqsfDS,q0_+b>js1Oc]pl\'a_0)l
%G"_d`:9:alZW4GU^"J`!hnc%&7]]u<#BYU+SS"-%7CL*?NbZ;f(`-9oLL/RJbJIsJoGfm&5MeE%53uYITjfjHR%+UHnb1=ZRJ$%;
%m\IGEfQ9ct4jQ[8GiJG`U`c2Io.N1Z`+32@ZPfp=C]i3RL7+o'e*VQq.rk>"gIiORO/IhKN]R4tM8QuU@R+5EP3ql,I,[\1QD&sl
%WMa72Sb<]!I,beMb3A89>^e`'V*A=N_GbOuC7tK(]-tudOV90'c_cDuqrDC>k8r!G>Kg['FgN`'D97"RcS&HJ't[\0eIECF9cWi3
%YDN$22Me1'\*)H#ZUP>L&:S1ThM^uIlh+T(g?0X98p4gGNr6gV3:[YRf@g('iWt\k3Y2ic9tdsl7dr&&L%UWo)-&l0ZuRu_UdR=E
%)fn9>IdT\jRC[XVS*C:JLI^&V+,V>Ip-5d#\qQ#i^3=UA)=0Vf;!m5RDC!]RG:73l3N1)amaan@qf^X`p:!hAU6E[A>g&I$?T<UU
%ipa7+"h/SupR9H`opnD0\8ZZmL#I%';8gFVF3&\(Ed@t\PBWJd4jPtEh:+_*KZk3lGGG&[A7$qukStZ8gPOG!;=HcUYDQG/V(\F:
%i/*sB]g[tL)UEE+(47FgSd`):8gi%n&B42kh+Q?eACX8W(RCf,K&/BU%/UqoU^sIqTr^KL1dNr2??d]i&.h+Ee,gEfq%,R.*pN-R
%mP?j1TA%V=d*]?nmK,6?JVfneAG3S+C&;!Skl1A@Yjm#37\j`r%-&(dU4ENAP*[L%Y8.H2mdU`Q2$MDTqNL/f_JZH_"mJVTXD=*n
%B-c:oaF.X"eX`h<<4fhE9A9ud=tu9nV-E'L=5rO'N^&nn'HSdnPbClNj!jTF7dcGVK3$3n5O[K.h,!:nYVk'NB2boq(3k)p+j2g(
%ObHU\IgpF%0u''uVSeB5jc7/mC'(=8ZZ5=mEdCgcU/O+8P\T3^1(.c\bLq8gEXU+!EP`:,_o-I%<<`g\VQcH44>jS%grIfVR`W8h
%GbPF5+%P!@kfDV0,WSc[(?OXgY$JPl0W=i<G+`S:52g>EXLcWJC%%B>d@6oPq!]N?gWIJlk,@jhKt#p!-m_WK8Fme.RGA=3_l8Z<
%e&t/MZ)je*?jD`;ibZc*"tF?hXD8B!aT]S]Fsf)2&*p\`Rf(+[0?Tu1hS4+?*]V>2pM6du=O^Y57t-f*;J8J6fpo#*AH&js7P=eM
%_4<a3/MNb)a)GZX@9J"jV/3Zk5Kp"D-SBF[p47F$[AF0"Wjf:%Zm[;uB^q,XSeug'[nj6*%mJ![aj4+"OR*MH7TuY[YQ\Ot,3Amc
%bl6g`bD)b^ZZag_lp/&3:f<2341a_dj3jP&oStu^-"cQdc4,gE(ilep5+?4-5G5dk8CrO?]lq"nT/tptg.g\>YC-&=8&W#BE<4Hh
%!2E3L.,!>qGI'ePm&nU`5Mb[+m;.@+@WU?V;k%ECO2(+baKoh#'mb'N[t2>,GmQb3L`B_p>N!9^5r$L,qp/IAj"dH<<OIn+d<R2G
%+<Pgc&+ZD>q_WfSb4CKu>p[;Me"C96R+1.>.PeW0h@0s%LMU=`F4DC;l^Zk:p#t=uX`*YoWV:Y=_T-Wt5$jT/H>Ft2?eoIh5hd"R
%Du3Jo*L;3-akeh^PqkV"BCL"L+s4p,k-ET01V'_nd\#1<'Ke60G\SVbWL@48]+6:c7n@&[)pX0J^,8I6d1?@.jgf.ICNQQg!Y'hY
%,8d_dl(dW0T>FMOWF)22Nr\87'V:mR$OrL:AO3/eUEL;-?/t9q1@WS]KW"^)NfX7]So0MgO@tfX]KeagS_%Gq1r>_UdEX`SQSCkG
%5iuXq+3ck-J91i)biR=!(%#%;:X]Fs7C/;-6A0tu0_dKh^jo4cX(seQ@r_^3@t%(7Hh-?ZSu=T4Y=O[2Fc\+>Z_W"RT2[Bk)G:I[
%5W\!2pTJKTh$Nmf$ln&!6%_r!At(:`$fb@sD9^)aXs:=#/8P*FQ4j2OL)NuS&N$jBO`/Obhk.7f#FgQ=SsPDh)"aOK;j/Ap,L^a,
%hki%f9m-uSH<<i@&3:c#R\dY9=g0`4cq(c(:t,b`i2<o$dje9<D7BiZX>p\aXW@\%:N*3!'7W8-]K8SWK@`m$^d;P[+Cp&"2qqPN
%#7jlb\\k+;Km)alAH3bkd"6/hr.4*d5XB7U[cEDgcCFA3a0fpE'"mW9d*K?a;q*t4EgIa)(0k=H=b4_k`RuK)WXU,C\+A:6_IG^o
%hhuWEAhC/&#t]4Hd]7ICE?Di1Vn-g8M+kVW'r%DQQL]j<&kQ=^JT<9Vm+G7shQ6c&Uo)non0q(/9,HP'.gA)X6O';uiXT`!<+g[O
%Pg8C)P4g=Nhj`?E0O7A:h^13/is)Ru9nZJ,nLLL:IMDb%NY\f>"N&J]2rESRnh]t;b!AqZkG#CoQVH&bl/l=7gm/(D0'B7R)a.>O
%;2Vfmg(PJTVm.:Eqq2S4Sh%g*&>3ZXFATJmd?(dbPSW9-:Y&Dh:KpB!s++@r5kFAHMG0&]q2U(*X_/AJ8j>3o[h>Xom@Koj4^9=*
%cL#/-52+nmK9hD3eYUXMWIru:Z_A-XjhFXmT"h(B8SJD`KPS]q`:I=+HM_hS13_mON0SO62>BRS:M92c%,aOr`R5QpEclqS\d5\%
%\U<#T=1$t(%Wic9FHI2K$%shSAed_EH6Pq-VCA#]qbm<:TitSA($KHLdq?A]-5bG/&['.'iSFM"C`KCQC?/4$U(r5rh#*&0l=br\
%e]RhY"M2(Wf_Wj,O\=L+<P>uHlns?$4i)!;_HK_[7e+t9VE-C03"Z&fDQ(?d$mlt;-$t=Oe4ld*?lDWWbF#bLO$!&>(JLB4if-6r
%5uHT]USG8aP1cVS9?\AHcG%!["gaWUr.Ea)#7B"brN1]b7BYf,PLlX!M$lNXY&l_fO5&C]<V[,+#`K/cT=e/<N^A][S(C8+IN7[G
%9oI9<01:dGXp]DSe:n->'9c#N<eqR[:C2bCk4J-Fld6Eq;H"C?GnnBAo;"'9ik?)<Ilm<bjRE)EWJA$_H(cF0`OZsmc0Qf)J]mZO
%??ffWf6%VsfR@<9Z0E[*I1Q3:3*/:`<-oQ2m]Rk/GUHDW68VY]>F9(dERu]V?d>G2bK8UrX'b#eR1fp?R^$?Nh2F)FXLD_8dR&7Z
%ggnF;[;<E^`[De(-/45A98<:ce4Ok]>q+Te5!t?qq+<4Il!\Q5f/g$RYPf$Y%85j:ZW+)'T]3'4^WM9Q9/A0oa>Tt>O)nB^FCV!3
%)_/?:8@Nb;R<7^V80)8`j?JK`oaCBn1hPPcMt,q"W2[,g]QB8%a)4ur[lh$<OndJ/nsXiRgO9@tg]#,mnnlte@3&;D^]@)4gV=-g
%!b2eEVe'TJ:L.UF6X9CB=`i"XGeOWE<>_'n_48Ba7sq2%Gq7J&+^I)rhpVpFl4N/I'6_oAE/"&I[s1K%TTd.r'1\t0U%H<sqj\Ah
%*b*jr?E('_<$L#%mB]kSfjbs7HNHP:bje!qi]4c/)9<6f!FL7S[V48-RZaLH6<iR<HSG)ZD?7qDI:[1YICU<R[8J&/]kD?Y5V:L$
%@;Dq!EPX+i=M:,7,(!4G`&fIc5`q&`PAc;iXkCodSHh`qrR*6h]h+*H=O_>!a3S!QT,m.uR.6In1D`5ZXa#'Q\c@TD55FI,o],b=
%Rqs(;@c[$$o_c!)jDIc-WZMum5Rs9%i?!_2>R??r[1Bm;rQu8dDGk#QZC$&')pJ#!&G2/IRjD>I:*I%[3]&!?Poe4K=/ig\"U-&R
%0t<?l1@[Rr<rI.CP"pDX1.QaL-3d/X+-Z(3(HKFL:iheASGbK59)%qOPo]1BHjff8>3EpSeI?>OT]/:8)kL;ngiSB&??&pdX+f+*
%WtjZ_>iIFt[\r4J@7Rqd8Q;7ULJDORCZC;F;*POG:X*$UJZJ)!A>]L>^tYVBl4j!Z.2#NmA5VFJMa]hVFF%@oQ'5^7[ku@'-u)Q$
%<&@ak+XuN"\og0\d8`u5hXb,5V7j=DWC6XGI-[05d+!]>jpn-QI?MIBE`((&V.V]D^b5opM>2M*SP[=iGMD,W2+E<.mh'hr/sSK`
%k@t-6>Q3e*kif*T(dq-[Zh),ee)@&N.NZ67Ar8Y[f:X7YTu:6;1:I^A,$iLCZ("4IS.*=<#ZgL+:DG=?*N&JR,h$YG1bPC?5Wj.E
%@&JM$Btf!4]P\("G+9B3l1;CK1qd8>@N[W;Df+B`;EfOU#K7?r=`:GF&CGf"ake2Q$Q`*rL'4Z"OD\&F:_,=`J^"l^VQV(SgKB"Y
%0aYS=d]LnB7[+\%J4"6TLnj>kDHAu3;lruIfo06K>YVpXGuo1TiNp^H@]ttZ45"L<hP!P`+h<'r1c5M$,\SeKpK2s[TYl"F2ilh"
%QC(/X*@AP1)cjo!iB8GZB:i@i:%D,?TCrmf-f^lU.#l^^hDGe5'`g,HJ!*QEKo@?JF4]V5fL7V"KTQ%rjXRDF.Zhmc1Nd[CW2$We
%_S2p3[2hso(U>0=a-&@/>"e9*d/`o^b/,"X!5"=l1$s3/_F&.AK`$i^4?'>6@-eBj2n'Bd);&t@W%m(Ap)<SgK?;Ub-Wk_m'BeC/
%"+G`Q\Xl2(lKg7Q-QAd*jbOm`5$ckZ">T*tfp<@VUsdWaB-l=]On\#%2f@X&f$VDo)oltfiB5=0qu-'*@]@*^a(q(]F0oH'Y]]Y2
%oRbYt2K=X$8GC\eN-7#"cdM^0YD/0)p#[U_<kKSh6CE-bHA+u35KRN%S+FT-jQl^j:Whq>efYZYlMa`!Pf&V-/S#"gnDBYd.[cc_
%`o2=m;V[*/&)X+!E-/FRJ=[Ij*ckP94W@U`qEAoKc\CfnqBFM]U@gNO-^sX.l7/QXciA,BI8VY(8Z$UBHQ@RR$KgWH)iPm'\ZPsr
%IIA7Ki%V!V6@NT\2!&O7_gVJ3nH,')]+fTRQl\0GT`Ijb->Z2#nhncMbgUmekrS!r;B*)^&VBf7VsEV.,_73&YVg>oL_k4]:nt_r
%JZY-H;F?[=qI7u1,ie!&2UM_'0@)/.okI13OieNY)DVC&K`\4#4U68T;8G4q^,K<Dd7es0Gc,2e+]"=<PRN/mYaH2ONJ;P!qg,0]
%VlB8ekID1t"a_SX34e80d^e.1^t]6'm!4u#L,+V'f3:d9jm*2im=3[&ks+h`%(F719jbQB>Vc*7l9f#!IL)`jQTVEkB]WWBm,h]8
%@gStZ\ahp+!aP"Mh%lj&dJj'?/"M(TAY;`NqoTsklafQSNlpuk0:%CEIG.Z(3D-!dEC(/2amfWZju"HO)l'17n^^po<e<.Hoh(aT
%mZit6-sJ]YG^:3YCh?7SnW/9,]o`cGm)SG)6dFbVi[HqDY6[cVB4b0BeGV]**i+:tWsrk3WTiS^6Y8R>\,cnmehIe&iuIe'o%LQ5
%nF1E:>ho#-H1bLEgr^@iI;1G*R>71@mN'K@aQAP1#ZtSKW\I$)[mt9CWJ"X#SYJf'YBs)1g4.<m2.cdhLCA;AEl&"JgVO73OIl2X
%+NI+*8Vroua.;/^,;OmmOEDRoE7'%sXPT"%dg);em;,64FYdqHSQkSHd75#2&*^Otr2DcII.i8Q9JgU3n8*>m36KaIYa?tp_d.P4
%E?/1g`kI14TTIt1XknBH6m%\;;Rknb2APGimC0JqHFem0+22dGdpo>LGG,!u@\!eLJbG*7C[p8$qR-2;[&KNT&1RW&"q=fB^qsSC
%b?q/.M+0=Md8/ROU]CmJr=[?Bk)tU&HJ0IoR-Rj?[sUR[CK*#eX(4WA8#"hlYs2Y\ES_fgh8WpHP=ek`aCup_qFj"MrV51"L8Y#K
%p1*i^6]61\?i!ucNB6C<_#)mF7Ig:FMEfnI?oH92Sj%bCl)s'0Bk.,Y"q30Y7=H[,I._H7MSpH2I?.nG&JY^.Z4H(sR:b_3k:kV,
%BY:1uAtHK]pAG,-43%O'fUGq+e7V=Ko*D&gW1WJLT`0;uP5\t`NaK(FV6bF@V%N+&G[E0%JG*>&h=-Cuo&XlJq<R2:hf'sXn]pn^
%qY`Fb_pN/W1Oe]hfAB:hs7(AT3s3JmM'>0t0&#`?+?I9I:&tOaV?l8N$&]K*SFIikP!6V:K?RIT3#j8EUpE6G2Sh%Ndust69D&!c
%U7DlcQ@1f&N5\B[V@9QJ`G]`K##OXj,".#5XRhI"fj>;,"5/0uIPZEL55fX;3Yr+AW!"ko'*d<#QS?IiX+4l&;.kVk!8H!o@#Xso
%)#(RK%&soKU$i1[!bY)[NoptX+].4])5IXYdh+k^Y\7*jI@k(M<,6RW:$cC+PV/Sfl%1cQ4")82b_Of(lA6pGpGq]t@?,+1_%;kl
%'P!m>+>/E5-7'=DqaA@lk%!$sBAE=89qZZXZHJI<H(EO@"_6@bg"lL@G%q@&`t5`a?4m^,X`+p:fYHgdK@?u!]&O6,iA[D[PNmDJ
%>^&+N"0t%i%NEuIk?!2>#\ng,h?,=>Q!V0d[,$gXq3D9ri2$=s0Uom/lYeZBJA#sZB5@ZlhJm&.PqsskgW^,l4u)@ga^%`,NZ7nu
%KY;*.$[B9.&"o1ZG@623-]aL@EsupFAT$2dFEZQCh0#3:GSo31@0E'l_-]\4<DHQ7oJ[Dobmd&R?)0\*!gfCoRJp1eN/XT1^MD[t
%b4VVLhmd74qs?5!W>%h>;8"b'%@ZP/+%,l4`CkDS?#QZ#oL=X$2VoV"3U>1.f][WN!o<qP>@#;jf(%>B_njY6gt;+S$u;,`G-!7p
%C`'dMpZ6[;g72_E_q>K^Bjb+aK?-J+\DMBa5tbG(9t@Khm;COG.';`T2Q?\Si&r<d0;NCc:K_n:a`WAFgai*([*I6:4`/-J/.f;I
%'*,ZqT!cM1-<+X&8nU>d%BJ=a"p[S=mWR;0gof:J.d(tB)7u5U\RYXd"^Uja+Q<``n*RTD3,XG^EKM*K<OPpIR5Yn%^E&A^k9\=k
%7II<dXuF`a"$!i6B,98AKRl?W?iXdMrJ,<a[GW"^3k\,Ti\+)Qe_4s<j96?Hd=;5GD0=Ie=D'A"C%]TH<h8?Q5FRcF_//_(hgA3n
%Nmu.n9UA)E=2/-AWp=r\AqfO[@6lqIQ6<8o/I($RB!fRqkYib9fUjdN[WSp!$hQ>5>&d=ln%Wf74TX;8cL5ngfl0;PK29'tn`F.N
%C_Ak8l0%'Z8psmj;';iqIOFRV&SCE+;'#LV@3k,J;W]aXdLF%B`>dftX2Ch%p/pJ'$rh^p(?YQu(UQS7\:<,(bDO^k3S1">B8-le
%kFeh2]^O3*1_E[i6@;QqZl0RLo%SXr+8s6q5CAbs+3Q)s:))Z>LopL,Du\KR"+,JmSqVUg+^*V&K%tfRq">p!Mu+ppT44,YTIXs)
%4*8#U];<:0k7e1r^:WeIIhortisP*53.HV_T76YJj4!M^i=DHQ2TGJ[G`#(_Up;bD0)6;^@+l,k][#eZ%mTR4-+s,.[Qf/t=pr(-
%=2rke%5-MQJ-+'oU:_uP#/C*a.^Su,]`(3Zaa4)#Ir>=p<cLq`I86^GOp,4O2hdB(*%T,p6'>^ZbK,K<@C_ang8()cMl]]_Po.\b
%!bi5a;=H"S*tnfDKbb8.36kUGIL\%Q^rT'H5*?=!/`D>2.qPk^b]5DA`5t37@q*(N4;d:A$7BjXSlK8/TEEHUG64g3P8oc4JYPq%
%,>6B/`<6q(c8t3JJ<BrS&O71n<<P@Q+:5bn[%:r2fpF7nJhP9b<"KAK6Y[d<Le4m%qimHV(8);FnY-qS35YJj^a#kP/%ig@=9b^3
%R@(e31:B_.70/ld=^R'Y!K)/fa3S9)?Ao2L#eCRG<$!=%ngqk:"YGsJXK5$-E@U/3@OfELq5)k\b\s)ATLppV&.8OY'4k4\GmOfo
%;g?\;nA$N=5tM/!Z3kN#/m2$tT-+Jk";if]#Rd%:Y`XN/3ge(,#kjApM=iHoo>#cW!VV@<"$q`NMb#'h&S"gt-a^u(:a4reJiU%U
%CuH8Y'89kg-khD?.M>O=;(0tF!r:kI*5cf=,aK$jb6U8qL]UM<TR2o'?t`PA&P`I_#"b;d+FH2h8rS9p?tVSE@R8Y^&"^`u2T@EX
%dE?)tE4_#Q@bW)EBHn;/0JQ#t_mFsrClDFp1*g+9dDQkYD'"%VVK)_qV^4UTgVj2IA^l;JAgs5W(+RJFdt"tAOX`I8;fUr-Ve@*D
%rLc%WF[uQn(6Ft/E1m4N[K&!/&N3K?h?HD<P3aDF+nY&o=IE%%=hoPMkc`s?^t6q660)SA<:I?:cib[E.6MGK!1l"R.WpV0+L_Wt
%EMP5t#Fb"2f*bA?O%&PO@%6AH_#Y]T6/?+Hmbk)F!k]-_L!#!g6kbl38V%Xb+.+RcJ<-C1h[(TZhcUd&IFAfqD`j:.H@R@5i&O%J
%SBb'>(">gN:*+d,.f^6-o[H",2hCB!?blM`T%A7Fc4`$r!)fY8$jYY?kCV;)[HPh#2D!'Y14teu(9##FX8kPD6cpO?E8]6=M2O[U
%WR<+2aTo"&1TW3YKG,Y#LQc9fbS9P7qIi?GF("Z-.K_;V7GoR%7KTrY<'phEbG3+;Z="sqX]72Vn1<2n:0a%fBL9`AX9&Kj0UUK2
%TUp1QHGmu76V+p;4Q'sZ..X+Q!r-8ZiJ<=HU.k4seW9em":=l.CfM_bl+n,n-@rpe(@\"7'a;+CkamT^#mM6XK&r\l0R=m@B$iPg
%nuFKF;+]]!bRJYf+`3_N-EVg]j:iKV8-(kQ,\R4>Ue5;iTXCLd*LHq&!%'ct!e7J.cC7E;;4qhC"<(9:Ij*Il3"=-"^n:a]Jq?Dt
%(f^\VKI_WY1E9$s*82+r6NjAMUt^^Ka?@liL#<q\:nr88L0c>Q)-S=W722tR<JX3TUfu+J3Keo)YG,RDgY8/^6(ogF\-N@m\.?')
%f*d@:J:jACYa&330,>kfOOkF^)5N)ujHBY=b4l*YN(R;P[ZN]5Cb,fD$rTLD-S^^^#c^MQ&nG8t$f]#F:/Fq'89f*",1qVU%$<qT
%ThV6]$7')T+]:P7#cOD'EXjI\i>1s0o:aMQ9ZmYi3V[dHM1Qm)T\0sr3*o"&_*O)3M."+3-d^hG$+d>p'l8JZKVPM!-Gu58j+p+K
%A2qXa7;--RFf(1A&T>f"[?r(%]&461+@]i5Qk-<d(m.;3BLrRW:EjXR)1h_T!QK581pIn/l?_&.5e#.2=?UX>4;]G%F<IOH7%IB"
%OT\^'75mW'(p"d_8V)tW:%1mi.'\ZF#Wf4CJ2eO`31LYc-X4DD9nhX?U*@gDUXZTJO-lbRX2O&ffYg<o&)`fmFEZ"6"q)$81m'Ie
%C^026$$$Xr4HZWdCG?r'aDG(1dZ=JCLF,hu7DpO7&$)$i$tqL4#`;CZNsp^h/`'SL?@[&#$5M")Yq2h9B7>T("0=rmBnBr+OhoJQ
%([;KmBBf>19or6BMF_6lXVL+5J_'oG]Ae2^nm/-1@;Uo.+=W*3,+Y\7Xqm3:&P<ZaEc@oNX!\I!I1WV**PjkpecZ;m*[U0T=Rr+l
%^a;p1;+);=#pXMu$#2V`p]W&\,TX&hLhT&*%Kr8'QD%"c<)2)!Ee&_G8`g1B`s[>4;Amo_Ll=_&=VXhWCf7M`K-l.U'GY/067Wk6
%&l`25<PW:#]TROk6D6ifX;fPZ=9Cnc"?lp<'YSAb`Fbe@#:G59()G4I-E%PR,!dj$W[_Y"6:D-=Tmb0d80s+JJL6XoG!Ko',EmX/
%!O?!E6%'AKSROEsZu-2F,%re7Jf_8V3$lp$8.u.GacZqR6Vc"]JcnNH=E)[7(EER!"!(7D$*+LN.7(f.WeU^;%>S[o,m5ccoN%Qd
%.0(_UNi,V096f/9X2#*Z!c-CtNZCq"([5uNB/Spu=_a:fAf+_VKogg*^aYM0KRf`I&hX:m/<V3Om@da=q5C#[]Ad`/Tgo,j8PP7J
%Z3&#J0bH00&e2':j[>&o\9L9*(i4^Bejs>_4D%LL4/&)D2IcZH(h==DR_6SFqK)lP.Pu^^;@DJ][#k$UY>E()HnIV*;pGH%%bucF
%""Xltf`laIQKb1W]FQn3'.+0?bg@33N(#<tT]q=Qf[<;cI%Gon\3U>N0dY&-H+MKm>+m?10abG?5QX/,i=Zh!=l;/?K7bMlSN3DG
%JtV=iboP.h*%1OtnHsRc"K;MP#8i%Dd.EkT)46(J:g#Lu5SK4EGNbi&N9*M@jTOXl$c?tof![\J:I,=\Dd5@L#reNR5mgd58;Kee
%O"u54)%12JR7f)NqcJX]:e5)[K(4t:X;dhUE/Ss>Y1.\g%mbCCilZgL.]t028W1Y6)-\D+A27a;i9h`?JNLl:?OW&B/V$q)=WaMA
%ZDoR[\c=dH;mFH$=/H`@c4a[hoEBf-$4N@_b`=Ggi^td`<=WkE`^gBeGZNADOTduaX)g7B1<]:^[U+`cX/_=Caga6&\:gQ7PqakB
%U'41DBS+?IZpeBD)DZsgcnF)u@sLP"-#a^Y#p9FP3h!qNUPWYi95)!O9@h(e(RU[e/$<bUZmC\=h1gL.JJWEMNo="]>QSGa`c/RS
%SDmbmlA\aX]p)2)".'cPXX\tSW010nM'bq(9)p,1WZins<+l7SO=!OQ(<mTp=e@F=X:L*/[tN<GYqi16!g:O\[YR\[N'A^<a]9o#
%cX;hHBOZqd3j.6]E%5B("AVCH6q3ANU7NWZib/nm+n8(9TU@?Adu]8S*6"l!F;k4Z@j"@n>KOgWM8PU#8fCi[>ag:(0qh$-W5H,;
%_o]J^6&J4%^tB@'._(#TOX=4/\.sr\!"CoEG3'Uc'Bs0o(R/54FW0""Drk\q",b<!7@1:',GRV(YmR0*B**t)V:!3r2XV_%^r8JK
%XLSBeE3reA'p'%8K&g$b^at-DS[P^e\,n^H,7>D_GeI*fOQ\qRb2S:(/]JociZY&>,._:@W4[(*$(Dcd'krj3p-FQjJ_-)HKG2j(
%\>@R]N.RXbfh(ZEgf.Nh;/n;qQc`9mV2LkRe-\ZtNABA?=iKbO5t3ON&XWkVTF3Nb(*8ZK;'tjU!F$U[$)8;*i+7una'tSFWKWtd
%Nt&3.&(%Sc,]dCBd"Il('!3OtrF-.P(P;EJ8&90.\sY(=b@$614jhD;r)@XI"I"=/o*DH,DRJEj+-_a7=mb=TB#`7gOO<]#e4&-q
%@)3-T11I'&8NIup"6/8>I5oRS1*!(14r:l'W"m_I6;Ad]*6kbp[?-DV,p>%RZ,e%S>h-fH<[;g\N19(A-32JJC*%&M,b;7EOECOU
%O1'_l"0Im7a]Pf&`#Df>LOL2+"&%f"/3rbPflW5W$CVF7J1V;>K[CH+Z,0DTa+-#1_DPaNLO)L7EH0H"7f@o=N(']GUi8(7*)YL!
%;,dahJ1-+`faDaC_RU)`K[l",'$+r%";i1Y6<.A],-;\HbuWODj#.ol_K(5biJ*-@<&aZb!4iU%^mfA@`e+e[K(/DLEJR"4Ws8qJ
%$<\_6.M5&rnEI6`<M2\;^^t:6(a)+2+CH,'lc',43)AHTG?8br0oC64_r4WG.'ea+;&"5G+I!1_5_'K,ebcW`mkDljfE9H(!-.5P
%ajrZDRIV2#(?tM!q#EIk.PM?#!KNr0OjJorosdd%)&B3])43>&'>Ft$%eCtP@h<T&IE%(p.3mMg=9_tNC(XsuN=6=!Op)o[LH_#c
%9g=Ouq$d45(7ZH6LI=Q^Hm+1)(HQii!^)YJ:'O<l;:]Rof;rCCc>8I!![NG!QmPiF6pA+U$>uKV713,FjgYTX(e>tU+ZdSYTN`YR
%703K6kqm;f_l7b<c@Kd<Lj)O'BkC\!O9g]L+G2>*8d_/"+bb+SQRngBOC/Y2WXCAEEH*"C'd_WS5TtZO#e7V`Q11FJF[73h=lBE?
%N/[(j#R:\gi2/Dk&`\[5M4d6d-f_FUP"=IbdK'M5+;mpp$qJZ252\\!W8m6oOXYhCg8;)2="bQ1;`0_g9.D\[7>>Gn6kM:``Zk[a
%\O?\W(mf1J9ZFD.GT','/6Bd_=r,GnE"\G0J.n80$HV6c&/gMI*<@.?-TcO.OqhqE7je5\8V7g*(N@1jf?nOl'Gh5`HD;Z5Zr'hJ
%69)+aOX:7@Tip(paLEDt9jiCT:,i=7at*R(O`29MpSVse)3:LgXE_<C,"q;c-%:slD\H6K@\C1[*(-\JMZSRXX<c43Lq"qDP4])/
%aZ:R4Uls]`]]a=WMTL3C&Q<"h:6r!"b(dQB"(l/T/km820B.;8eKA=PMcp:i##h10+HelFBHi0#P%Jq]9d5@t/EM"h&clB^'P,l1
%)[+\66rdn.KLQ_k20[/5.nQ$<:6@8.-!b)92G%#m3q.LL#=QnXEcaHp^*d6Y73CH80BqqNj8Coa*A/&+MVZmX.KRqe.[e!\]a8T4
%E.HO%F^Pc7F*Kcg:C;k=:86(s`"X9=*lrMC#C-FtCSKY>EHXUrH!8+R:=b!JFN,)IVTZEFYr#f@a8TV4RXk6sFZ"_\8M\GP+Z#4b
%!`=?N9MS!uUkN>tfE)d8G/Su,-<fC5[QN%`7P?[?MR^o)c8f8Dk"-j.XUmK8:srB8F7HmGKFU::O+hG4LZ6D_aR-4QJgLs@G++`-
%6b885\5>I=DNual]9))B.sZ.^PN[Rr(B>R_bVZ&o&EA%@HJfZW63d[3%8Wj/G)6$G$7/BaN.@oC!QAT668Bg5=rrbJ`J\i9dn,6P
%#E93%oc/l"OYIi_9R$?-\FPM'*:Y`p*^rL%nhGhaD9hIP&9:C.Zmp<nKle[]EB#BA3>.>fnT]&#A76"0_AZ)Omg4FKMff1>9F(tr
%i$FOX@;UZ&7\GTh:UliFO9Iu)5`Q<#lnXHFn.Gr3..4HuA.](X&`ACZ'[JKGVK/U]\@9[QME[&PkKXco]hSVlm4R>n#mekt$2RPi
%]ch;PL`7;7/t7qpQuHOt7gHokd5XCMLJ[Ic5a3QD5#6R0KY)tH'%j54rBp)S?nOQ%RKc2/^4U)3P@Tn;Y#2/*h6E:9d%d<H5S-/O
%n:PNYO-J'.=b1R(4P#0iguP+I'O%<V^nX"S,KdA.ngT-[ma3I<Rofl=dm_tY2GLG0$c.c88?5AW<+J,06;hN6!ejXJ$"G&;9a/1>
%+N7"4D"6!qb"eSAKF98]q&*9WiV3>fNKY#4$uu9V8;%lI106VPZpKg0@XP%chXL09`(K*3Spn\5!BeUMia*J+5t(*u$G[hdO0ZS-
%*,b%1EMX5u%oWkRHI)rI@oCpAm5:.Mdm78?=Ys.pZ*JHh*Oh?U-5s8N[gOU&YXDN3cSCBICh-m*ml%6`(PHFu(`MW%jr#'u=>/>9
%1`N4"IY7Lt=B.WS%4oEi>G@P4,4TbV5,s3tar#iS0h.0_91;;J^ba;=ksk1W4UD::_>mACOFC:@?j$Zm^aK8DIh]6-e)MPfiBcch
%iY)GdpB`TNO[hhq>n$4mLe;T6(3!UdX'M-(*\?tOO=,Q762D>UN3GahSLEdG1!.4R[4"Te0M0'6*mDr)Q7R%$gE%pn*@dq;XM-h*
%-6W\k!S?k`(+W(1d@84s,)\KJ2K!%fgT7#VDuh29Z-L/s+`?McqS=C<"jTo)T!mV^&-F8S.N1EbSDP"P4;M,BdPGa'5rJ2j4XZGs
%I2IC;8J,Lnr8%drjl%2(;m+Vp>.p$j[:&p@NJ.,a5]9Zm=>P\X5p2:jQAtM'J4C_6i6sBii\DZ#QE2Ro;'aq?`)^25m;QjXmip]+
%9k](pXRD8O$6GBQ6p\Q_UD"h3$!F(VgYt3Ba&(Aj(^G@;,SRJCZ5$*.5Sc\&'?+#3)R5QmY[6#4`!@hE@@'Jh`67FjSMY\\l/!D%
%_3ZM&/`7FY5fG_PS2-)p:a"[V,fORF?P$*(]IP&*(H>8VI4*+/6+@s>/mU6Ym&1d"_6T_[Pj"5M(^JSk_1Oc]4aFs*-9a7r8O;_P
%cYAAGQ$AZ`_K4r5O<2UQ]FIF^<O>#5nLF<N4NFJM!u3qR7foBb_!!jSjP(-NJII/^<'VOU,UcUp;/\lWLhG?I"ToeQ,)?%ACf9aJ
%J:?!8J;EJ8qm!Xt<7`#.i^,)LRl(O5'89eZ_o#q'(.^R@"2jLEXLC1eG*FBm7m.Cp@M;8T&^hKn4X;::Z2lS?PBJL+E=DUH0nC;r
%UM.c;E+gLC)A*GS-4Ddud)@/19SXIhDUKfO`[NN&Z`)eE<",-@irCZFiYZ]0&]?0"!htD<-qi.M'F(<]O(kq.#R@[k:g>(qiqLf1
%N`O1ML/U4?A;=_1X?==f3S!Ems3gU!4-J[IP3/g`\cG#Lrfc[#-IAeWR'RbX0Y?-6o/Am2-&iu6<TWs5AlBGI8L%q+1]F>1Ls!97
%%.i<:C!9m"U!Ajo[0,ml]FI>u;4-M6@_OI^5VY)hneU;ba4<59a<-?o)cSM47>\J-(^$;U>QT0rc!WGNmq?@pF=$hHjuM&qbO@95
%RBM@4@_/ZqZko9C3nIFX+$oG]!2qEXAj!6sOpQ[SSCogc*WHqB&\QG+8U610DSj7W`0*MFNGj[Ke7a.:n.`1:J7\G7;$K&ni?4FZ
%DOXchd@iHg@a4suQY+chrU#W^"5d%.r<eIuDM2>%A\J6;;oTV$_gE@k?f-5D>&*J'geI/Oh[a,3=F930A9PUN?^\)J_<;T?6S?^i
%7!R\h#2iF3=G:frm;k7&0t9ZP@/B$:+n][MbRcbJ+JH1gPQS7Kgc^=Mg1e(TK_]3&=P8fB.H2(nE(U0qYL_?u1h5a6q15rhB3Gpc
%%Z@L8P80C^TtGUlK1.iacIVnGp5_0qY-<BY\Y+i957Bcl:OEpX:SiRiq#YTlWU_t*(:;HED$0eXe'UXV0-_:XOhu5_1'H"`A'O7i
%[PLjA3S5`?JG@I"WBs:r2ID9N?4L8cD/a/:TP_I`Yd]fB;_%9GfF'"[i2FJ^39S<WrmeP>N(fR!GgD'[/F-QCR1/6ifa4]7>8hJt
%PRP&cOH56$Bg1@`8iNkab]*.eDt_F6/VT/fA8Y*.lbqAd(7"^d(!%)*_YAQ]ZdOpY!T=1s1[e*sl'2R4O?iuVW]1N3`OFe;bUXVH
%M-LL_$'Z9"")NUF+?F>Jbo-JsmuKgY$Bs24OmF->;^8chc@k]^6`r@0[Gbb5<"E(d=@A"BJ2uUDVqSpcgBN+P6L;3@R0Me_1gaJt
%E1?p7+ggEPL.rD384HY+VIt2<LdV\6*lnUI6+_c[qZ-j2m4#<PU'49::nq-E0T9i>;AY(tgpR\qZuH(@@Q7D>'<UQD]586;(egZj
%4<i7A;kIO[(ndN>$pp7(3)HhAS5(haj2LS$G;6kX1&k+O=qlmn:;[Vhs,00tH9>EL(*RuRrW11o-kJ/sC:6HM/8bQnKq1&<)e%:-
%JJh<(Vlp5aIBJif8b1#cK')=IQJ3QFd$t(l":CmmCpMD$;ugkiS7AuffCccc>iif-]*tj>q=<lU3;Z&k31Jpr0o%dr%6s`VRBh>C
%!"+LnWCK\<c[3l<ACr\k8it*;$8i=$W]DhfNZp\mfkk_/iObN8&,s%@iF&7/[%:E-^qjhSi=KXG[;:OAFJKICeM9A'\R<WR!6'TG
%C\Z_;h38J^Q)BZ^,(>M3#O&f]=1'qNT<H(H0mI;Jq!D=p:)nHq779eVnj:R["FDcJ>;-&Ff%@iA!-l56F+PBJCR@(9bXjO;Z2!U_
%F@F?YM3q;pZ7h]ZmeIp0SjoT%WfP@kF#!Z\31^qKcb\spJMctilHO0^LN0s=e[ahB1)D*aph\]9!8]'mT?M"q>)2RGn*9$c1^>b*
%bpFDK_67GM%k2Zrk&Ubq>S-<'c\t<[8usW2l.i!@1](DMI_-G8AYGSr?SRj'?SEB'IiFU=c`d.V76IKLC?_`4SF7%_5;,>q1<dT%
%7-lEV*o"!;35=)l6AV$+;[.ocR9h[\1/6!kQtg:$O2MR18ULfD\.^8g0`_/?P3-p4VrjkZQNRgl0&G>gONfCNiA>]NQ^g,%S9OXB
%#E4l?I"]$i6dI@.H.JBb,iC3IJ`u:-a\H+XLT1]HQVBLkH#"a9:a)rtnXBh!%biJQY%J#(QPC-G5Cn`0@3$)DV4GRX(XBOkR]iNW
%NOqV3]W,sl3(#-f5JL6T-;FB!LkkN/YS.ihOuSC'LZ^%7=&m$NX/a\o)eBd0>a2j1o0!A4Aa[j1C7N$8*g]=i\;&uq[YF+NC5qLn
%;&@ON]_E8f3lZ_8QD<p'E89EXm;^eOm'1k^LupCF6SrUtbCR[-gium6#\s]ENNH(f*eK%^7B+G@a2o1Agl;4KY['pY:cp5=R*4dN
%S/r57"5h"HQj..DG7KYm_"f.-Hs4,GGd,.l`].`ccC7^+;+iW+$ZD*Tq@],sS`2F;)/=:5b3%LUo_\'b7AF[/E0Tp%g(ga+HtnYY
%g)05@',u>Y3nE\V$`eG(qrSa><GIT2Y%`sGldN3/[di5!S_-ai=jb:cQK?u1KbfuQZ!l(lCs81LDNG=S1^JNGDK!7!EZXX8m-g?N
%FtK+!e!uc;,qd>6?um,Ico*:>XJJ>B37,"rfnR;^(RNNf]?H8MmFp0pLUBjV+hKJkYH-DiD0LhZ9MD8<COG8c]t&'@,3/7@L#;o9
%a9Uq-`s2(5[=Y1c#J])oBb;5(p\QigGINNX$s#fDPb&tbI@VC%&e5(k)4`(s[Pl5Vb/D;+ZiC-9`K/VoDB]GUp(VBPgL1jYZnCcU
%nGNPDXAopTZBf`RNlqu!kQ41[5gmP$`Hba"b_5[c5:noGqh<4LS-3&t].22b:i]_Kl3"7"n_L80W9(YS&bg'&m`u?R]ep.tclT)j
%cQ:B^S5'C0JtmOfC@tY:GC3W?qn%i'(j8o+W*UO<5?N(;Eo'kZ>>'PkgG(!&/39,qhV]bZM#S]@-*XK?6>fXb#,do7'GHpkOl&%T
%&X;.'\+a_uc7&9[rM'&>3<-k_bcTZ/!KtW'7*TSDLhh1g<&AsVnD;r[c%AuOr`"*6@&QWKB(oL4b?U+_>8GpsK5d/\j0WUUUU_;m
%F`U-@"(M#*EF2BS]B?Zb\A<%;j05T<A+fHhq.#+NJp]j`aOB7oUmhrNMTH3LDSDfb_=E1$AA^Q9Ck/ci:8Spb7@)q1$oopsK^Pk_
%0N.X_;4dno?U?4BF2L,QFMP9A8`Y+caQp9"Be?bR4,aUj8cQB&.ac+rGDgO^')bZ\`TihEa*G7so/2sNf6r_'U;:/'Z&A#.g/[N;
%4^5je#k[6HfDre)*d2c,[N,%ONI*'s<I;5^StiEg*/3PjF);I,h\[>X(jTi3$pgL(agFVu/^?jCR#e&*@D?pr#<YO?WsG)QHrkk$
%2\WLkG'$Hq<BdHtW#:$R40bU*&bLu@kKLOJVAJuDf;K+l@D!>e&f_h."a3NZS=I.$<c?4"(;G$2Ts(d^m5nJU*VfT9GG-lH]:(U%
%B2cV;,]0maPFuRX@]phkKAVutEne>$<QuGOT?kV#T8pbZLe;%ekIaCDkY0]PE[;3D0st;-1$cL6>:iFh7%gC2A>e9mDotp2&/\kl
%HrgQdQ9aGIGFt67Jd^qK'I:L/Zaqo!cCbjMD/'>.[!f&\EKudfF]O:@@cX:ir7_8[XAcho(b^o:lu:N]YTo.D*"m_4gLLP3+.'=,
%O5=0s)Wg-_&V&!XcgL5C--8m<2fY>4]=k=n=RPJJi4V8/p"0XL#TWm87[[lC1sF&obloDNI'</@`>:B!WBkD'oC=Mt\K1=R5*ZMQ
%jE4N^gT'2lG,)V]*eNOLT\.gA\7``KQorlHR&Y/TmD<^/HDeqVU:L\,`]26ZkMA,Wb;)T.lIhUhn*Yha&97]`c"0eBHT^_JHdM37
%p?8Ykm92r(o@Z@tkNIO<[r@h^HbHP.:j.!Ud(MPAHeeY]J,L%:Tu6UkoJ>HJ&c<t0%F4+`Db7nJ2/d:q0Du"R`XW#P.J^!k62Y64
%MF*3rVG[1U\.gKW'P&gA/&52Bdab"_%0Kj(S,%T[NF_"17^/.#f`Rp%cGRM1F[N3?!egnW'YI&2>Z/=9)'KI"k7e*X(&?s2N\9KR
%nQPiHaCST\mB`?j`UcNCE*fK#k&2[c4UbW?mgKtOrTkkk,X`im:Fm<`D_)eHOD[e.SCl(bWHt&5@UQjsA`4T^+jc]A`%snMd]X0k
%eIMsG-kJa6+t)V'ACJ#6,^/C[%=^,[S9.OBD><DMlol]O&\VEBgjJnKceSE_TUe:^rg6WNT'\Wj>-TDOLmOIfqk)ak:8hu<KW_\g
%i2idd`t?=#;6V\I,lg%]r#LhF%M,?<+%4_5#lt`JdU:.Pop.21@c>m.Z#DQRjRFU2!<M;tTB5tEI+s=k*nNMffjjj2foKORkn9<^
%O8[<ODJVPP04Os5b,;3$4\_n:;B?[S<P\=fE_*@bp^'!GURF.fQ\hG:`"mJ42UDWB#rN00LslAp]+Fd$cU>YZE3_2DBA$\qn1g`*
%(9A&J@ql%Aq:+a90*,^POi8NNDXq$0$Ns4g%Tq3tgbQVCD1s7b\F/I[jFa_j!#ql"2BfCN!6IWNG7`irfF&mni'm(O!iXm[6n/Z6
%A6&g5O@)XoT$D6aZ&POe1EScsb`V?bSl<];;YJ&T\LhlgL[UEQQ*Q=%CeT7P]G[:dOVj(&PMi<C+K6"TY\dKT)[u$l%eg.PVpGp3
%p93UH^Ps*?/OWFu2\9pXZSW.LLl3<rZiMm5(6\_K6FHnCSU!4.M\YZ:#]>_W6]d6Fm3FKc<DBIN*Nfb]fHjg-"[XN%J7eufBX9[C
%S3n*G%8)9uLgnQF)[.XYk;5(>)&KDl=)tO_AQ7`Wi_3E=I&RMS'1u)BNeFE@b$s]='L:UG^k$nF=6$.`jreNXjN,OaJYOU5(X,;U
%G77J/@5<\U-X]gf(/=p>%KQVsZuY7,2GE9VV?R[4j(EKWB-;)G?qTg0lOO0RnFdV"OpDR[?\bAlD+FgKqH;/`JZrfQTIq6ERheT@
%n8h)S]1UPGL_iTYbYUZpD=4m^>^PPZ%468#G<0EA/HM:_/`E(QmCK:hm+9Ml_gpR?JqM%!?-l$m'\H)0i\7)e`P[@[d$k3LVR8sj
%A+$eLaX_i-I#s_O3#,^+;OdGrcuSNuo)0.j5dWB_e5-;d"4EY![M&EXmftZS?H)!gV$H4Q3%pRsq0\K3hU-TP+;E2I2+1t4ead<[
%O_q$sZsWj0B^UAA!09F>]6XH%\Ja&+s-n&"N@+EG]TpA/nkDNt/US40?$H?&$`K)'PBotDm)f)8^eC)tg2<_FCA,,5MTNC-GP?2N
%ei4p:Bq-Nb27n$73BQ1@=*7@g:pqW#R=>[+Cb=`j.*<#Yn2);m*=`@O>rt_!&44!DI":Iul^6&/7>1Jflu3(AP7i2?IO1'X!hr@\
%Z"m<(7cIOe<.[tS\q.UN<HmWJRb7]f!>qkEHbh;R<;"A^;18@]@jJ[ZCC,U/W(3:A.cl^:KLLR[/AsD"I,Z^DRM):\A7?S.>($eZ
%YQ=!V-64J6VVoW8NQKi8k_ou5l/.E?L\E\]K*B(T1.\RBje>'kI6^6I+P\`$s+P:0.ZcN.kD!<./2*cbH1%"iV\M&pK\S6T3U0e6
%`K$$5cQ7&S"1?ojGs[7El"8AC>b*AL,<ZDe_%`o]#.H\$s/BTcXtr@Pf*a_K._6%.L[+0;0ptqP]Nl[FP;)`h/M!Mb'O@"SMbF1m
%c&^sni\Y[&6d-'n<\Ou'&T>i.`%GNVr'GoTn]V]tLP1LS%ep3#X402t!R4W-FZ/JP0oQj;(iEkZ)B=^RK[="#Mjh5Yqo,+1ItRId
%@493k2^"ch%GYEGoia34,QN1U8AG<.JPmb'I[Mned:6/%nPs:nZHcBS'%fY4-5gccR:oVs%&']<<5Vq+fAg:B7Sk&DLZW2?QBs/G
%gq)dm('Ef1_C;fE[;t)(Y-YFgZs2W4cTY*F+c<91ItE!5O@[GrF(.\c#F6!:"F7jfCgULla);JLr&ulE:7_d90\cbcV#Ya]+e[SI
%0*206bj7s'-&U<MmXd]9k)Ie)*.Fe/l<#$92N<`2$$IS(pCZbMJ=I>+(SPfubsAF3JPL\dPFO-VV]80,03l:'Th*!`!5-n4"9b$%
%LGJG25PXd^)o3p_4AFg+HU>N,/$XllJ'PT!;<(rD@h@Hd1S''c4He"a":Zj9AL6#Yp43Fgh"d?g0G%fE+SIFH2o5,YEegPKd>uc$
%o?h1mR!tWehAr;]C.&.c-tqVjk$k^8`H>e;OS\-WkW#H>_BjdfaeY7X-o*Vtle`Bbc.j#em8r%^8qeQYHih<N;Y3Q^8EEk];X`OX
%af[=!8k1)@LrCRf3r"(/9\u'sEdnpiC$M1>b>mon"*g"UZHRons7VAVSIKrtU2upq$l.$D6=M`Hn@GPY/U=)V9"$sf,u6(B_R42f
%[5V4KjVYo#'ok:#,`:.C!N>bSE`Xe9eq7uh)3'JI^Dr>j8Lc:/#ohW&R]5fs[G`G5%<jXeoE)6CHRCma=7]T@H0))7"0;_]cW!mg
%8r<PN?a_UiL,St',nrDWD1+,4"Ai<Hc'Fo14SM*?!OQ8&Y(@D_Ggs<ugN;<JD;@R$=1?4i2nR(VD8rsS@OA*DcrPPKlk>bAKRoF=
%P[$D@R[QP9[,LV$>XAk,fcIA/$i_[=`k>71ak(QmIAuk;U9q>i$bY6(2DGGJXYm"j_eo;VS"K%1in..s#^B98dY[*E*?W:0SK#qL
%o?6&rq21o#Z?hFOEJ:L?m`I]iaeG5c$j?fMq/oT93+GNM>ZMljMpN!23dJ1IaYgHKY>q3J`F6=][hZ=ui:N!T/&&8J(kl368Z:bW
%(BTJFWB&XG$N_h6Dnm4'C\dgnm102be_>gZUPpNajIoV\\:J-6"ssa?$#0O)[`mNXcje`5ZE]"5a(m[g:qe'J[F_0_('$lRVRQhs
%C)bi38:e]@M']KN">#]5h7u!X8oorUKL-C,)OCa\9^oCPr!H:Rj#H/]CC[;)!l3%j8`#Os"OE:[UKjsd,K\nr7afl>&`Ee9ShVFb
%Q(rbA?.k[2bUTB6mhT3MjG5Vb/d6@!K!RcP\XH9W6FL\nr=hU).)>;)n0u`b[Z:P(&JK(,134S_-r@O0k+E]!Q[HHH(gtdmh7)te
%<H8R('P?5,_,LjNq>Q:X/qhQfSqaML&u0E`K?<qp)!>>GS&GHdj\O1a=@OV@U1b4<3#L/7RtEB?M_?=0Dcn^IcCj`:_@:Rl%;+ke
%Uj4e)]-*L2.+r^r3QKs7f6NTQQO'_mRim&4AY5-5$8/j)Mc"*la$J"+=aD*iRkT9<Bi`8>N'tS0K,pYHpa>!`5au38Ifu<qE?f[#
%YL7[tpcJ/<g"!U"n>nHbbLftq4"C4%VkrLmJpWB&$9>3AR4AMUSmdp5W4R<;K':D0<a[5C`sP8`]RE=F-^&>Q5"VVnr?CZ_dK_RJ
%26@$1>#e5W.Uc88rBtS1fTYc?S`!^Pa?+\P,kNiE$G#l'*?u-!<[k5Gcm@ZGKB6^J1V9/DegRGALB%hgfNUbVb$pNFjK(Y/[qejk
%n=iq#IHPDi[sohOL:1E)0DQB96pgF$H3t,@7hYbpg-/1-S2bgNi3n9Q2&c[8</W-gC*l9m2qSB_#h6Oq[+6?T@mp/Qh)<1$Ju4Pq
%$:M]ZP`QCFHNb#%RfPa;aqRV0p3%$DSi_+.35NrA;jjHKO,@U^7ufN]r@3u+j&1L\DAVptN#bb[m2(DJ_pqT7=:0s*QEhDS[Ok)'
%,lDeJ2`#VMe26&US;&I1r4\P2AH0A;Q"'^;[NA[;"U<HE3C"AV(3hoi]sir0."D!XEKUrr6`6fKQS*diU;2h0X&Gri$^XsheaIU:
%aD!]0h^1))P!BA?3)P-8mb\LSAscL3JIpRBkrZq&0s?0n(GGg>V.MYfCD>sC6%]O](1L3mV7M'SoA-hqR4;[[+oho%P6_=SIg-`c
%["P-8p0k(&1.P,kd7EX-HcTC!T1Y*>T@l>R^>7`AV)->CIn49%86CGu_8/M3-/7GKgZ'Mk#j'ZF`E@?qjZi3d/8m#;8UQLjo!8o#
%lO]j,cOh!o`TpVf4HBYmTI.ZJ0UY;IU3M6HeKY;@fKY5??mu2d?3SLuND=_II>+F1\0W,kcRjaVddJO=iP11W2$L)"T@M73]id70
%(;Wnu<0SdEQQaF3`0&7b3s4\M0;#k@^h%\=g(FYQdh#&8W=(rofTt<BemZf@8CkXNr1+B?nWt[ne%hVteln<b$3BX0HnmM1'@A76
%qM<=F='Va8lD`S8;MVJLPFOo0dfQB#>`PT=AkQd)=Nc+%BL=rcaU+5AP;Q)L;[o-fE3U6qjKQl0!Vlqs?#0YqjBRY1eOGVbr>V;*
%-C+BI?e%%88Z.u`bMWAX/E#hQV[<:o&!ImiV*4j3WdP&/]\l+O-:*5O&eZdtM5C'9+tkU%dN&m8_?V7uk]U4.8YKOueSGT9Li7Q<
%bHgqTj7(8m7t[7-]#I/@9k5Ou7;Z%2]-+<3*<%L.),WR04g-5kgiSE09!:c2%D:$sg"s/N)f4j'"".V^UEZ2HUh.7lZ<7H9YmLLl
%c)A9V)4J":Y6!&>RlU(rEeJO9*iQ4ba9rWHqEPmTU-MYln:In8?95tM\Pq5LD6T4`51&6l`TtIS)M^>J0'srFs2<)UM5$-66]iWi
%b^+O?b)VuXFLkqY8n;S(/-JBC#jC]#6%Wta:3D*qKSG+SX+qWHC56!HE?Z/C?Hs>mDE@#[C*4HbjR"/VUb:O.a&13`9:T+<?J4_7
%bKLJN7EL[&/AmX5YZ@J#OZWoQRuh+c2e9-=amQ5JPY4?]])C$f6]L03\Aq1B_mm^rR_+M`%pCM!q,8We-piPIZ6/HhrV!"T]`Ud@
%oqpNpm8n&1CT"RLWHP4DCV>aD&oOLOTit6UO.BRgXJD0JHBPnOm:1QmQ0h"i8BdnkXLGR%6KS?p.kd*]Gc*!;6!X4JY6WoIQG[RE
%"!fA_N8\'&kbWZAGAV/DLq`4ffAUe4RGdQOTfZ-)7>^tYHEu9N,3N]b=W;.]%fa.%1,o^dSp%_dU,I3$ljgJ4VWW@H%6VF+O5!qU
%27nY*.(9ELY&06jCA,+YRO,"VpCG_qjl7\rjh0:$\-D&tlQ3X(8*eK+S2IT=nM81LDSgt!W;?]"HW8.;*T*6+Fg[)@[N7GHMgA<e
%\u?[g:kl-"_GOUWnE'E=2XSXrl)=-T`FtT=S%t;@#?'c"JqIXGMPmjbqW+tDNgj2\=0pu<WWjq9]#Tp^9($NQ!tu0\q;Yf;i@%2d
%Bm.QYbH6?-CYL*3e1;c6.U5$je"q,/l/s'<_g/$#[`@F2B91ci,Q2K*)W+a;`l8><0^j6,@^/TNApam\duAdN/4L-NS(M62E!iaM
%5K?hZ^EA1M>/XFn6TDs(TV/O!/VL-/.K$WbHHf_/lu*&UGD#ZUL'L"g^K=mrS_ecJ.k8,KEENu>C*q#F(LmqeI^lFf$C5GOC@ScY
%BJLd,GK7LDZCp!D^Ff13DVH4g?.0jrh;B2MMa;[(p<`9BhiHs`;tQuW/lUL2U;TOuOFct(-^]UI\($gY;9&gA<8S1?)7Q7Y%S&5[
%8sQ_4^n@")gKN*\_fEBnj5CL40dQ@%J6-E>6)j)>MC^Ai1^S]E-IPGDZTV0)U\ibH[mZ/IB4P9Y,UQaR;;L3:W2",NmUBt9m]+j*
%Xqo:2DG#Ai?Qu>gf<Vu:>E1f#`\e7<U-2I/cd6:gKPs9#'c/Is%n7c0G][s^a"maM,U>UW&FuDA!W^eo>CLY=^qX(L=cC&l;%q>d
%!L7k]hf_1T7*E"4ets.aC:\6MX^]Gk_%oU[,@E93GSfD-1"+ZZ'm+geS%D*OS",,]UA'R51?YmRl\[&\Q>#+5ZM`;$`s6&kn%i1-
%h.+#7e:dn@FYrc?@2X@/]C1NoDp^4[UQ<?!eJbRAVs$pCpb^&1P+-eN$)obH,ei[`dF=a5V8!;K"QMnQ3`s*]_f2:8,/MV;G9po9
%*A,Z[M"'b_7Q#+:O:>[pE"'TD]++2+dJY]PYaT_mGV,`8]Gm&%"O)UHkZu'C=d%3kX3X'L9dF30pU)TfD)cY37kl*YUEUf"h4?7K
%[d39[pY4LE?\[V/[VZJ)=0os2k9KRG8XqY1pCLeD'K[TI;Q2dq#gDdQ-n1g0)3a0h/!IW/Cb3JB48B\%5Be7\3:3Xk#/b<Ff$sA$
%d4;bLj)Mu"U'2la>ETP<q<=31=,D"E>n`;TTOkaKlrhPXTW;.8q<LF%mX?fhM#6TMnVDN#G-O2*];e#aB7lU4ZJ<-&+]\*@h/NU-
%W+b"Z/mH<g0W^/_5eT:mhk-$-fYJHC%+RArFjNrm!skdf=Y5*)K)$hY7O=#N52or<Wr*.rmb58=9oKMPdtAeoM5IFHCqi*TnlkB%
%)]M[kk4sS_Zii?UNq]eq(js>E!u->fmAbl]UXYeUK-%!54;MLX_4h)^8@Gt\hGP5_^>JSAPC>%WMp@AZRt(EH81[;ZQ]j"iK)>rW
%lp>Ll\tUNF&E3CTIihDAV5U<C+8$VEqYoDB+NY-c]D;<?SLBrDD?uS3%Arc0M#R(<Bp#UL5%B-!lJlZb2c]fmnb4E1P*gK6@Y5.?
%h(p?GD[f4Y;NS.(ZfjgQ07'U,%,>,>qOVZXoWu4A3[m$VK%ln4ZHri8Vc?A[p:.gMah#oK,'?nY@n)$@YTR%1l]<JfMNq%2hV*!Q
%WH"/#9l0fP9kpmQ%=Z(VfdAVa&mQY&=K>)m<kOF*fqGB!FB,k"n1dNnBoZUZ<AGm"R&d;;Ac4$3!mYR]0.hW,kRZE_l^5P](>qY6
%S=$JX.\_sK',t0c$,@;.EeSWC!5G8kBdlOS2lI3=0&"i+0+KTG:)s[VJ.s%s9$/k"`TUPAHj1_U+B!61/$T_MR6`29&s&e?q+sa.
%95+6dh?=[?+E`-KQR)ug^c8oWhZZOp\.pFBBd?+^qs&2e#0X5J\jk`W*gdHZoakf=]2ns(AZ3i^`442W[<,YG@"L!KS5"0/b+%!m
%$X^$"QV.C,F$#YEIG6soU:]qpSY@1OIJ@44H71ib.\PV(NZiA&]6#!AS]7=uDHD1n_LO)gTnhCF[]kqE=RT-tXiQM.]Te3QKuaV2
%kX"E#DZTDk=1#:g>T#UL]e*q5L9j5&b\m-$h;6IQ5Mb'YI_c.A7DhJ$E`b41ka[qU6o=:620;T%`N^+h6013F#2OA.9oA5H(pZSK
%WqtE.-XSPVflZKkBWAnDOnWg*dp.2ANGAinR)Ud*0p(>_&0a6)YKYW12(of.9!3d:B2W)cWp`[2TCb)kq1g/=73^=6@Dj-Gn!ep!
%]QR[RQ#mDg,sOM`!c\8_P"Q8P0udLlNMF_.=[4QA%Un%"(/fo=.T*\fpd-U'/@.;HD@XpK9'FK8b$5LD'HB#L31*KGQ=&J`E=<nY
%mA4`uS!,Z+_&B$fmLKG@,S+^J*3,j7HS[^TE';J#Y'UW+'F6dYS0B!mN*6t<@%PVD'Ti9[ElPLt(80s\%#trZ'U/miDGc(B!3\*T
%6-C_O5q!W;K]oWA7%$]<5Rm#knj'T4!=Tiu7hTmOYJ`7/rGm&A;iK*W(NSeUL1?*D@H^Hq"$Kg_(&X[-T\'U%ic]H'2@Q[gX<,$q
%;+Wgk0_#$..W2@YJ$"q;7K-KJd^luJ_u*u5'DB36Tl<9Gc,77O-SeiGPq,h6j[A@`Ao5Zk66L,Mrn?pt\1q94YndkZ?0ILCc7C?L
%K;m+)o&UCe6E>iP=U=Z%3.1j)Dq7"::]n*cgo"I1Dbr<6eq`K6&!'T^jK:9>'<_"o>ftoUj*jP8Q?ObrCQRU5=`8Nr9=+HUM!16e
%6FW^a+T@Pbk;,_>e6<hP/b:siRPP6qael7q/O\+RLC[1f('I$`Am>D,E17mX1q5WLJJ8IupXh`2_<00_JD@,gauD"O=0tR[`arW0
%(gl_qZB+-04Y256r4.<0;m:>'4nQI[8#eHZ<C5]N5q2*ujpF&L-[\oa8aD)rRV-m74U7VM@&qJ:K<iYh%SJ/L>D[3&cFXt,Fdnjc
%"JcU1T;1-*ESnb`B-XDn_P\"fp>c6-7c=aF^9]1\(.eJu(Bsh!S]6aY?UDd!#Zk=Vo_"GeL%Mmk*'+11">!rAmHee[]#+W9>:=(E
%SF?J5#0ALnZTaRNHYN>?GGCgY`RZ:Jj@A=T'#57:3+iDhRe"<`@hQX3Z8bC++i7:hj/T]Fokd!pCX9EeD"`M,U+iH,,'k[NWYU*.
%3]&KjWHkqUcKo?BaiK5DOqCV6b-Aj;j,7Q:'Sbaii0hr:0t!YSl=oMfUaZ:f?)I";_)Ko8mCH2bYUNmeAU[!QX/4e:Eg:Z!Z.A!4
%ijd.Fp3@'1=e7-?6d@;0n('f(ca2.b0op(tRm>rgPP.8-e'm%u922R[nS>r_eL:OG9=l:ZP]\8g"r7Nr>VBYC)%t=-3Nu0b4,LLm
%5l28$ULYr#m0hM%Q(:T^jjI<"[B>iS5Nul/@@DktP2nbhjVsBtBqtpH<3AHaUiTXi1iPo@6D(SH&NK*unH1u_g9kR9+re5(qcRjD
%;cfWu?Cq-/,DloWjMXK@c)C@n\M:[)QR^OS;45"rQEPmg's(aqeb-,tAj>_L;hM]gOt&_8,C7C4E!<6VXnqG;XE%_a>lEBAnYNq4
%b7>5C]!snTd9<UM/?@QVW:M5[-;u&VMb+hk1<HkS.0e]*r^FX^eNLD=;/\`4K/D'62;*X9,6U.IoejpgK]>V2M-m)T6S;M8.mX(M
%"lE=(2Z&?g&4rsRSpt41msmJk@-P1a--7WiXd%sP'?aT1QV;FB^cBYZadQGMqG\%$oZ1ZfZn#R<eZQ'/!X'PR8p;6^HGdRPB`tL/
%P&e*$h>(4frfXk2iD_LbZ_4<kl)D7dp\VcT(#f@P81@toZ9c?A<g]qU49?t/UdtZ>Gci[[a2hTs;A\jb/.5`m`Tg`dR^*?.d?"!i
%B/pjFltqVS"PL#8BdCk*6OAtbg,N3/LE<SMn5Al5n\1m`)uO)C`pa["+HUn.D9!g`DVS?=ZL*;r9j?!.0\X;VJh;2CZJUt2k:S$^
%T9j;A[.R#j!"OPD79n%!N$3U6B$on*J'pTHl<1q\(df5hdCQ/Iit@Dc0o/YEWqtE,-_3rR=<LBYkF-&kRCk,q]c?H:konB*dF^c$
%]pigHQ>.#nD:SkO=TfSl;%Hfm=fRqKp4Ioa6"Z@([M%<>d__DLLGUs4P2mjur.i?\f3R1s&0p@4.o./liFdX7WV6"fSo:.^rA$PY
%]p[+JD_q=Gq,qE.f`34QaJ?!:/$tU-(1bA]pbE%94$m_UZfd533hl*FB$4?6R^p!>Bphg5i=d1_,7EVVVl7N]l6[B'jNc!q>sR7W
%:(AVg7Rh365[V/"8Kai33(/4MFHO(Ur`E-)6*Y^L@QHgC_Kdm"I?XaM15dDECVdACL_3Q:'pW7oVM^$8#;?76kG>_M]Tt,fABrt#
%0s7%VJ]*_a/44kATnT2!C*QJ%;gE<6M5@@+X&*GV;tEmd,!57nHu8hGjU`5B+jngBXUt12IpT4o_Vg3/'4Ngt`Q]p^<\;:l(JeWH
%Ht42=Yg)AZ0`6KhJ2sp>M(J2!bN$@3OC9-#0;I+5'J@T,Y28p?T3Z;X=5Vf_hqbo(dO/PJ,FNJFB^s4bBi/:^EKdtHqHLfD3/:"o
%s/<R[:uAU9#n_R'H_nXWgS4/:HtiPS:(r<h(:%A^YK8gG[0IM_T$8n1k6T\mX2go>Gn*^0<mF[@CMpR+XJ0,><?RdEr7D_cj&4X-
%m.%MIO'e,!;5-Jl$C2OA>bf_KW0TC.05gQm-k/>k(rg@GL7A[6$$nBr-[*F]fp*?#,Ti^c%R[cB9-:c?p8m,8Hro@oTRYs]JfE9=
%lsH><He8^\>;?Ym4H,^<6i^P[#f]c-.fpgP4M<!s#)/3?_f&i[VWbWA?X*PD"&?jRL'f65&sq$a2XU6D9TFR>Tj_r6OY[D<.t-.X
%=.`PVqn)BqfND34d,U0&5NsMTQdUkM3?7^Df1+bMau1'#1)G+`G"Xbe**79@Wr`5KQG23UoqT?a3iNNekm8LYM&2$2UF[1E'->?>
%G]<h8`-MiP(F`b]@36u^W-[QnKAYGoV657_US^r7RXTGIK,8i!:R)nuYV#%1dmbb]Mk='PnkYEWJ3d/=$H+:\#huu*(4)t@WL]*Y
%=PZq"*n$VIQQI2=fcl\4,oANk@:87F,s;8u,s6SfIn1>_bWW%D>-B5Z.t#h<-QQe$Ds>"!]U+gtd=_8t'-Q\o?FB`%QX&rRdXiVk
%M+JX8R4^khs"'N(jR?(%9=#_2$8,hL_<#?MWTG]Hl6c4tJl+&[+j"2dOt1Tj17achVYa\WZMCRg5APO^kbGljBLd"&AaqH+M^6mV
%#H5jMeQ(i[f)[[^6u4L&s&o[[Rsn?.k+;RWJ#n"6)5)=HPCLeY`-h_]bVY-P8PoTk('qQ^-hBH/Y'8X:s!Uj]ITD]I?JG?qGI"e"
%cNCp=ET$q-YR*r9"7sged;'cAf$R1.$=#jSP:Pe$7%IJ$(Xu#Ds6]eL%?AFBGnZ$H6c/t0Ur4Drhhoc4$n=!g/k_:hl>O<(B<g'g
%?D#5%GOfBVl6VVG;S,C',SV99U5fU43WgeZi.Q`OOW;hn#kMM3MX4$:.!e>RAUf&JT>ZBMmId+#E%1+Os5Z!Re+'c4QF6iV>"VJ$
%mCH?&-]5Pk5f5<V@C%(.7tFPhSc)Ja1(oh<bB6/Hd>SPkYH@,fs/JT`?%.B+.O7Vd>Z3D6+g!`WS=i8>-0/KCao[n\kj24f.K1a2
%Lm$8_^a_6TmCb+J>c#,W5?a+sZc2Pt*XFZ]O^8g9l[d>kD<fH[ImIdn9VFGPnpSV='u&Jt-c;cSP2si@1gYh1NFWLh5]T2,_?Vc;
%(6d/\aoQEM1&Xk(&,c.eSdW66kIJE)?M;Z[/C-TeH=Sb8\H@G=`d,#YjMn&3Y+!AV#cHL_ljT)BdOi8MM70TsrQD3]GB$]7q.G>P
%Tp8;m&62,ThqCnYFMX6BFJ#"2!TAfs:"!"DLUX%a$DpgB"(uX[ebQ?k'Q;OpXoLjh<gBb7&+^mu#9s",MPd0IRsVM?3-MBfCH+m[
%c`4!\UN55T#B/>hofqVh:og"Rfrp<9,68nc;#\N$b?2CJ-5E[0/1t?cG%gp%s3"n>esW)O4;,mVaWmPuNY)O1X;,R]R0rF[9Ht*T
%cKJJ3/nKo_r"S8(P!ffR$0(CsC'!4*[ipq@C/s!L/dLn"RCR)3J,f9^,8*'KeQr#Wd69Hf-C`EgFYc4G:k%hF]"h:h2/S]f&/T4)
%e#&JDIWb%0R4X7]"bPFgXTH-65kGqe6jJ@PoP%kFLJ^CqRE:eS78(g*+TD2paVS5Z)b5r="/tQXnns19@MEgYG:>ijn4"]l`<[]=
%'*gYK;1fdQJ:@GtnR):LJHq"&pD&<^6)"N39GRL3Tm@IO-=^%q9la'GA>=`ZX3k=g.5j:[)(o6Ms7\`BZQR&X'&o(9Gkl2S21ZjF
%dZFQs7IWhkaqR#Qs.Aq-asV*tPIJNfeb.GQ-iGmS!bqcS%a/E98$HA'2pKp#r?^8Kgf_b+5P74^RTCPQ:rQ<J%>lA[ZO[\(>pf'l
%_\+V:g[_IiP[1jLHgW1';p"Y[;*6<N:"f?,]"QdV`U)#a;C;OabWdV`.apLHO#s,`D1W`l<jnL83p&mbX'dYJ3YXfTG/lOM$c5qJ
%pjP;6++1sLVe^bRbu3jE3s'8_b]JL00)c+XR10JUg7*KkJ_BW]JuS=S]5m:35uAo!Wf(=gXX6c-n@9(%FBVjC"q6->jZUZ<Pa3=e
%b@.\ZJL<FA`C7(uU..\g.1<%eaQW]#cB.hWo;Ms95ode)pm8KnQZ=;rR8Pj:0'4LsbnA-fN>j/=>+TMfh@9CL(ZKcC.2ht7i;ZcR
%V$DW@hS:8%d;!<p@7d,SMPs76!92>5Tam_uQ"/dH*8=0k$.7E-bQ?P$HPpfP"diKdCTk^bTP>IK]_shs6<*tB6tq&ijR3W:-eum+
%W;\LR6T&asaHDF!7UH"Raoh`f,V/K00<.93YuY?L.ujK]6r+moHCo&rd9ZTtOckk\N3_`Zg\p'Tg'LA<m%i"Qk\^Gd]iN4L=RsOM
%%H-iC-UCrRTWDZ16!]^OP>X>!%h%q0ioT2U+i'0B@"9&Ni&m-SJ:t)$lr%n!I0D^bV#t[-b'tu%:0$_pW9Pjs.E&#4>I.ng(O7G1
%8%smmARQ_Xcc-mjM><-']H3[opci8;#F*R[TQu:%o.X^T]O7*6Y3>W+?uBKk,q]`nbJ_],`(i`+="*Ko`WBTlfWch^Yo,B)#e2<D
%0k!L^_<0/1S3U*+OO>7tAH[Bq%Qc%0:lcRkO?7aR+SYPBl8dqTcBjNWRgQ3;Bhk#Leg=rTi]8&^nuTE%Bm>MLLVP9PZ%>(WBIb?:
%MWZr7a^;B%nDj^E/.;hI%V0Z5L/@GP^hJ/6H;MBg&gGJE(F1^sYJ"2T,p[n4kXT2/EN<6<AE[B4_pgN$$uu1&<5K_brDM&[BR\^3
%R35/Km&=CZFr*Ykbj4UUT%]G20S!`98nVlp&@4M=b.(/;QeJbHT<%.d-GbUFHt\mJE]<W+Xm'o>#Z8"rYP#2-JH)iGP:m2Ae[mA1
%4-6G>5%KPg@$;ailC,h[#rDq$"L;1T<O<>]X'4O\9]f0X9tG@o0ptT,;(tC*PjcbVe`RTjDY'm*<nW!.9(rr!Mb)G*Z>8Skj"[pD
%o[7`H/Fokp>)qlKP3njYL$+0YTTP:$jP^J<\9SqhC/mf=Eu0I<a-Su6]AW?F[2p7'NT_aGQu2(]>%qE!QB>6F$7NNh%_k#\@DCMA
%^[_HTaJs%m=G8;k8c5`/Zi_k@(ZlKV!GlkU[G-P9UCCh<ESM3i5dJD@WCR23-l_d>3[*d-W_+uQ=\_-2^g8.%")COq_ld0@?s]P$
%j?mW0V/kZ$.gT!,JQn/gJg`Ic_:I0.hG)`::1$KL]h9/e^((=t\o%bY_#2<44a2N(UJ;TZUUA>?ck-`LKdfQ%73BpmRJ*kH&'Y5D
%DBj)agj@g6.4IrK7scMBWOC"bV)=\8&u<o2mk,09SoZ78RrShZPJ8(nc0pH=hu45;,3.TG3gk3Il!l"q8%-T5@EBeQl50***`#FA
%"$0HrD?OoTld62n+lm4=bVsB^K<PSI7iH:]5dH;T,cS)>GXWM6p_8!RPK=LSO:Ygu\GYWhdk+TK>`1XrCUTB37F!&c<0mI?rY')X
%)Uq;4_f0SZ6,E)kUj4O7QDH,q-di2`-^p3qnn*"7hd-@NPpJUB]ia^0#%Q70,,eYXCP\C?3@@(17+R9;ghl80K)N.$1r49jY*&sc
%/+_=K8?-r+H8$c+0(K_,U'X@$?<)8h3L?EEcB/<o*Uc]gQ6,S4a9["S0Z58?)!hf\=eZg4YB@N0,]=tCO%%K-]VMf<3uM7'C>aUB
%/;Qdr5N(1.0Wnr&!WD;#Tr0=VT]e#JS]r%AK5p-rEQo@1Fja%1K4=@Hi/SPX):Jqe]^-W&jcpP/$.3cO;kl)0md:gXUSfsu8F8Hb
%`qC=8C;hsQFQCK3"G-=qA[5q>iq8r_@Hk+PgQ[)0MOI17@?UDHUcNgA6,.?e71uql#q(O7,5.%[@OhW_d&5Si6n7TVRd1gMU?1u@
%b.8f\2]&kJ+f!P`U*>4aTB6!$%GVC54]N+81J]JD9S<C(=$u[C8IkH>!,?>ZMlVMNi8mMV/?CL["38Q0M?"57nPda.Q)-s`F>mR2
%P>5%[^9<<oa#)?"J`tU7A4"W=@XCd_F"_mj2rl'48;$7O2!qYdfB2alB<1+JM+!nqJ;LIcf,:B9)N%3L_i%]?%Cr2WWn1[#d?K$2
%:M[,Dc<=/8/)&77LjN8cju2,Yd@;or_G(Q.Kli,ra#\qo7mJ9i=QhL^*bg"e[f.-JdZj3-=\KHl^Qh*RMHs2_l=EF^oq"WQ\o/cW
%BoXcnM;b_TE;uT'Rd(,/"R?0iFYH'($.r@h0*_pa?51DTkL0iYBY+&RgPC(iegjpM?07XBE_.g*KmK()F!c``*p0>-Vptr/W$XEK
%&R/rhf+r:roC0`CfD$Rl&U'9b-7sP?[BpQTO;!4D$Ie:8\ti^s2`X_+/nJ$kCW661@6:J%W>.7\0jV51d-!^_$$Mo""b-q.D2V*F
%34<@/d6KmHD)`3DJ2k-+r!K76BLoZFY^lVlMVA];0ef&,kN4R9/Fe.FQ#YNpA'i<,+;?D+<t[h<d(O/&YoB=ka?91]dgeZnaDqaA
%?^+oa9K.3f=msQBOsT3dbo%0qIOea0VKFLV5#[t;a@LR.SK0'++.bN*VV7,/olLq(2-]oL#n^F5U^W,JM01O'QKqObGItUf)<VEr
%'J')G"V+Wu,aD;r#D\J>iAlU*aRVJQ2bp+K)2@IZ$AV?[$:HM?^WPD2*8D`QkH).e-5%sVMA5,n!.ImYY`\j7;AIDKPr1l8#`(GW
%K3`1dD#-LH@BLd_$[V$L'Eu#UE[eoF=4!W@A`l^c,hafP`)+MoEfjd>7"bJ&MR][m[Dn'904nFcfd;5>=jaXq".IsPo#>\#;1)':
%nLE7]*Y*nOVT1:1C[X"gaW.%0^.9B@$IUn@!bd^:B31moTs.Lm)#"?D0`R?-H-YdC?57%%&W4dn9K.CAAFtaiBOc!R=qN0ZDIHbg
%H!C&%i9\[BL#&ci0i01X*A9]OS::QMILAG2WA?auC_%#@77XGXGU/3qAUE+eS0q$sXJ0K=_`">S6;4NV4uZTPAKMI_0Oi3U&J@tE
%b4QC;`Ci+a`]@Ik>;$7XafD6IdkGBuII?`l>oPL8O`s%p7gQi!K9ZF&Bpqp)FZacgn5U<i#Kb#Nl'?h-`(pA]oJ%1jPOf(KN9$j_
%pM!)66jRC1Gub)A"<J]1Bj;t,=s^X4[EVcrjTGZi7Eg_:2^q)u=Y/[gbTopj-3m)g[rUccLMHF#=2[Ha=%2&TP7o+n&P^q8[@PNT
%d'&KXME7]\+8ce/Os"('g*G;bdT1``>BH$aS7@dPT]\uUdMe?se-^t''9M_uFlX/[^@PV\?f0sZa7,@,3UMXJBO8VY4r;LI)53BD
%%^<CM'b2Xag/:8iXht#`s+#+gg$r[n'r2qV9Ftbf:Y9h0Bg5kml`Q4=?LH.Ofi0P]Qs,3s:E$nbCjZ0f!e!J"iSkGFMgN[aE1:Yg
%_%r'em9L9_BZkk8X%Q'Up7kWBkNlBZKFgZRQfYa%gIAJN9,A)@Ai.J3D8&kZE)H_@7eMqf^9eHp-D=u[@el4ZNsPi*?jt&+:k"n,
%8?B&hMMt-Y\135[-'0HR_DrCh::ANqG77hlDi3W0]8KJ6Z:l18=J/)/nncaY-`l%HV:l]FT&_om[)FFGI["5eF%\2SFAH^rl7lr3
%Us"qKW7[QEnr_ch.`3G:UIgIPM/F/#3\)Ld=6`E2n9,@+d=\us[!`2"UtCi!cM1kjc6T;<6N%lZ&WDo\S1fFa$=FUnS(2S]J0IHI
%$"G]@d`u[eQ4ZiE[ugb;=iOt[nT?NDna;T)j/RZ'p>JN=+7LJa]B,[H<+bQ9MsSd-:)EANO#\FuK*N/%CaCSD-bhuGD[%L<_/-MT
%4VF\HcIBj3M0O!lSo6t-dp!&Y/d*MUTS%9+%d*0(*2WLe%C"jN!61"6CXY$pI`\=d0W2.6Z#<#BJfRf85K<Uh!Pq5;=fN.V#TaH.
%W]r^W[?^Oh.6D.>,.3KTQtLQo'80D0!K,5la;.Gb[&depGU4W]ar).V^Lt&0k+:)4FbPO8%8119/1)CR#PO;_0l![Rq1bKc@mph_
%9-8g=B/(3T9!Oh(W#M7uWG)KFTQ7,tPc:\'JLD[]dYpHsB,AOQr_`rQl8ktNLFu#<b+H+;%A\RsHF6*c7hDDN1.Z\,?H7$s%YouD
%72-b8fKcZ4e^fL#$!pS6'^amHU0F'[33+q@`DO4^"3um3nt_BZNMft!;pof0&h6K5LO1<WMrR1=_J>i>%q5LlFbds,=)jpsSan[?
%*8M@B5dRQSi[/`DmE23!Wh9@H"p3sq<YAanM*Uktab7T6XN>-^87+ej?WaT;(Zn]>Z-2?masA</B\-W\Ri"5$1>-fdj]8r^0!#E!
%#-Gg%JlTPM-qfhdV^]cZA<BUr(Fnc+mguT$[NV3`N%^f&^B91Z:8f,SBjQ.#Y3U?1(n0H>WNJY(!3&M,J`Ks(WL"V=Wd[FRk\U3[
%!m#[Fe(7uK`n?t/MnDI\4ZZDCpl?\41p=eFD$6[F_(c:&:#n:W>`3VP"L`&oV]'D]'?q!S,Tge0JqWjSS<h/&$)79*:WWHE199om
%\BSjS_O?9q0h?Bf^U3Rd+KotAc=CfSXYHY^AWt'4LThq,cFH7u9o$'_ITV2"G8VfN)\M:L\e#[AekL[P8]c<=bH_cu&k?ri"%g+D
%8dYD4PmAifo;EMC3=&/>58.W$_'GqH/d638%C7D<`+d(u!ZI%g-UGk4V&nca#fhkd*(:YS$9322X-8B:q46I`#Os]M1E+hcO0aED
%l+Am.G29b.3_!a$,SRG4N?n$lrMoRR.FN_s9mAj5X>aSY@F?N6"3sN/Hf<f'b.Tr?`1'7GWl4tE:]Uj<bG5=,;?GG=_c/ngr*J!t
%WjK#sN<!h4d`aF#f4R2JS/C<FNIH@R[aZl'7&<AbJ3/n@/0jRmXG\]nhKGB1/XnaAcWQ>?\"C(mh;GDbC/t?uB!/aqK?,UmgO0ai
%oQ7RO'i2=pK!?sGK'sjd%W(-VP*l"e/sfF8C_3BR@9#4&<N3^bImd+'g@$Fu0Vkp<L'd*r<:`0TjV(KdDHu^JFTRAe$]oEBq-K;i
%D3C!HUR5q/YW6'f^a+rha79>RUaWd0i[sM4,Do)Sgkd8Q]\^FWQ0Mn%2i5>rlJeC#=m'N@9XVB8?8*2;(5!G;lO2>U?;Z`?.?1s_
%Ed^L\\I@r4nn08B029*I%>Lm(D4G`cP9Ms_Pq9aR&f\`O7>.lFc]q(n(!`SLjONGh;/f;:1`&GJPX8F/":^H[L@?O!1g00o`OrC>
%EsHL.$].Hch(bb7/?f,ZKXH0giC<N0`4D5_%SJC:R)YIG.:o/A7$c6r<WY@pPV5+frj_kT10I+L.<oh7#qSF4,j1NWl-u2giNP]:
%$m][#Lgqk?H5&VCRa18UnNFq\M7`FE&u&cL&Xi<Vr"#^g:aT`(LaH,>G\B\P7[PZD5%1[+A@1)Ol3+ItoV!c!YOYu=m(D@(hm8@X
%)'(>$MrTHT$KtQcW,qIL_O-V7@@N-%,duH5<^/)U[In(hO/(5-gnM/K[@SKXn-0W1`=8)X`ROf$,fc'QAOZ(Y(Z=rFTP,@Yk6G=T
%=Ao-,NeSRP7tI!Djcg+k*9#WtV\CdTmnX+,#1B?C]%AT#phEfq.R8&`,]ApH74-4LNEW>;4J/Kc5WQH"=`K)"l5eFJi_5ZM=kpX:
%a8ea1L*IIp]-&$nWXHl7/sG#Fj)Pr@K6PqUL3U-&gRZG$jN$)iS\>$:M;*./m9s;<E`[GqhN'&]Xf!edSmYIes5G'oj'M7$2m/ZS
%juJZj':Pkp==t(Mp2UhY8Y$H8B07"&">tC?KQdaTlpgBj\aTU#R:T)[=B'qTp&I<sc6eU,q_soR3t959hZ\j5Limf@VbOmgH0f]i
%YlkBamckl<JO-G;mXiDCmdhQnke>ka1?[m?Qb2/o]=YL7`_Xk=A)aS;oT,6"Uh2[Ui\pW"g9o+MO3=]o*kdnQCS*YP,&q>t7*NoC
%OcaNkE[mq+Gm'8Oa(H;&Q=u/^;2DYf5lN%8\npR9Osqg+&iEZ1X.d<l3/2"LXmos^J8LjSZm)suL2n_3f%m--Wl3$Tmb'E/&-Su:
%\pp1H2XT40AY7GYLYgR$TY0jKXA[!je8TL?^QpY6hD`9JJg%jHG$09`MN!;N0""/c<OKkj[E)qV$*90C:MKM$ojR\a*h)TP4S:X+
%<WC*u(]2c1>sT<?GelE1c'8hSH+tr%Hb4)c4,h!jgJrCX[?"\,_6+6E^DtW(lMt:FTrde+Pk2*b:-%B><,gD?C/58RE>Dd=H<8(R
%EV/)FDr^i>s*aXaQ*ZL2Dp*EUDENZiCH@3mgY3tLD&lWcLpW&gZFc,c63@#o\&D\\%E),f#OA>Rk;0JX4(#U3,U=_)bV@ihc>4LX
%=&]iUd<g8o]SIf++5b_BN9o()-<5;TEt@64N"Kbh:j8\Lm4b[K;3crG*qt;eD+Vq+Q=(SJIiecJnFY;$Z)XIk&Sns^`8Q$MZmQ@L
%)=]XO!Nl6<Cg&d_fQ!P.KrVlc4Ds2!'O7DV<4@VV\_U]PKAAb[>"n=tM:6S(ltO0,UKQ-LOaH\%m<S_A!g3f"E/c).0:-[s,i;Jk
%>9^7AdR)i",0eLKd#0\W"L;OTTTB.Ne[S$,R00'3s8I]/1'Em)(cY27bCi\TTgN;:!ei4O;fSQH4t4Wb_j:Y/Lp1;)j46ME.JQl5
%[`'oerr.F6-#I5r>*,g;36A>e[H[7)Q=)26,dtu&"DL0+J'PS-HSC^^4\51Ii)=bKHfB+Y+7qH^nsbUC1Rq@IMKXOr0P]:q)UL^/
%CO3F]8pcG(p%5eV@qoB9q:X[Rh;k51@$9mtkT<;da*AHq.Y^7n9c[Js]7=uE!ej.T=i9%j7O&cKf!V[bhc9EWh2_aT2[Sg`3O[W+
%s&mnsoOHiiJja_>a=`2oCs#(1<(CnCiM[75nQG;GB4ZZh^U3iefiNe5&LI0La\68g?'4:t\FImcldD-"rla+30ULu(IVlmZJ(tB<
%;qe_oSIIm/Q>/1b,IsWP7DWit9(jEV.YjnUqq?KWqb_!g*te;=P'2F3njJF:e,l)=kQ!o!=C@B9MV+YO=;!@gnR7Cl4P9n1Wfn@N
%CV([:>=lr@%ar:fB.Mp$@7195(BVl^,2n(@CJOl!1L^.Tm/!mCS(`>"qUmtr<gi5[5A=W=5VFGjVLL-$Wr$q'reQ%Nh<?qn2+\uD
%EoLp^J%R*^!(/^[!V\+h2Q$:#Co6`2a>][[oqJd-]r<Z5ph3@P6`Bi,X3Zdk+W1!P`hst]pua:O_V9+7Q+aR$iUaDJ6fe.oae,>i
%-r%-qkI_e%8sVp0)RnW1+N_[SL/6fIbIsnAB_185((b%[Tq%mUGQhM&`M")P-FLn*QHS%Vrjp`tAP]FWhUcg^G$h:Sb>>KM9V>B>
%N@k\U-N:8";sZJuohE7]ebsk@TCqoW`SFa/`j"Te]Yu#/*@<!(DT[->*pt*JMh5lIHb%T9^9(f6=mW.=`:Z@LH=aS^2i`)D-96O:
%jh:S//=bnn<F+5L\+`_CKgihRQ\"G5f4J1BIWjkKh/g`Ir./5/\I2s8#UFF3*V-V=+DX(%Uo=(0D&ObIp:Y6(XhUI0:RAh3jQt,=
%O$U>4M&YJmhjG%5Z-r/K-R^(c_BH$[9Z\/`\s2tR7X*h[hpp0G]tNR)ih,Ufo^5u$+*+*kG8]/0Rsl[97:M.Z^D%M)V+7BYe].5*
%fSl2+NHl*;?OK'Lo[;G`",h[f=Q"kD?h_)5/*eP%8,u!mSEib'B=\rpON/Q\bAY/b/d@6jX,:4"YK(FJTCp]r#AFJa-o+.4X<s/%
%2,6&)lYK%ERu,Zp'Yf0]#2V?$]Vn2##VJ2"g7](H6*Z"RR%%h8lD*Y.Jd"7Lq;9['^gXoW]bmBg$S%XSA:1^b-Y:SIG90:J,rW@r
%=;5S8B,UK0mS+;AoDUs92?1>2Ps/^Y::96c"d`_:<&@KK9r.RUjEj*s/%EaP0<Zs>Y>+tC2n&bAg#Fkg2fZG>V'u]D2CnPLO9-$,
%?I\Sr%')oS)ehk@p*ebCJj67c?dBD%pQ$qSZ=1[C$D_I=*Ad/F^c4Z:<IHdCKCYB^$btYR$fVFM;F*<is1)O9?U(SaU&_AD96Es\
%UCX!<])[`,0bo#9.oY;:9Yi):s2M#Q4DECLk^&[JO=l<oWZ6;lZH0Id"9)R(#;<',bY"E3haC=O`JX`+kA2]6*Yj(4`"%SYa]&/R
%M3GOW4_880ITQ#UF[+XZBLXYrM`D2R>eZH^0N+4E,ZInQ7U[+5SZR!-dXZ8q7p3.[igLK57dVGW>l:IUQbIk,S.Yh9MN,MN0mS.!
%(JCLY)B`=:k=H0k7Be5K+$+e42@,Dbn4n/I=JJ;I/lBO]n0'PX<]_2)YUN55oGYflgVb[X*d2iZ=2'.7"`*3iUPo$CgcOJKJ)!Ek
%H?6D74_.Y(>(2`DE@(7"0H=,V4boiZTFP*M@\!'.fS'sW[jS7q_i2R1#FacLh<"XrjZ;RjUUo&(O.LV@o0<kmZ:3Bb5QCqS)G-B,
%Uq2h0-stZU>\Jrjg3*BCW'%S&FXW9a%`h-RH?9>rOS2?rjGsC%//S1U_CI3hJXQm+!)9F)fN-.-9QJl-Qi-Mt5tbJ^>2;i`T6qE)
%1-=jtQI<nbUVD<G^S;P=os=9\^'3Nj`>2/&A'q]$U3ZTcm`VN^5lYVX,hstH*X(@\@tFH:#0-R<0$;T<<#8KQCRZD+YK9r(E$Aq>
%)U67pJ@:=6=HIr/C+2e+Q:02_b/8uQ%KQN8Z`.6OGHGoQ/8(6uZa,ou5O#6DGQ>jtjYM%3jTd'-'[dW_%K7m4YCHSRm$!^!pM3aU
%M.,ob:PX]-hi_q)'@2hUXtWl@">'b#o38.*.WQRhMmTgsm)BJ`?gk&mg$V?O8OPJ0ZD!7XfSGo=MhjR#?3]LD*@dp.[P!Yu;,n)g
%S>$gVWOTHri*ElPQ2POlqe]\()=Kt@&WG4GIC+%"\&KT:XIku\AOXto/--3:m2A!DCfK/b7H@0/<JThAm^_/]!$O6.I%iJt5fE30
%C#$;'EO!&'PBI=%rL,e)(4<,WY`G.*rFgI`2gRr7juOo26G9L)/X9e2W3t(H*%UCg*I_Ab[CV]J5No4[cT,m1Y[U'(kuhN$71bt5
%Z*DVB@o4Xq[&&><2`oLpMf*6%RL(,EY7@!AM`?<?[Bn@k.B,D1rBb'>$L9=iXT7og)UMt[6<AVcpa-u6WpS@<gIHEC,/P)2mhOY4
%pjF?1'Y++YdNq/-k`4E4+;tH8q$#@;8ua@A75Vh&&HrpRTK?s3O<F[o*%mA_JT2gG$F'm?@t9pHfg1RLb:o5q$=$U_>;d1W+2T@:
%V5Od!JCoh[;2h-kK`FccAQ4IRW(NL)9(,06C_TKN>$WOc;/mK$&nZTk(U7`hXonb\Liq1+):lak#i/lpKI[0d&_07da8R(0Q4]OI
%;7M3U=(8,]5g:uZr&RSI(S;D&-5bK*=;O.al!IlHoZDmS[b*B'Al8%>>"f^XVi$6]KnLT:!`.Pa1#\JF:8eac)AZ(<>#"&qHui)?
%YY)??PY_+\"MR'?C'BgLJ'(H][H[FH<*3N9^<R^"X:\6bYc\c>17"AHI&q5.1=]o2juE_.IM;`qT$JQ.BrcP,p6!/aRJKF,JZ&-*
%.>Z;iA.cBg0`hK\BIuc,J6!JY6Nj9L%*'sR#P_>6Zs8sH54FOfFJKX@$UY%04lB3H4T=pMIkiSk.BkPZfsR.9=<lk(e;fkC]>g:J
%6CS^h!_dYsliiS@Q#lLiV-2PPQX9q`946847?Za7`NTQnOs`%V-%2YTm$@UqY-%\k@YMIpCR'_>]_8jl:X7PW#d5LJJ(u/Z!aE[B
%1HedIDYKP?M_n%JVT2amfE6LS+$tr&OLAopgr2*TeZA*hhGut@Z3l[A'4D?<?j)pT<E5o0Zjq!u=V,a&]Z78gZcV_7E'>[9os9E?
%$/qM2i0,l_ZEbUW_#90WWJr2PXsc3$%Xh<(=e7r26.-WF8PJf2i]M9b#Pt1=Rg;h^HJj@4?eernm$Au0WlTe>8E;;CF9OQ53<4B8
%V5CGJ,J\Lj336;He_lC+^dSg<^SMiF$kN^'^K%sF!abEB$^Qf0_u2&<P?pc#!Qp(A(ShZ)iPiL1*)1N)[S"/#EWEkN-G_fgfeO^1
%eq4hnBo+F5(/8S%9e=sr>$iVViA8d^[F7dUEh]C\DBH,14/t&C[OSS$?WgDuFn76$?'i2AeqOG)Z!F7]ga2gu$!sUl@)9%A$D,EN
%169$YJ)ruaWR+%dn"-U!14d)54G'j=[)(_Zd.T,lprl_O[f!eFB3Qm^5@X!-mRfaU2JSO/-G?3C!5qp'-4uq!BGur=nE,"eZHRlo
%<Rk%U[,,O6Vpu$+@of+6WK=/gao[&C9Ci/>4!k+.A\>,U4A(t$&l92]eRVH$5E/je4EL;s("+6./!RZ'.A:"Nf2-;qH<'0;pct!d
%Lq.f#/Sk-Xq+seO*[F-j;MGaf:APRV_jPt,mm=iG&s26M6)+P]R&$hY:+]Nu&fA7jaEL1[5qcb];7fNj65u=_Oj"YW.>X'W\Y_\7
%OamdBPrOZnl,&*dM6?>dRh`jDh@ZuF7>u!i4\A:#<2e$Td<cE;Sc,XQ+kJ[!E"i8*PbPh9<SVKW&e/b:at(U=XU=U7,R27aWYBM=
%3lb=t/?7TV7>VV?)P%C.ck3#JH9sBD+B(78(t627'?UBf5BiCdCk*</WE#Td.Yh2mi'`\[La?GUSK0psI;f'a#\(q&"[O\+q%:gb
%f=/ihTFI%aP9ZO]\&?+g#`$:"7[&GMI1aqS[qm]/=-WPV'Y/m!\b&LW;A8`m_k_&kh6An%$:<!qC1LBn%33:eT%]Gf,Nf3s8uqOd
%>7b(06-nQ?6#GK2s.o)BM!u(1=EbRA!=G-+fYjj6F`%F9o(!(81;pFXPXmV[MjXI+>*^=NN++5B/&NeGB(d2L#`]a)'3[V0&:"B:
%PJf83Gl=HOV1ndaf\e4oJc()YLe;4YEOq_W^GK,O<iI#Q,1rW[ibl64&F)3Q4!H:4Tl6ZP$UKC@ZC8Bu9NP*(!":a,5Q\/2;B<:E
%/F%%7mnNFXjdB?UE*J>W\rCA>A:`qVlCNcQ3'0jh><#mo+IS[9BFCOSTqjpXcIJ';<Up@D"Rd19/c=8SOq&@S]h=Vq$7I=pOY]r3
%JWMW(*-'V^pO)GNMigifZ<3p(dS.MCd9l$R8],)\0QbS9NJ)\8+XBjKL1WbNHA$P`b`Yo?i;n7+I1aMXR9n'Y&n4ecPgri*0!t8o
%YXI]_ktV7MG<6aKUKURAOj,n^4H2fD)jVHY:Oc-*@6tj3,lnc7q]q*3Be>f4ZI0cTl=!hgP;79$0"4[T?mfCr(GRu<19b,P4N<o>
%N!7E.Q'3a>0Dan0^r(:UnT!t"%u>:uoJTiU#infrVOt]]Olr@CR_P<5p2C.&l!\cbqsFli:.@f\ngokMO\JM%g<:NQV-7!kr&kCM
%,C8IHmu*uIRn]40Els,qReA#K,6]$Hg\OWn48kIl;3oRpl5HI+X"+?&]5_)O#A@*QAKGh[!\p1EolKOT;?(F#!NNT>plVE(^us<N
%atI=FKHrZHF1FL,@#tqQUW/$fa[)rPe8qHDJJMf/M3?9KT\f,g+u*&\Ti&2Ko!/t7afAi@:(sE]f9a+OSb#]7adJ8:&ZLj'4b4n>
%'X[$\=I8#'ai1Ij"a>oYrW6g#J;_`"*sEU<KK[I9kunCAYqFf84%lLW_nA+d&XCu;WElA9<3u$',%"]gk!d%CgN)0<[PGqbL]4l#
%@m()c_s_3Dd^d>n98"8jf:r$d9msIIb*X$8.08]\"u$L`]S^?%cPFb*WM^m),#-4lfgHB#8k:D;fotuj<`\N@jBq.;EH6hl(tls^
%`5^Q//9j3ska_%OFNfb)):t8VGM%_nk0Kj*3(F!$#kL\U=_4#b!o2gL@\SViRN'XK/2^a'r=;M+,fL3n2'nA&_7K`]iCYFqMQ1;i
%iettmX^?*tZ<ROX1]!1cf+2=nOila6U@bFhhb!rtaMRIZR&86oCU;1fFH2?'a@_gFWDQJK`UuVE4Jo6<V22OSGu>[t!sp:Oc)+9k
%C(Z@te2Erf*\nodkuQH%9\%YpKJ=pD'>>iNc_Imhks0d*OKXrV]n3*.[?/0i:-h@P<Je3e*T/!sg,J++K2eVV4SiWF57rOgnB42n
%*DK,N59VFrl[)Q_XXsZj=t3=l*1FHAKJcIm/M5sQdk]f*MJ+mY/CQX82GOZN5suYRPPSS@Hq)PrH>[q11Dr=C%fV/2TngAM*JdkK
%rlaanE[jAFR0T&2$U1;4_^Hm_n0"^S"0bshhZ(,kqY;"WCpk93XX$S*f4)phTj]!Yq<D(7R>R;!h:J>HKX71r^\%3%NJY</EAsq6
%,917J\GI)-8M6TY&LBZ*f<*Ai4EGmRG94g=.[0qGoi)q7@8^.X>te-*^o<q7d@WqF2.rWoJ.$)j!ln[qp,r1.`e"I"+pOub7CHH$
%q?G4*TXi+IId<hdLptA#6?[>k&5m^X"Gp[[BkI#*!lH=3PYqhs97\SC$V`M4>QBVe+<"&)EdrMN3?`emCjMld._-^dr$01.R=&c-
%EVS[#eVQL]'L`cl>9k_tnF/?(f:keil7>G)O'TV"=Yh/IDY1Dfne[Z=BdZqA7\Emts.\Giok^YSf=JA0FS:;m*UZ[e.dqQ(`@a"E
%<3nVfUlY(hho%@13mr;[b@IaOTH*'@i-&+IHrlNC&;LeWl(`09F=Nd%q[RMmH)nDsO3(\`*k@X#C/98,44$NfB+?*LJF^hbcR4n#
%L9ic7[^3s1/;]-_<+8'X=\%8CDq71VjX`sSUi^f^8%]/8qJQ&::GWmTIq#1J[$!L@]b6S93-:P_(gYe`[LTeNV!Ygq6Zkbj!dD7I
%#iS"Rl"tQ^.,BL_qJG_m1`"C6I^@Nf].IfF@*X@>q!RG@33RLBINu5ST/nA,(Z(n`2R_l7IW+NnQsJN2HnWfi4a;#(j'ENi$7;bo
%4Aop=iL$^c6.M8odXQ9@_J"=Y0M?..gLT'CB)\@-?oJGM;-g\j'Xc]G[5aSCm3*Bm1g(#q*s%-LgXL)(_]77(DTtAcm+ThWY0&<0
%>?/&Q"aBG')2q3;Ph/WkiZt!qqRYEmZFaD[EYMc2G>u%@H*t8mfF8kkUOshYC+?a^i\m@:HX$6Sm-=#dH[33[cESaS>R[*+966+V
%]!mF4<H]tL'Op6U?YJLEgIuN:"\QV?;=$_p^5LsQaZ?&sW]1"=_qtpG:Jo@qNo6k4;HE]]V\l_k&.-!$Cum6LGo2gZ!Qg+&Q07AF
%>D0Lk/R!.<N-mNW8pBG1Tk>0ihd_S1+Sjb;fPDu(@Qmt>9l!GK"r@mLmapre7X*a.bAiHLEK.nBeJbQVVtfX1Heua0hi[PmjSm*T
%g@]n+&sR<q0D'#A2<cH>B)'>V0d#;qTPt]7MZm[a];fQ(I(Mt^dM7R?j_L!'>?3Ffkf)(FJ"#dar3Sdd9j_OM-jRb62OfV9]JL/]
%l<]bVX4g\MTUC;"[sH7%a,o*<f!$0[Xmo]!>).)7i>Xhha/4nb`I/97'^PM,If#sJmN.TugHBXC+0.VEOqi)sVei/_#8cMp47gX[
%RuI'%+!O8]$NI/+"G2YL3,k2J\$H@*g$($n:+2^A+mrbd3H*J$Q&]S/A8h2TFP:GP^(Vgk0[2[s46=k,p$(qD/lt\IHF/UgIT]c+
%miIBMo%_8KXA.8cZcBfG(mV_k*kT%q4ilK[>tX\/EcqqXGu,-o/_m5p?FTSKPZ?I$E\C5^qa4eG,[jk_[+I:d?0%7mLYsWc3D0nA
%e=QTU,YgFuf)-ZcA:7DG2XN\U&epDfG/[=_3ZX'qj6;\TS[&ht,/:ORg71!7Aa2^iA]Ph%.",&I^FQg'*8B_V.K,0qHlE]3-K9`6
%#)rI7Q:nPfjAQu]n5Z=l'IPt0!XRU[V't&),n1[>jc-PMl?*P@Tl$tgDY:.j!l0i6+uq2mG$CeEVaM=i,,-^>(UUe&VAFY&nBWid
%Y@K)00Kt/*UD02=GJK*pLENmUE<Z(S(t+4NX91UQaYLDuo2TmoZ/@jFB\bmg=>D=):8nm#%7S,k7=5u09!HXQcjF?fgc0u3>J`%4
%6#7mCLPGR?0)KIhUmORIdCliF=6<rd3?@X=7Vl>jGXYV'\pB0jJX@\55H;OUTKPjN%=6%5-?7VVCJg34_tbH];2g>g9(R,%k'Sb(
%(FcqiQ=a/%0G%e*98"o8/`.&MF;meZ$g)M*L7=!)DF3sf=aF+2VSTKK=fH+s.tgWkGWMTNs-Nd^c*V.1`Omd-fLQH9nkj4(gHkcf
%lNt:J!]bS9+T:6hn`Z%B;rA9@Hr6]cOt7g&Y)=^F`f.`f)9$d6UdLA3,h/-WjO#U-M`>69^jC^n,l)\qi,\@h[/(?]ef@:1P:i)[
%Aph6Y5_D(f5[*J./f>Y7UCEh+]&iT_N3R'c]4L9WlD^;8Z1:(/7``#pd!eC>4t5RF"BOTc!PB:5(%0&R0d!TqrBcF[+4;p;VZaY@
%]@?>o&@T=_BS%F3bBHTD*r'e/:%!DbG!(=JG+#(9MOqmmjn,W?i(0MIZC)WK97`aPIPS_Ap,c_r_(8+]o558AKqmR[5:nAL93PX\
%C?%n2'<e;XOr&M[(7I'?DR,pYoZ3bS92XnuJ%U`?5'L9>fS#nV?V%*nLU*f%a3'0:7%1q<V(4?5r65'o!W>',:b9FOB,;lCM<9st
%?7*Mj9_B`M,G\O"\^5(_T"7MhC#TBMV/Ami..j9>\SUuLlRE1-VP?k>1J5#_jZ*mG='hcI-L-8qfkoY]Zuqekps9`">4l!`K5n>t
%N.';UiE?*\"Ho#RCNhtbK3Z^6>UG@cXjK*8Xs#m,>@[Q[/uV2"R(,4K:5Ig]ZJPi7kU!'-^Y*P?edLn#g""p=p@:n,J$toQgtbQ4
%]/cHCI2F9)##moKY-C+#b&'(%Z)D>q96?9<\PuUpm/$j\EX!N&b1iX<9?rt%)FBs>,tf!]Q1pLR&[s:&Z=_2dk(Hr5lh&'o"p@W1
%'#)=O,*Pd1flho(2#Uiod$=$Bc;$!LRf#,X3q>YdZO#RMa.$FbFH'H0Qq[!Io9GJU7sr25+D"h/F[+?a^%1k<-d=.c2%;?5ni'+&
%A)D'agKDDGf95@"fr"S-9eCUWfR\-f8(s;aU(%\`-'r$1:eD<&Dt7juj2P[R#n=/,aikpUjFUSN+^,2qfn=&ZRL9a@d=RK%^4h,8
%fP8[_SDXPaTGf!1C3>Nqq,!PS[=l&nSMT0M)_YZTb;o<m:SX*g@/9<H%P._k;YFCY"`RZGl6Q,CL2KSf`0>*R/]-pp!(j!W&AqX2
%c69gDTrZTE:-&,!8o@m<FGPh?/5Qf/($3@Eq8j<Wf;rbS<E-`#^5hKGF0ehoG.S4*JNWYBYG:q-!Q\V?og+0aJd,(G&Y?&e?u0O2
%jk>.AAFF_^F'/6GA@b$nlWQ$=iJhjD<r-iSpY2)s("dH[@g@^Z:"D32b9s,LW'F>;Vq.E7jl>[O,k8^E,A9H$^_Qjc9Q9`e>EtA4
%P]WTj$5n(,-R_[%+p*BG&:c+$\rLV'lsHj/h"l'eRmql#k4^5+(PioL/&<U`_'8J@+f!dJcQtD),sW/O4F26)YPt[hVb_7.]3\cU
%mlbKjNjr/'h;A,%[d3D44o!Tdpu6+;F\'7@>J@[-?Tb!"4DaI+ENd[!^\?u0fAEWUn?!Ms`RjnMNdTlpr5Vn=eU@/SfkYdnZJIV%
%rmke-HM:`nJFB%_Y>3&<a5^D(jJs6ke^aK8GP9n8p=9uQ[m%FA\+ek^I.&M3j&19t421Gb^A9SA3'6#B7K;':ne)r<F,"4c+NiG0
%bMS%bcIgCf!70Cbd$oj=]=?;d!7[K/eXLg7S']7R(s:T(bMS%bcIgB7K]db3kY9:b9k<L:#jP-cl8>=/0(ef;p\<nPjj/2p3Y!nu
%B:Zdt&Da7]f7VWN"5(d_mI`1-(Pf`V_r9n^o$*lhrTWFg)<W(O6hdSEc.VC\+mdHfmEM'erSd5<PkaAlq<lW*ca1M^`;Iq[V#HBZ
%56p*M9)=<6r>iFt'DVS8KYSNT_(4I%4Ykt:K]*[0n1J2L5.(;9!<;eUqKlW,"odC'"PuBMh>n,C+qrfu(u>96hB4$AR0NYBSb_l9
%fssC,DkT.?MqL,,4YIA>pK4+JTV>NKd<gPp/!B-#mIUlOo,_N8#)r-aW1=mao*,?i(+o.[.XH_/HB1jJ`A,&8S_dbKrdUWpc\_2g
%$=+c<4*b8M,EnKI3B0<SLhN$r_5K0q_@5`E8JEM>7;gma4m<^dl:orR3U@YN'=,J(:sFi3e,dk8ce\D-%kTER-.NpQBYqIi1\a-"
%h\K+8F4hr;/n_SAri-`:j[h.Ar-GsB59I9Hj?$O3=_:4Q2Hr+N:entcGGB#6gZkp3/#q9HU[m-d+#ii\TAB<619FlK"Q;qlOn5$\
%[[O1MMsK&Q$"WTt8s0e<2R,PAUO'0<D8FiXIPgp"Xs]i`s&HVoceg-5*C<U&<jD#%\%o1+.=ASf.XQco9;U,@_=A?EqlNM`ap"%T
%J.gj?D*NCAdH'fSG>TcMS>ugV/[*!_(#j*@Io^J>#S!S9ctT0D(?QBLKs5$0W1W'C3f>5#XTVG\`i=dX%CRoN9XlqN=t=J@8$=G1
%b*up)'FZ=5GOub=ntea//$N>P'p`^+.eItmaHpG.KcNAe^E#<e.ecdK"u+Nn;&(i2;*O$H:"V`WNP@P6LBcjqGhbW%p%^M4TbpQ'
%m4[uf]WbJ9N+k=4m:L@@.P>i;D`pV&[riq;;c+UF93aGj6ft/L$oXRMa`\*]Y3P]9q-^hHKB*cfFDfc4YKLJC%V+r2J["m7#'N8'
%#(B_#2ST4g(ICtFI3"'@!!%bI[*!WSMS:bm^&pAGV)f_\P%EgJlQU\'8NroA6+DJ^LPjAW<cktf8m#hk#)K)\C&;sHW?s2Dc6#5e
%#cYpTmR8o(_mGc+ntC[%414-)EEntfQuTWVHm-$U#/hd/Fs0b&)^(.XL&SLi'!>j^;V7:FbG`Z:WCpdH6Ii+WEeI#PJR"36UTmN(
%jp$A4I9BRgZ\uMS6"sZ+7CZM"VkmOFOl%Kt1'00@;W*^EV"!ZTJIBVc>YYZSh.ErQLTu/?[Tuo-l/ur(SeDf6;(nF7]h(CPR*(>=
%/G#GI`%j3*LdD-3&u=bK%,h,)@urg%4ond6]s'U2O,:$>0jq%OZ<T=m`pR<s^d`d[n?o"g$Sk1c+,`+$BG/bpB415Q1Q!b2B7LaG
%H3L*#-9b;RR6e`a=i/&B17,ce&lL%":eDTm`os:aNTdo@nn]+R@'$hk$`+4qN`$"^`-B1J,0gIse%(]+ob3!IaGPaLJT@^8f8]EF
%TJ22KJCTbFZ/>]2"9UXD.I/\B8a4PIBj;(Kg;\A?L1<?T%IZHTc4TOi!eMbjd_G3f.Z[<HNpuPM#rS3jNo+c:XOKf8W,)j.&QZ_j
%Go&gKQ.M#r-?,8El;Q[o]WXq?q9<F5Y^:"oAH#%&6t-=WjId/TH/pl0-71J5*j-(tOV"r\q]k(:MUG0P8\H`.M5Jp+.Ag,?D%FAH
%g[i`#%?C]Q"6W%3Ju0Z=!CL**Jml(t@oLf?.RKSTBgq=&(oluZ)7loq5oH55i%s+9#L>%m9Al'*L!r0<L(iiq8)OA`"%(,EFR^1D
%$`6muFO<XV4d<B"R+O3@'-(*qJbUMU;SNVue!(^^X&++`K7eEhGVT;9,'b<.d;<Ej632r0[\?)#@;_V_EEe'pAa(s/'MgiB<)6Oi
%*[@SGA4EP0U60*ORlQ^*Tk(3lZk('@,bi'?OH;,PXkV!OQj6_(170oJE_*rtVs/a4(ohp25n)8D*sIoAo,gu3L>rp,2;f`aTjqE)
%@?Ru)\H\kX_XZIaL?j&?VT`*fg10]TBH84cTj=1EVK5m+_?-[`@'>bj33h)tFcek<,kLs$&!MOc>eLM<Th&_:Fi$IJ+;mcQj"S`Q
%3QL48_uh.W(p[@!kpS'`(S<7oW/>=78Y1q9;9k/6A_V=8WnMRZffa96]EpBr)r7'5](9:$+Y>1bU50W'37U'&9""ksq'."T1e5,,
%?*9D:6,Si$N*S6[lN\rS'<^4/qcVIq(-gHEFhj/"[D["UoUk'aXs2X5T,1[KBNV!R@#),C:J5*[21#6[-J*+KX$U\H.,3cs&_;.[
%TJY)a'#T?rW3\3MINfu7?nb"#mcXWNjAOQ;Y]nt1!Xu;2q'[TG5ZXmj(&A\^pmtXl[qCN=eM0mI#(g*Nhj3jTDrVan?.C"!h;T>Q
%0&.Jr;3mG>]CRnK-KTZ:bG)gU6a;R:iS%;F4N@sRI^g$]&=7<G<lj-+JB76nJt0U',DmUm`_(T'S&d1p6rn2@Z:OJbMia"]CYp^1
%;2u,j+h$&HkRuY=&p=:8T'Q>+'^V<5HG!InZ9[75j"/8EQuq_qN5^V%b]BN\/(T+A%TQ(7IZ>AW:$8)(eib:j\pN@Y]5)ZYg=<t2
%W/eJlT"!a'Qg(u7/aZqdQWlh$fCnc75DimqH)(HQ(Rba-"MG2Q1a1g%nQ`Z2`WNY=l&cr/=a@dn'Dh^"VYmY6"<#52=^AK-o%e0`
%ef-b()6u%2b!Mo6>S?`r>tsK?'XcSWKo<K>BucS)[gUq]E:POcAQ`<leWFViBTIGI$X-,i@."L;nNgOH\;f6bhX>=;"*7PQLMsT4
%a4[Wg%Rs%Io3g0U&F#.)PKU\rD6fl+EB+B/dCX1@H+KV!%T5hA4\nFD2J[X&JgsJ.H<Maj4Bd)D"?$<B3JZ^*lY!Q]2HKSMXbpef
%P?E(<-7)]pfZ:E0oIeeT.rc"rXp'*&^ci+?@MbJcKYP\sF,drP=UJg[K<o>;L\=0:Un^(e'7phO]g@Yh\DuE6D)lP'2Qfp0<UGq&
%%Be[>Kr\Q#Gl^"nXu@Z,YK%))bAWTO[;jj<p/p^N?Cp$Z'*1_5A)J@.o'F\-H;p1>aKc\*:iB3+Pfltbh%g(/eO$6j0j2f<]./!8
%[>(m@i8o6-FWI&Eh@B*19?6rcp-DM94jkbDY`ck?d09`=/2FR!@d*^c9Pu_]d`^3\\+a_m[19rqY::q3U#B%uDp*-QgUP:4=1-(`
%\%%1b[j_\h^S4)pm_0ocJ?&CY6T=35f/TiuH_bgJ59Jeg&"OtiU?[iaEk"#R/!nA40iE(EqJ%!)+d>eqn;fU&iJ\@#!'O]VaX",A
%f]"27_Cj6l'XSQ!1Y>G)\a@Z=Z]0TNdd6b3#bh<Jak[q_@]`jEhP]<upt]^4Duu^0h?IUTo<ORrO(@!hR:;6IXp))aFuG"H"(A(_
%)+Dr;.GDDG$r8g))u\>h4nn/b>>Jb=3ckn?GBlE3QUgc&._jPF%_<hV]ulgElj>%(%ruhA^ErH&q,ibmZ.(PsPmb_Nh4I>GZW1r3
%=1'LJF9en,#nMc=R$V<t,'mR3Q0,=uBr452:.]OeE(QWs,'SoF/j0he.Il:TCm]XK<ajpiR=mQR"3$oqGR1_21_EGR>:pGp<o:Xa
%9U0TdX]LNpXsLn<h[rW]Bn/A_dquDHDD[Tn;%UlVmEloec0f3R)Yg8tENje3#nT[Sn:!'caZOFIf!G3h:X<\\QX1\eR-g,hiR]tm
%19`*TrOq;G#<c3*8Zo$bDLj5nBsSrK43H/rDa&J5-#=lHk6=Om\E*#WeCt*ZK[g//,C/^OE*[e&BUjX;>iY`]bhq_l<RikoZc,^J
%4Eq2pIMs?WLcJVh%8$:0)%2UK&,%*%2Zi&so"I9>J:KH:i*#>aFgB.h8*ldC3q:o/>7bLf_gZ8C/KUcugAZ9_[c/W-P!IdP+Z(Un
%enPu(=EX,Nh*&K\9<b:A'0&B\Snbl=\*1uF>'4r=NabQ#Z\?*Yiq/;hq70?o@[27_c6-uE%4oDBT?FZuj0"2(Me@Z<K=cJR56SRD
%rpG#159K,;^`<JmM:^qlO`&9ioE6A6b;aE1d`6sN#fHmDZF]<8)N\Y4e[0pemg;ruJ$/30Z_+n:5[q;=`L<_USrc>:,)L^]`No,?
%d=Ae=75J,Ukb$:AiT7/cAH8i?IP1Dm\tAA=db?mNU*piqT$ub^8a5)'rXE4UF0T`GjL")rTYh2_?InrBO%YpVJBSihV"pJPPIX\=
%Zhe6"bn&S0.)Z\K7T1oQ8]SL[&97a3ef*UMKK90_=XMVePIFtfWQE=c2pD)KDI%r$nph9>7-R#4_Hm5ASC4IiS,VIpbcE-,#>qWh
%+0!FM-^l)q7;!oR@X:M@NoQfiQj%fUj:VH1e56P/b=\f,I!*lfQfS<N'?Y%hdZmTLFfa3H"6Jm3*@soCjakaI'7;Y'@ruQDj=P@[
%5JW@O!UnuVHK&cCnAOh>jd>2]N;%B1"'sJ7I,*-BP+4UOS>nlT\E#:,QX?[V6^BG8lr,Q%8q<\T%95eG_iIr<QO@(c>h)Fho<><i
%5lq;_SO:k'MIo:KTrpIe!V!CQr.BY#L>M6s=\N/or`JRZ;sk%>M#+df$:nW(*%q7&CWc3rj%ba@RJ=,uCFW3`d(9u60WkV-:&<WN
%aL][/NKG(5A8`W3St*b-<KF3o_aHq)7#]YomZnkpP%6hpWt!96TI_UoeGSDJl/W4q1Ar>!0aQO?;iE6C?l3%BT)eiT1dPn-971\_
%;(Yg/?56]l6%QXYqM13X!t1RC+l>KHV6E)-_dpj0YrsI)E=M:A?J-$o=lZ[E'OM1_;4s'IK^Z,0HIidt9Gc])!Fb9)SmjAt+)>=h
%F)jY0;=%hmBlY!lA36ZS4f&1ajGkWI.pH(Q.Sq7Y9q1\MF+,le$an_[/SgKe^###S?,`'DTA".gGe73ErfUYE6/u]?'a1AW@=GOT
%7iO8ca5`NSF;q6.`fd,c'7O/NM,4l';>&_M?=:(1qnR1_Ja0kRkl+.;r4]#^FPcn'?%[6#[tjNlGE'/9jT%X:MKcqp-P0b&]X288
%eaitVgG?9K?2"k\0d`S*C.XQg%0-WfhH,K_U0+Pr=#F0T/i@EflW(]+9L9<5RO.TV?jAA@96L:F:Q`ea:<W1lgdX7@b$Yc+Cmt#?
%?4]b`HOWe7+]Wc/=gM:"K`h=."T<g1oXP"_d/FF:KWJ\j:s(M9Z7Tu>#@4dD/RGTZH<'_<8a-.173F69dCQGPY+VcB1+P']7GaC1
%jYO=X%Vqj'+t[Ca@p$j_10LO!Pk*Fqao7Kh)\e#"l%?+\s5E?NFt?^XD7dN4qM/lo?kl3nrP@VbW[/o55_9JBm;*%>Ya[-@^,Uk8
%P?\]^VrF"]eCcpL-(dr\h&b&-gl``loE5)c?s4ili:pki;4C?OVPd)hgHr@8Kmkj>BV5%tiqOTJj*M9i#ka07jE)Doo)qFuY;EW:
%'PL.#CkQE_RpdAuHY_mbg`N^S:J(W3PWMLA8Z3g_!R-I>hA5s#nWXSnfs8f]Mp9O7D9MgM3#sYt2?CI]s'$9Jh9"prM5-XYNOq</
%6Vo:"XNf]jL+tZM6b>c&@0om]mgJo;!G;qV&g[gL"L7"GG'JC;X&I6<WCob6(L.a]FTN$\PKP[^_EgDu8j[QS,l2N:#XKWM[>N7o
%>4cNA1B\YW\S))Z@`!YX)8^pY$KaUSqCe:((5Fs@8<[=FRP$36i.pN.&>k_TOt[V^o+tMrBHK=A@>iMnQ86-!38D&=1<mFe<3XiP
%ZY"n]5lJ;*O6'T^Sq9_AVVpM^d1<'?-0aco/o,RU$rX\[IJ4#q(>L,'^e!EXQ;#GCk>CG+h+P=JkS[8CW,)$%9rd0ICl$t6TJ3)R
%#hkOce1%HmnaY>I'bQ<J'crVL2LjgFZLWVcH/1e.#5Ap0a6&;a^R5XgRIfe"L-]MO`Sj"OpKL]LXj223fZi^Zrdh']Xj`'?dh_oq
%X4A!4[D"h6!nI;eo%!<+q-pu1UT$i_nZ:WZ<;b\BM[%L-8_="?`6M.Q*c^>YGe.=c+0D/qn=A6eG7#O7;_WPTK%Q6.:*.$Mm1S6=
%q\De(S+IE$kt+B;QhVujU14Yab7/I)2M2ZJ0,JoR#e$a-YWi_.b;aMU32O)g,-mMQk?NB:r6^7+b@SQ645Iklo"(oL^b[$eit\b(
%b&q$fj[kqk?Q^$YEFb87gkI*Y",#ogVs/DSbpp=g2M<'.AaOKIq<;5KomUTX!d>s7TE[bdTab9U_A6Q+dhgPAEi!QDjPjCj2K>9s
%lTNn/`;Q/`I[mbFfrH"^dK<5/_[SEdKV"@(OtBa?3^QSdXkTYRQcKOAO_a#8D6/,ncRIlC0S,PFO)*X[f#NMb3$]^og:pC@:Gd*o
%iprhn%GoggRnt#B^IDBR^HTBQhjL*@8j4K:],YV1AcRjb=p$LinEC%sP@kAEjDGf]>Dc]_>ioTJ+Mh='k)ib7>\pSWQ7Zhdlj/>F
%1^R,g)cJ'I7u5M@d=j[_CU_d:['1d]Hgp:Dc$81IVVd/l(LTANW)GIG?1kocf-4rHf>V*_a"?/V3=sf)Y/.\E360N!S_$l@4l_?*
%f?Ut-gr+>ne)K$(Ogm?>UNIUBdo619,COkR_>QnK-QQo]]h=lP_aA#g&k8+T()Tmi(6YqLhVL*;r`r2:k(..'lTQCZYAKai_))<%
%3.eV-V6uCS]?8O)ZKDKXWn&h6FO6>$CplgFn`*G2KP$WhRmI0H&.781Aeg]?b.RGkn@ZZn3!\G(dN#=RHuh]n\]W*Yq9_`O?97._
%c1#3!iO%[H('APp2@&P3eAl4sN<aqueRuTq\eR!,8tke\l')I**a=%crLGO,UrG`WYp:D,no*:URmJYgPg&?%[C%/qePL1BHKM,h
%$U^S)&jO5$WA.Nj'lnXb"Pi,1)sg3S>n2b-#!"r1ec]TWVpaH_njpfq^Mr8KDD4AU?5G6iTk[f">H#HK>W\$L!+>g6G/!Ri4T8dk
%;OW^mZ]oW!g`nop`*X<R<iD%a=X/R(+(8;A[$'uCe+@/\2.?eYV'u%Hl_F`6Tb2Z)o,_a?b+a(XrN@9uG&3l+6h%i8P5#h_\g(FP
%oK/6Y5u07M;O"Tdi<XF6.S.Sqp$'M/KiVREVWOTAcX!3H1U:I1!@OS5$E0UcZq/<#E0\nh4s&](16Cc4?^C:>+ie4LHPqIVEIAga
%Umb0Go7SB@eV(T<$]?31f<mgoH&KFIa#)pLgkV>nFe<X`W]SK6,AMoQjM#kb-Kme0mr;N[1H';&m`fdZk)hhl`G`s'VT<4(UBr2j
%%V^3T4*=OKB+8a9c,NJ/46(%KH6%u$[o#+O$#Y_^&fm*=:iaMM[QW[_fh\23;FMO=Y:<gG*F#=nMF8+JQ;Q)G?51KlO.@3jAkcUC
%4AHcflMbrb_Fd[.GtF3ni4`sGJi*=HF1a'UB%ImD"3j]Sc8N_+h6)ZfW!>HUIGGP;ESoRS.<1Eb]ibioFeheDmlO=8qVE!$J:Q_Y
%'ukK=<^#"VHaUPH`i<OL%g)ug&OUis+:q(%@ZPRqHFu\qVe;cXGXSJRM_T>j.P`8&BWaPf@`"!J%QLmUkRj4#ZZ#S-[&fP[E=bNI
%+(oVt:b98_-=>-sHDf_A;jV@XGol&gRsD#L#_0l0H9j%_af$k!f8Sfr^%V?K/rMf;pQ(;SGTI+dprL2>S=Ob15NOIC$,rDE<Af^;
%YAJ86UW!SW_tfd,,db`A]4qK!FL-*hem<cU78FkIc(WQ+c<"ah'1/#0[=1f$jE9+.1ZlGVEWUm$7mgq)K=QZjL*<l$3Ic+nk+crO
%gU?dmhf(Gjo8L%S\?uZ5@h%`:,/>kZMb@#+aj)?KVKIi"mV0nG'^Ilu3oVWI.kA[b<6_>7a%B/"DD`tpUY/k'6n/*UVkVf+TYEXW
%Dlh<!pju8:PZNm,<+nSV8UZZR35!njlrpbmU\eI">MYD`5Mrr*&L-W6qmqf06,2UY&B*>T8:%^5Z.L/^lZHa1RKs'0eM'h+<MQhc
%@$O&9qhT.a-I)>bh!..holqI5C6'*_kP5Zm6sJuk.XI2g\F=e*U,C\RIm:8<RB9p4c3JJ4ko-PeK\(bRNh/)2M`N8bNHsVbEm=nS
%meaUIN_9l"]igBFFe"Lgmi0BQ(9pH]moY`pTGb^&&V/g`^un[;Cr9jrMXb*eU9VsU(WP_=gkRWjohb7=Yeg"Z28#P9;Ze-PHL9:Y
%5@AoHj9asn/mi_gD(rmj2BtK?h[UqGrc+RXf**iSJDTV/<p=<>f00Yi41oBN*3S=,@s+>[%]T?MX/[`o/,,<]0El-4hr(m>Nh4-*
%LMO53XKFp=HALI8at:c><e3%1.N^+Rb%nCN\g0Z:VMmQEm)mBB!\IPYRRC]njDrFeD(&0!"!6%p,?gM5X\jCl^Q@np;@.6$,A(V4
%MjZ'>oeP9XW3)ts7;+O(f;9\Ra"*Ohm?dW0eD@C8[NAj^ag]:hdg-0HG9PGFk#,W.E4+ia@kg=%6R'*)@;+SKQQum_:#i0B0JUm@
%?:V)HG^A8_<0g&Tguf*34HbLY",#k]OY+jSE0I_I\B5E7=OY*p-Yb$1>FF&qP^In0Y>4`SR_Enp,0(gRcds4PPj5m6k^*is\i"`e
%[.UHcm:in4;RkjY%-1-em"5Pk][0^Y_H5VpcYX9q*AQmi%jm=HA6J\EbIjst!KgK,I.ejIf!VU_oPnb3o$l3l_\R'+-^q;9gL:;X
%[u=g>bWYD\ptdBR&*JjG6#W!8rlAE%nDFZ(Y5"8<aTh`8Xl*dW3M^4h7XR%n2+a[rhA+??DE9CjGfYLXX%ae?"HP/F$KPpUE<K$Y
%Q)[9$b9[O\@LKVP4^?uep.mn(<$iBCR7fj]:TOhI>[n;OlY<m*X!.8`[lsrqkV3HEk?ttfU8F_91`&F[W\<>F7?N3hGEZ*jHI0gD
%1U`*lW(`\JAZu`XL$\ZtHA<G%FU1P9qJP*n1AG@Oqh7o@1X_3rrd<npiZb:O!9BD$22(L?n0H/7.hp&n.\L?i)7UV3n-7C3<M1jK
%41*Xc5aVG[bgbBV:4ET4k^,*nE]"A=P<\/?l_mp#IXdU@2eM?fW6u@QR_Rb#s#][1h^l9Qd#;1'+st#MJ.O@J[%S51r7rbS]oJ]B
%;I'9qcI66+S]uD/Y0B-PlI-Wc1QOE.K7HKD4^mcFYn,tn"rf*<lPBU:Ub#lT7J<ACCUU<m[Fs_1I6?Q!/p#kgHUD*=2OZ>(UL8N]
%'3?RGj>ECTEfDDuIVnfS:nQ&.]i>*@HMiEHmd&BFRk<9$>>o9G'sI\#B*f6BhN1Nh5Y73n`snkCI3)/FqTn@'`mrM>==!MO/)T@F
%&%Ff5WWGmeQ'Dj!*pZTj.BF%a(lpO_pA9/[3e#eCq5!_nUU=b:b79.^g\fs1>YLO]rmC@eaknNj/3TG5?Z9qK+R2$rh#OFm]6Z**
%l]2/"=^>`d5%G\3<5Nb2Nf1X=PKa0EV`d6drR42_k7PNt-;^Tm+]#of6;0p8Ph\4\>W]_&M24I'RU0)P$MYPsVq(4#%k=\j*0IC5
%g^!/Ap_ClR<d$l;#R4/lI?D/^KghEU738N$!2J$DI(VeqS>OUY$>@q6.^07T\BT?G(>Rd/rcqF*!J4e>3"3lr3nL([EIJ?!juAZU
%,-pTXQNjjb7\Lrc%6+qrj=A`!*%?]Q@\f`[&Ot\L)UGlC/M/Pn4+%t+DnJpYV%)is7_Z!G%fY7MK!l$Me,^<E67e,6+b;#+2rOi`
%]:Lk/e+4Ju?)n(4Wk#EjM%BVNEl10P4uXIdiLp1f_>`upkhi2WN7RYK$hN(!IjLM=6Yfh`Gf:AUfWa@,YFnD],q/)W]:B/+!@>Cf
%fVu'Df!<psG9*,PCbpoq>m'Q7(:nN:TKsNf)j1BeH?V,EBRr*i*-g;kidmfHJPWeAA7gLq@mKlKTEQ^]"U;mbF@IlB2g4I$`*:O.
%)]GY$8sfT\@.ZKu"?'^a[`Vo]cTu5"SOSt'&r8*SG<an84c:'^ZI9KROTTH,$RJV@kX"6T7n5aD)9.S)MS;p]-4:@9*1(H9fIBDO
%3%'j>7uC!':WJ$)j8bP)^!jJhYf,8H8H4+F[bUagg;c%@0A^9OO*Gt`mmdLG7%7Sb8)ug61W+I$%DQfn9m,;TdQ3AAXf(BZ<fk^g
%8jj]1iT`,<l/VH-r_+h!\``99%GSOGrVlPhiVrQoBd90\_S\*5!S>[qq[[U^%dGq@)$c:HCr1pFMo%^Oa$8Ij")M`:AI0M@#Qk5_
%h+'[mAKp6-_jM<lFeafY='DGD\ZG7sQ-P#Ih!>&*'%8++eiLnA?IjU7.KQuHqq>kG[Hp4g[NL(#BZ\XBL&N#FWNKsmH9MiX(BAbj
%Q!,JgI7/Tlqaa:ST#?B$H9.jQF'-t.K;YcY*0kZ'>^K0K.P$a+B8\Xo;Ch,M$E;QsnIeM*FJlt[h=nRZ1`X]1QU@0mgdJ"/$Y6WL
%EJ6E>c4/V3%@\?[nJ9o7BEDYk6%,oZ'I[ng8hUYFI&._JW*5S/\70erPKX4#`!*l:)ELRAnL+D,!iUc2Cqk\BN4Y]/GO<fmUp8M'
%mMq9+-71u4]=Z\,"GO"5]kQuiEQC`C<]$TfGJZ]M-s<YU=Hc/LD`M:-4X5a?p[,NMDFtL>6cqua"9=gNX/\M"_XWinpl(EL0X?hL
%*M;qU^CNYI8V'\3UI_JrP4JOA`5An$BH;03$J#X7`c@hg-hbmil/g]E>G)1q`ju<E0FRAr"FK0,_p\'nZs85Xp]nT%1.oZ;5j.f[
%E*=CP;4"+NS-L`T&,0Y'A<sC^D@U)`GX\,)<"XdL.sSlF?De/!hACOI.V?!PcKA))7iOIt8-@gbc2!l&918tm?giElH9M<h8hkHP
%L.Y3"`R`[lh"2BRGo0"-EVt,=KSlZD^Z%meqYQ.mCijn"p,_9[:%>&$\BI"$mTU`;;-Bb'qF,4cYb/NfJQ=NclG)j%>&!35IrRPc
%[)bPLf559@ZnQg1h$nu4'c<_54OsdW]%iWJNnMU=#F.LGh`?r1KQkVlXj3tFG-4tsMlAp07\,2T7@#6'kgpH[%.^UhIPNFAM1'S*
%.8r`>aXU3\:!$O6HQK=WeqIg@Qgr,F.\de[,5#U"brtPG5QXtn,H6B%.VSqOq6%$-;!MnT[Q((5]ncbpE$Ff02qS0::)Z.6CmGSD
%g.hFuKD(g8P"qTJj#&="KS_=gk4b,,72Qh+9at^Yk07?r^REW)A7&&J^B$J_UTJQ>[d2W#!7s9FgS;\%mh5/RrIHPDV.!+nfuC&'
%mdk;sH1>^s=kFsROIt9m5[oFV+(7j<$GWH1&l5VbD09T//g?+l;ug6q?qd]j,Gf9>!?4c>cNicdhPm\OCt$Sl@U6_enH-J.NM4G3
%&1Fj%&m?[OXG6m&Xg6-@2i1W3T777A73eI#qkSZY<Q9XW:L@u66O7V7_78LNb93l1cIX79g)UEN"'D8]b3D[1>sUW,F-lKdGM@N:
%fiYGR$`i<j+6*$&bC\H\mj7hZ<J8;SL7tD:6#Z9mk>k:CH'\jrSE$DG['G%r#0,+Y:KF,rcS&j_/mW*EPVPmh,>tE%Vgj.p_,GAl
%JBQ>EMWUa$D@u?LK9Cu3A]V@#9qkS0gTHttiSl=I;`e'DY0W`3100lV\hE!(l@ci=*89qo%^cH:((K5iXN,'Z>JX91"lqatS/>T`
%epS_H<^-_Y%BlWqj`K)5;%I6R\(!#pi-ZP<1(efIWG%<7b4UoCg36)D(+F-"DLR/oo*c`CKWjZK#>N9?7m]ODJ47mpA*j]f.M*7E
%$$#(X`I31B5_&b\Om7laB)m6HUqcmK[=0.Q[PPc/X14j'hH,JhPX*iRMHjD&?ITkr>k\O**j.YL_J*+(=d:t*`"T0d.r^_o>TFb%
%(('q14:E*Q0l7<b:Ahr[Ms:/i+3u>EfAjF9;0Oi-'1^X@<D`7t!qJfbb7BI9QW--!_sVnGk#7'%3SWS;B\4T"oK-tqVd[qZDYV';
%D9re(i4))NZXt\/;!1AT:MLq$5a_ZEKRjbArhD`%[cMR)_^.**]nY*ZW'<@Ha&VE\r<R!pI;:2i]Kb1$)7+/)_6b8HBK8F/Oh&PL
%FtVbL=OYVo;i/P@KH_3pR>9*b^3.H+PNQ<$Zr1"W9PnKR>k]UO#hHj<XsWDDY5b0fiuaHG`8A>4^M0TNl80'n`;UcT!_kbYCRFfF
%iua7"FB)dRZbo3MaLHSK6>;W5b<6q.e[rVLdk]H5Jb=kATU3Y'_+VZW4)Z[[nf&YRSgioio//";i3DllHh&1kjj@S'i]9fETrs8"
%*&gSC8a`WUj8&W_jkke/#k\h3G[$o8+/VI-PKA-=f$7/F^YPXQIX^@k+)lK2@qSW`#M'hXmpnBtI)uV`=6G=PY3/\On*50X;YXNu
%[RKVN+T0q?`>#8RL24Y\V^Lk%^B[[q$eAFMG&J$ECX:W4Z4[sQ@KsQu'o/nAh9Gmr$/b7^\E5)IL/jM(L"249,'^I;&B066jIV#K
%E5#\VR##NW8"LY@JS*qU<FU'>QLgnuea<dgSe%s0YQ2"[2X:2C=J:gl?Y#`.h5T_X@P\*IX;h,nN!_MGL@*r&Xd+50d((e"UTL4*
%)S=-h(>N]5q$BBt6lN.*a,IFSG*B%BP.UYTgm?S>Ltm`u+_p2g>D/t@p>X'Y2#bAm2mtUtq$7F_^0B2ca]E#Je8_lUf2:l[;!>?+
%Xn/ntHC_Y`BpMCsh\c]j_\+Bk&Z1OSW@lbj3nF%[OS9.5U%!GU.'&1i&M/h'<qCd2!$jd7lK+!,JXJNhnWasu\g0E"Q&4jtQD!WH
%kJ"TR-$,F=f[BGI_K4q^M2j*)-4Wq.VRl-C.su0CF\hlog;:BAB-hIt[cn/#*^$p<*95;,X+A:(;(sqh=^e(iXdi;*Sl6V&0no,3
%0i.Y*9!oN[L@bVLJ-OKA+PSXaTi8<r\hN=1X?o?g)]Yn,&)!SPOSI*5^8qsFH`PEdr\/IRE+nYI-;2t"W>5s-403F4l9b.F]n)o2
%"\mr+P8*N$e,:NA[b_qT=O/+>dooE>fmr_GY%cekD!Ag7fb7:eH=!ofq%D9Of_T^2c*\/IL'QP6a$`mDrV:*o)]PN1d!PW`E\pdL
%X2Akf9d%#N]?ZmH)Ub00cj!gt9VUiLr!EucW$ER]")bhNA>QbM(9VM$"u<)d3D:n:L\\Ap7"Mo8?Ilu/X64LO<"hCo_P5HA!4qZ0
%5O='ZY-:XcU)gU_&'R."pj%.s:3;O>?'_'&\bM;>9[LC;)nmic/PM`r#ADZPRAY(R-Q5.OBNfjTdLQhPH>c:0Z6F(1+%qb00(\J+
%LtNfm<tudsDG+;A,<K<p$('s7m89IT,f<,)>ndY05,j&g`;^Re?FPOhL4uikBcpN.U/l@hX9`PPkO</n@?!O4KAkiT+osn[:gU#r
%h.79\W8%T4$E,._":8^$j\_%Up0d4&R!!:;b_26mK:#r9$'l$!n%3:Wi3(U87*_JAFD+"W6+O)[2gE91gR.e"mH9)N2bKkRh>P^d
%Agrap.K6E8KH=T.oin7P6L4tOa>RaA'J`^'Bqho.BdUa*!hPA\HYtg_1mrT:$]fac]S>khlmNZmQC\j'q5>dj,AL4mD3+6dNT*lI
%s4\,:jUW$C%g86F,$*Tfoe'^a<fjh;<5,g)6%%8(BG)4*lY&[A[6+h7SCrO#7Ccph/H2a-=m!'IFHuYQ"qkf<MLiDg)t+eI_m3n)
%ORaRuQBi>FG[?;i>8AA245Yb7rDC*NCfq(FBB:n?9:oW=gcb=T1TX*$!*pXb_..%*&JYRJQN4+XU\#<:W'[c3!_rZ"T*p44?!_C?
%454`[7ACsj>>Sjpo]o;he^m[Nk@j5pd+o:?O2dc:E3U=C/4N^=N?q+BE4FV:][0)%":;K5bI1"Yd0(`u>;bs8->1t'_lp6&@UYuL
%aDT&(5!iW[*=.4?*MnRW8&WQnf"r]H%b$^N=o.MO9W!8[n5%NlIh]^$U2mGf>n4&N"CK5F70nD1`#fRdbX4%1TNN>f5aU9I0]p*M
%o;gb)S7"WcS-U<mZ0&E4V(f'B`lsj\:rFO.n^XH,+8Ht[kC<\7,(g/iOEf_Xn<?.MK"abnI?@Y.R"1W.WV9Y_=8bQclZ;4S;hf,N
%c/,d@^XDs-mIithmUI#Nk4[XfIPY4'.5glh!qDC`HtFBn6cO,[86(+6BRZBEr$k#/.?"%&Y4\i[m,u=Sf,<GK;SeD&nin0EjgCm:
%C)C^:p@T7/>>/!hRD<s;2fP/3Y.UWOSZF;QZra;[hMq)8?/"sZI4kNQpQ8BY)ItD)"@\cnR&6dAZqhL"-+5Jb#NS](gJ'IQ=b"Oe
%_[!!`Ji+/gNIjgQ&?%`L1\FYVDsF;<M[a-N@p_FW-(lK?Rq:u=e[3pnk=(L8IX?qlnr$`V&eQF,&"^'\_#\-"Q\P[S[B:9H`ZBfZ
%;1rA/,MG3@3>MbHg(*I9Q=_lTKlS"IW?Y=JQ@:_<%Uho6Ef%d`q$>b4jn#40<6(jIic>#GpFS]*d1iDD0r/*i%shkM?e6PpBtCT9
%8!,%=D6/k[N#LL<84ehged_dHg,=t2(]%\.VM&$QIp;d0i_7AA4_o`CLk[&(Sr_H++u(/*=^1cc"\5T=KIYN\>YIeFDLUADp8!;N
%LZk'^1Wu;Bi!'@n\<&+m*bCo8bVX-mH^TVnelb-VnbNe-60CDS[5e2o#!:YiPT4jJ"dd<FJdi5SOXLL1:j%GEiN+#COUVpS7+%D0
%o+p:QO4p(B/OBNSH.>`HJoqI:K+qEblfO0C&o^%?"mm#Ihja..M:?1faiVm@_X)]C-$GOnpTQusCXkR7jc'>tSe_-.77Kn@jUqcP
%8-e,W$_^VlLb$U)@p0OS!4Q9ko85)[I;*+LU5j^S6"=5==FcX?!C\+2_c2uPHP*U"-YLD*ANc.b26dChf:'_CM%ln*iY\aJLNT`i
%[#g"G2-pGo>qh4[G_Ul[&E-[!M:\P%5qFm;$B6c^&=JU^`h9cu.dQ];a-.oj=c,'KkR,t<mIRrfDHXa[D.DFS;5k'A.bl/8YP5s/
%b0ht`p8bQlFW%nN1!rPf9YR[`7F"C<a;UG5ZL2^@Dd'A-#gYMdD[Ug8U4^4ZS9(-HCUT)ti=S275<D"^(\.f<8(^d"<,ng%p2q$J
%[&C8rGPT)G$Mqi!i5)jMAo2e]U;KuHU`sK"+?M!mW>p7qHrfh.6D4I#A.kir!3+.&n@\a23hsT5S*%GnpB\<-A,TiiB`b;C.RW9!
%Rc_=G<>*\d/U0*R>44Du:/rH5+cs[?k]9+9*=lRf[tuB]86"Ye[<geCkM_e=(V]S>]G&\4?/C9tUOeiO$b_?X\7RNCbL$tD6'.FH
%4ZXGSm0V[^*\jqI_m%NS&:&uCqLhmNl>CWMkhToma_'sF;]Q9^APiGN\/hG\<r.)u53ie1Gq3aX#7@?hABcmMc!`aVerQ]uag<Yo
%^*$-(lK(b\*tbb39q390S/o%V,2nOJ_g;spo,CR,O8m\MiWr9g9+X6d4cED9d]HMKA%Mo%%@gcU)JstmXO(5BdUcF].^f^*&lu!C
%L#i^\7i#@L/@[CL-M`S*?<<!4/A7IFqg-XG46g*-fo\hoFJ=bnQrr;5+BMa;5qFY2AXXp/-<B-2i=TbqlX1K%/2TK88Mj4'Yc@aB
%jUm=7JRe%m*+;\f!_YWK*26nQ<P>RNTcYMW:0j,?7?4nNKi4Z1;)2cg&o^FYA6F$#998.q23`R?:kk,fX=r1>AUJIDAaYJ&$'CT@
%_)?L3e+98>f)+]qEMH=tnW$iV2.*3ti]3Tp8k7eFk,<LT">eBUj-cchYk'm3)d^ke52<'&p`'%B1X]S2q+8T1JeCm6V"N)\fqD5s
%<VnW#-@UDed-e*,4;F3>;pS)5Rrski;%o+@,bW.3G@cKI10_u1L<_OeXICCd>RC.bB'q9Sb&tg`)CHDl-!(t6TTNof-W,.t*]R4G
%g=t-V=eS`CR%ccJK.Qu3i<Z.7a5I<48G0Wfp=O2\/o[nMX]P]_SR4FT@ENnI(6b/97g+9)ecfYZK$7M$!:/0*qMJr/*$GN.S">7[
%=mr8.aE2YhT@pm<lf#kNk.U/dj7r:P,I$L/Wl6cLl8$=,kEnFkb^k6`mF+/iNApAMlNqZE:R4qjLe)*E/Rhlgid647hCQEo\"FQ$
%[a5srp#'^40L"t3pRqq2V)sIT'1/`_,(M_7-0,kUY#1PV!!c#p(&fA:f`Ai)YP2UJ>Th=j2Z<7s,71D69BpZ$do>Gr\P=S'J2!M?
%o=D6VFF\bqm`U*I*k1sPk&<Em2ok8Km2Xj4F^AB[6U'UO',7O/I=9o;ZoCT:,kk>\eE3Gg4j7gq`Q)Cn-'1JC$&$QfVYN7p`tJ?Q
%1c:[lHWV'=Jos7INSVoYOg.#H5>nrX3Zh'p*m,LgLcm+n)F$g!E46jC#`Ef,LZL)X@aj=sYeu[1\Mq^:HQ3A6A`*a`N'H!X5a?'\
%^9Ai$<f`/'-M$GIO-fATMEKBO>'[tFUj8[(8/K`/EM6^M$!9*tmdROC@s9%:S)n$@%e\cuI`DW(hF&AGAkn[8kBdh<='#n#Va.^I
%,"9"To8_/KIMF,)PK8BghJ")TX0g9FI,/j"GmRR%D-=\`YAZeWq@Z\,pRrKO=6>Y2N8T_BQ7;8QCFOk#f=r"5=ltS/qeS-)[.3r>
%2q2>!HB)3Z4'7dZ5+M9G,dQ</Vl9dX\SgA?\o77Uboq?PDN<K3]T;T2>i9u>O1TX!XcJP9)_]+DfD;sA\=h:0QEn+@Nec=,,jJn_
%i-GJ4'p_#8@Op-?Yk0/2l]brU4ngMfdtXWH37r?Shg4J-M[b9*ROW@q87et\?1]YL7Q>5Xlf3HOW+u=@s-jkgIjTOM3ZQ6$7`b(&
%j0WG;AhbH,60qZl+&3J3cpH\>E?<KO_H=9cZUc^("#P0("D0Fc*h[d&1PmPH@.Vua3Fgm6*_6TdqQO"m![^iuQkYrqMjgluq6:9e
%odYFuDMNu84?k\sRDIIIle>,;;q>3c(C-Tte&].),0LR"_]jAp8AUku)OIP`i=>Z*n/Q>SYF.5oMSjjFe!-WUPsX?NP.rco)2=.f
%2R<7+)O(7@d1NYlX+9TO;j*4aO>i0ZMWi+$6FLZ_%\J%&4?0UUc6r/NOIKsh;<ZdHQI*E?O>fIsDd",LC8!2?O6rr8ZKL.rYrU#b
%+O+p:-VpJf)4Z=_p]3?_+%Gp^nD\n]%")F'0_;;A3uEfXJH:oV(UO5t^K"Uae&Bjk/IGJ*fg6;41B#LOT4sb7L/l@0ofeaBfi0T\
%cD_KuY#hmgcC?sfQ[MABJ<Pud1`7_8=mMI+U>AE9nMo;2"OCD4lb!RaB)]:Fh&(FLF"it0.Ts>[K&uSX/\Hkk4Y35GN;b+r5NG7M
%_HS6R]d-PA-qdmd!]na!g1RINAI(,1luUrO1io29n7h/IiZYh;8%rp-ZA.KV,DANQ4ZV`6\#bg:9%Vp.BFmP+91E'\T"<1X)d""R
%@eM9:FK.9:MVKb'?J[$?d9D']Q^&IoWrh#=lB=AnCopsIr)Hlb"I"gnQ8UOtih$I"\OqcSSs5.?j1NraGXDbd;X$X97]RO2j@TPX
%U?tC3/9:;Ob:EX-56Z9-51,ghDPW_eE*nI>X2<jAS]1U"dL_'4_qJnNq^%js[ZhC9pS?XTeRH]h;;NQm9;m3*AdP%Fs0:O7.QUMQ
%ICR85*!Eguo+LVb+(^`3DV3N.aCh+ndcqdM1elf53,3%WYn?_b@jJ2C6E.@>PFk&&C$O)V]p^"f`eFZ(gr<H>.l]/HPdoBX0UT4]
%MZUUbm4D(\?8AbgF^f$<G+[]uX6t1&pU2.6G41S5%E[]Mh=9o+5q6p@^d4b1#=E(G@hC#5KXPV95tN"sMeMF\As6O'loYpM_Rj3j
%i'R:c[f[mm;dgLTcqTCF'7(PIWTaZH>JF3V<F28OcR\u5)$0sA08!uEgAo:ETr.]uW8_Zl5qE`3ZBjsF0U9)/@fn"F9*WPZrcaTn
%+TI;B)NZTNI9PN&V>8D7Ah56%>Fj[U&mrjrWqWZQn`N9<U-nhkO+[ZQ=KX?[H[qRj^^Ps?])]hXn>psH%"gXqH?8Y89C;BXidOM4
%!cl(B7%I9Mkq/R>,Dp,A;jc>5O:0Od>:)Q/5k?AUJ#f+5#>j&)oE,SM,b^P59lUM)lYL5r-=CTqLks"l;)Sh\;%BQoXZT]mBpnC9
%p?GeX>3i9h'%Up*'kS2F]8Y@[d\7KDmKcW1m$=K1q-^o]LmSA%<,GpQg7ss+6e)`]L0gL<:(K!VCJBnQ7Y0(P_"DR#@QQX6pu%2b
%H5eBJs2!3!qK>o%\]pf4<4bciOMSMNllia<WB#)C4o.*I?\%``E-MTN+u[B5RlRsUa`-@OpN<opX#G.Z1%bbJ-`G@)p9"<4OE!\u
%3XeO%\+MfY2KcIA-1Qi9pWI,_o^t2cZL>I#1E&6Ks.#.(coMFucZaSdAHda!K56sj#'dD),TssYd9U#oQ!.;QD5GS9!\8^_$p=t]
%?Yf^`\Jd!GrQGWPq<0GnclR=C&eeKhU77PEe_ed4%ZUU2<$j\B/l[Qa7mlWr:W+/*RY90AAog..PdH`+[:DImiiZB/SKXI1[XMP(
%Kbc>h7FSL8]W%U/q=tSi\!4:nA.,bq/(lkd.L-Cf.,,;_*4b4jHu751;>/hI?*X/:h^`%O6kZju;fR>'Glb`%oj;%"o@ZqIm@bt\
%pBA-!pO;]cTKER;Z=Im8(V@`V\9Nr&l]5".F!'Hcc_KEKUo)8NI!'*`K9Mf/Loa+_MN=qKBcdKEiq+#pp;)DSqW53+Y&cZZ:6Mhg
%7mk#4YP1(nV;"1r:tH-V*G?UmJijLrhY,ugLQ@IpiFkaGRqG4)r8&!Z1h*Ta@/.+LqVdt-_^"?#U0*PFFpg.+(L(ABjZ7s'\,:&"
%^p:Xj=/!<*L?>(_HKM/QY!t`-#"aN#QcmQ?/3G7aO8%]p_dA21,78&A]]"126?ri.K_kQGc<o(*/[P!T7p(h&\!<8$.5HB,gk'V^
%Bb`PCGXGZEW.KZ2!B:).[UsE2LV(sFU"*-Fq7R9>&^q5?o8@!?1@0pm^,SZi&UdCKopY-,^A`BW's4=qAI9V,dL'N[N\"i3.JXd.
%>,J2H3UO-bLcc==EOWFEC(s[$%:dr%[u%Deadq<Bj6%Me12l0EhVE\Y5JE]U=O=)O0i`bG*e?Xb=P0UK(45:bh9$Wc;JOff]d\J?
%pd,XZ)ZJe=9,tJK*J0".D7QX"<;C7mOT#g31Lk!=8<;<Zqj]LQ24>4JGXB)DVu*tj'3!=t/:d]8N22rQ>H];W"Au6&%GhRH+:";I
%f`D^`d^H3snaook20@Q9GQ\E&bUfqgjGdhXKU8kDHGd_G-H.IVl%,-H!S-9;TDf,H(@j=IFHnea8'\=Tr/;Eg[D4QdWE$.0#mmp]
%5uF:<Bf(H<e3UpWPk>#nPY<jlJ6"s4=h2r0CdD%(Hr&3nT0>BfkC'sJGZ&VaRGC2-jtoAF(RGbMr'0#A#*f[i"u;7;AImFq;nnbg
%5_+\sl2/RJbip#GrB9nM"kHM&\.HS(0eHMR.oSYA^SA04%sMjnG)gc_N6jjQW$mjjTeC-+.KcV.k$o$E/7=5qT^#9R0-Yn`CUaW,
%f4?GZd`?>mb9kEXG94XEp+@IKijOl\#MOh2$8/mlWJPMY#DC9GR!f;*o9,(nmc@@7=4[^CNdV:<V":SD-JcFF`![",D$(79-4@io
%>A\p%s+OtcNq!b<;qgr*mS*+5LS9BPeEiZu`rbYid=5s.i[E[$/j[.!_gXcX=r6[G!1+aH/om2hcTkLg:ct]*fo?:<c$@9O@H$Xn
%Dsg2]-r*QU!q/5REZG6E+,f;EOZRD'ik/i\nKIZ;Itcb;[V7-!VeQaa9D;VA^7ET'Q]>"-BN7e&SAEM\(^*4'T5G`8"*Jn9+b8Y#
%7QTa\S;525o/3D9'^.[D!QDYnr!4Rd!)@[8HAH#d'rMPNqbZQ#ia^[tX<Bku37aI&lq8E``2ZjgW\e<<R6YG+c<WfsC]uT3_!/eS
%^p,F>$geW@(J9M9KtkAW,`WX-o1#NhK&M]*EBnI9TO^0uNZ'G4)fqb_=:]RFE:hYmDA#KR@04&6=%8Np[&-1fOO-nF?J'Z+nI*fu
%*4[\Q9)fo:ME<KoM1&$Vbt?+&.N[Le$);2@G!+C6\g2p-Ph!-N5f13uqA=/#Nb%)."tp&!)W]^m*0C\3oo2Ra5GI2C;sCDg4K]$c
%6Z>75#eFRTZX,#hK^?)l4l87P+E3cig:.G^A3_ge2ST620!k[FbI#IP8Ja\d3X]]<;F3j)[cUtamNm`g_M,eKc`Od\>=\a;p!qhl
%@KuMHnFIi=!erq,kFhD41h:g_1A7]G><iPCF0iu^9J94mStg^)p2Q](&b4nc&1=N*4gI4B7c$9eCogh4-<V8:1d[oI@p@IJ@QRcA
%0j/LE2iZ0,TuT+h7c916JS)K;+i]&TFVMBr/%H6uT?d9d2gV=81Y15F3sL)3P%_&-X\_a]4]?!Ek5R.sDH%&tgq<mZET!c+$+SMc
%l)W%0gE*?t7%`X"0gR7ToO?M11K\ZI,E.!&Y>9!$r"hBub[n.-@?N*2dh3bUZ"60Q[<X!DEQttUPe44@Ujj)/9i0Bq[4b1YQEMhZ
%pIXJ_fU+s]E.S@F`!%sC6@)2j=ZI<ZTas=j$%e9?@KeaTAPuRFp5V]/+,`6rEo?QBd1^ZPJ:bPWeQE(na-)n9H7HU5Uq\Xfib0tj
%bm#F'0qM$Mr.gu@="KRaoKM6*3<)H&%K^tql6N!R^g=.=!R.6lf'@,HRc]WW^nY7ig.e;MB[*Bu?A%3U&3r:7*>14=RE:rhFFFNm
%pA"d,c9su"]gULuXXsL)@>Wl3Rj*L3bHrDb*C=VaTFo!1'j"^Dk^a];&K&^#E3^!G8Glj="0UH=DGW!>_Kg^hOf&Uu3eY:Q0Z4t7
%pUaAU&L;IR_&4&+>encoUB^6tgDYkgN4V^eYMUD3&mU8LL>tSQj+)dC^2bh.NA!=r!rQC^=J$7-\7[*mNYcmY!a0ua@0+Mta<r+T
%1Q,hIqogQYBWq#T$]52p#]>nQR"1SC%\n4\qNOFDNTbm\F!E<7VlM"d`SEm?ML.2^(t4-=iT*H?%]IEM/:L+$1h_teDhmdm&'P=R
%`.D(F%?%MrT#,7ROMM^G,!qs22(Yg,k><*)Vg9LUfmZJE+`qI!RAhSADI;%o&FU24"5Bo4]_Y,tPQ&E)G-1X2g8Bk&LFcsHT!jY$
%/^JmX`'+3KSeoOM<:bcmP.G_L"R^EuoK9G<(M6R@j.sSFG&PAe-VOG]-l,G0'&4^]H0Sc9%eTiTd)1#k+=>%S_e$eB5[SS:p#p[o
%(>eNQom&BnP\MU;nljC;fD?1&H43'J.!$FOR[I[dkH`^ta.JhE:oX63Ff8(\*\`DtR$uB/*\/dY;J_OA+r\Iu_TT+n)`A>8d.j\7
%IDGMp"L!k0&dI#aIsuBh?f0$ALtS_(9pU*J>f`&5g8%YFh,ePcoZmYglT;c?k=5Np`1*jaK'Qp=0+Ro/"i%eS*Po3&2Db1nf=:6s
%2Hnf"VgojP-&0.W*h#G3eM^mZ6]Q^c\9tR;qpF,Y0@'ERC]/J1"!2`\4+/t1o<^&MX0:pA@G7W9$qZiO,H4)5jPu!8ICOcS4R74d
%!^<7FYKVF*`+Ph1a9HMIdub-pIsfD-btQi<IdL3?%gckm&_DMC\us:o?2MOAs%E(_:LDRX@JoW>IJtc^I_C7+$9t0@)oMMt-=u?=
%@`&(#.=X3tIkech=p)L+\%\6d5#6`:c]k%LeBa?Ha142Xm.XZ\<u=.sp7E.Sa-,sp6:r<Xdt71:;>P%pqGuJ^Ib"N5`Crf"'n3jJ
%r6/;C4ORkC_^ft)II,@BGiqS#dKA8b(56ZJ3>Si4$_<Z+P8<cpGFf$-I=4oRS8R%I,4itPTGU,pm%"enKA6'/ib7%XG,\B/GikUu
%*.5h)2*USD,"q.`9Q\OOcWo,0c$\1_N95=Nc*1coZ>L-T_;RDVa@g^%M&98C@te,HmX^`3^>G('EjX+JN07<qLQbiWST;[?[neFp
%b1pMk[He\$d6:?Z(6iYLH,]REe`t3siUC]/%)c^],.PY>W6-?l%L!SUhooU/oJBX8lhU9>iX3i"BtqlJ"^6,IbW`b]s(+jXdeDs;
%RO$;>EZbNU4!*)D9Xp9W3993_T?<=V0IT?jck7-<ON&WtM7*.ulu+Ib38`/fVu&95,6Tu<hrYhf4kksFIG!dg-NOQ!PNWU4pqHmV
%nRF*\k(ibZ151,2krWO`dDgWlcl9>0k;Xa":AK.CYk*'q[`HWo"U!6?[f1M9cp,5hpAn`5,fS5>C"OnR@<.EZl>1u_YdP+]"T&N!
%H6\2UpDE[%IZ9MD_u`E)EU!,tN#o?c'dniT_FWq]&?T'.W=`A;g'%0teLc??_IBKJJ_@u\_#G'3]9FjF437i8V.Lbk>M5r?j6fQJ
%G5IG+,/SN6#*HRC%d2;?JT,*[f=@1i@"kZ#UpSo7>DK>?%[A(rpK9mhY/B,EG!mDd2d;S!WsMY[[4]jl*C/b`"H[n9jk6A!RO-Ro
%e\#;<UeSsImRLu4MKIipM(#^k8d`G1%<>1RY7P,s%u.tJ>C+o"$BqTgVA(?8,tc%>>j3dR+'XYmPmKR!F/^rWHK]g=BEg\n/lO1K
%kTRQ@PcZkpfunD0G_>\V@``uE8'`Z0ZSoN%#sag%f9'p\dnl@kA'/Q`B"8qV^0-SZP'gJN_N2if^]doRg>r"Tp8,\ljGX*Ed(1Pp
%`l'Hf&bL9YnllN*onHS"itrF\6-mZYa.C.Q5n\4m9hr5%/Q`sA]*c=_EGa&K$E=./61'c=Yt,U+$+*-Z@S@I8F);cZ"36JCiQ.!#
%bM.;Jpm-T5!9IV&(<b*Z%1YD(=opmJ"Gmg"*,cr3Z9]:!KQaAXEq"W2iS!Yr^-;$6"g/=9m8'BITb@MsLF8gm!pD6qm"Kqiif]o&
%(]Z/%57\_C4o?k"&$X:\O7U<Q#hYO`(rg.u:etkX[!b8j5TNeWH@lJH@:SutL(^U3W;$K8O]igp+JfO%KaX_V@0'hH]n&n#Md#ia
%IbKLuD@)HJ[QRU,$R@NYm.O;?ogBK4">8l\&?mn[ot\(6b+'S7-t5IuOmj8&(.MB/E3Hu8Uu:fi.R<;\r_A\\fkNd.>EMX5lX+C_
%Fl]_`:sX1n%_13X[A6('_8h>qr0!(eYH>:5%Bp)oX_c+H@q,Tffn\T)TIh:dQuo^,M\kQlh+P97/pdFl[D!n7:4@pb0$Wc%'>kKF
%iq6,L77uD-%"Qc)XeS=V(V\C1)&'",1<BT.GS-o^X@,P5>dfLR/'RRbB\H%,6D[6p2+fd%-aSoJ[4:C*!+3TtbCM=Bj[ap_6s=Ko
%'XT2]Z6Y:hVB1b5D%?cJcrYKl-^j-@KLai<cC6e\ErbM;GXuj\Q7gjT!p(-B8c#DX.)L3Sg08l+B94ptPFr;hj+'uMCbPqj]!T6T
%dCYS:oI:=*#b\8l6WCIOko=I;WfBYG9\o+@geueh2r7TSeM'C$$tCu-.GJu;fB@?a6BPKnDmnipWicCN[QW;l<k?_!:I0lk@)1!;
%.O]u]-!%0C"qfZ:Of$J0M)!Cun@6c]K1$C(leBcc5E+<%g^oho1sK]Hg"LRMk7RgC/o^=n5lF:f^SsXC\*4kh2i30(OlcjqP:Xm]
%/.)@tQQQ`>U\EoX*'O/Sne!JS:A4<;_m$%"T<@=LjTB;mO^MpgdoP!YE5+)l/S$cVo^gDc/=[,3X915rT_kleVZ\XM@H2Y^Thn?Q
%U>pJW86I57."A;Ir@7u'(<j\<e?A*V0?J\CIT^KS;0b<30T>0om<ea),CAc16bnhN&\n1Rc0G\R2VIBa6PI5ghftb7*5*Knq]bEA
%b)_eUMpcpb>I!+Yg1Meaq4$s;$I\fdc*B3)h5e!_\=Il/]NnLSoAApPgp0og9S/lP%8fWPr[lS/F=uodj8!%cEp.FDF1:,c^HP+#
%h[4b0'5e,!3(aC@SX-'G9Z4Z&DB&9[(NC+hf[,?G0T+SNadhisJZ(^j4Fg;\j*<V_%OcP`8UneXIEnjgPF*Z)Gb&VBNUBE9oe;AF
%"9LlZ8UP)IV%pfLokJ^_dY3uJ?fm^b2r/Qn4U88Z89%DL(_ajf)&*1FQ$tdSC//tJ[Patt$*if,D=EHDWZXF].@La"X@J!el6Jo[
%')p!'JPSIlHJA+rr^I1cS9kp.Q"fonaqjOAi-TFnZbm:<Z>uWJ4+4[CBl[TX8oHc@Ybc2f>O7TQNQ%2ocQH;p"`i#I9.FK#XT74e
%>A[4\mmt*$7M:V/:)p?iE3GhJB/i#`Jj$\gn2iOSoq;1SUuJ+UD??kjaoU\6,A(QtSkA,g"Il6DfsAs^nniM!@T9pEjKc[betrja
%X$/NLkZX$LeL4<JG\rH)H_[t$5R)$hBX8nfH,tD\?7J*o_0C8;M(1]-3qn#m.%5#rS6sJa1t#<,X\E>YF_lMr[<mVad+c<B^Fd_`
%\T<VEXNK1!XMIYia)'.EBDn.kiK2j/LcRdnE=^u6Z\6's8Bl6!^:^bbHO.6Fg,k1ZK+XOQ<22C6[4aD?&osX40Z(>c/?j'P`m50K
%eHa0h9gR&/d'<ciK(fYOcp!a'?e41='[fBlk`CmlCQLWi>*ZRoMe[19m9@3CB*7[FH>60]KWc79*M)de!7YstJ)5t]LQi1d:Sf71
%p:<d,)m@8![XJs9`f)g++flIgTl9)XX[.&d'jR3N*Omr[)8W]bP[Qm$aP#=_RVKQ7(7F!^S@Sig"[[.#.0`L$E,I5,&?iIPpY_qO
%StS:%9=Ys%iK.b[Q,U/NZ^]HbBhl$*Di$Q>4(9HdKYe;QOe"*:&LHF$^mN1r,OD3O0.WgP""6KeDA/VI#GmtNQA'Kpe#EloVNJq8
%51e'V+BOIC#u9V"JsJgnoIc`4[tN5s#RL3sm;NVsqfj;52mH(.gE>='Nn.3dOY9>$0D6;4=\$8c!d)$LWUX!8"*FUq@,?03L]i:G
%=^diRIAk4s#HoTOfoFgAA:#[/Hi!U6C15fn3kPA^nYo-ZRBsh(iC>,83\4p*]5">CJOK`U%,!*XjT-?IQHG*;Lf+9\MH%3(:BBXe
%"GO"qP.gIi3&J2;;+7rUm=6-]rKu[*1$..m<C!Y9,H:,sD3%DRAYQZX+tSHR-th.B6e#X!=8hBFd\2J!=Z?("Or*_GZ!kQW5=.kp
%B*V2;'R>KuH5PP='(PZH/nJ]$*g9[m/UdOW^&2lJml3S%X2ciaN)#W,J@<8Cp`9M;Z2qOi_Ol&l_fg,*)&&eZg,`_9cuKiu5hefl
%3!"RQ7_9aHM0.>Mk7Q7jklDMj>1!n7'ZG/<dkO-D:`V(&jJmA*bAdFf7C^TSkAUD5eCnKTKAKFSOk!a86&'-fe`CsbNuU5+c!_3W
%-KbAt-CqU<f6W*c'[\A*^FS2ZUH?Q$KIdBg9(a'4W;S]Whl2V5ptu(A!m,qiXSBR.=F^6UkD'#_hcrcVfi`%hb*@2MNg4kgq7lq[
%C8'GTYQ(<0Q66.m^I^u%S@>bn\$;O60g/$S_hg(XHTU.0%92JD)Hj7ns8Q`%BB*BI0_tH%L?IIMmsf^Qs1>fZg:j>h1B7@I1].8Z
%GWF($R$016#aQPul$9FAMb7+5n].P?=P>#C4tghGP*oe:\)G1a`LF=o0?m*Yon7f<'0g/:8$/`8"?7I++Vu[5/\b1I21$6,#OWo.
%+'?!k1"G/:KVsgOos@BrggJOarG\)K=!u6?2`UlVDPPH;II.iu]4iSd;c/NeDWo8-8],BQ2YoM&)IgRVbq_W&es,5VP+)O%kr>-&
%aPJQ]i^-n"B4e9c!TEp_/3rA^hOm;>'6M=U#U/#%(VsBCR1q<bAZ)m]MaM%:)us\E@5,a@5-hBr)5m[rY8RLX&aL:nZge<%Pu>'S
%q]V?+a]j;Cphu'"Us$rr%mZ$,XN^c/i+L9Olf52E`.-$r!/^sN\jt=ZcNG_/*;*HrS1nZ.L/"raSKC:VmWbY,*MM4A?$'45^7=)L
%U4o8\-aC'FcbeEa_3]@,9%P.^^/eAQG7P>^*Bo%iT'9:Hmh"gP5^Pa,U/J1E5sdmLB$>b_`OtDSh^?7'3>r,$7I!#I>1ESth_^Bc
%ci>tPU$L],B"q*p;Hm!]?orD>KS7:$aD6ulcMTh.IN%6QZ6jMCDeRs7'E>+F7<FM`Hp+pPb+cb/_l%P0U)HQZ%^tNVP_ZS3Qi0fZ
%Sa)iJo1P754d-L^@)P%uX*VC5m+2WQK2EjnCT<58'r[5t&%mBsk6hHH3X+&E@Y1?>V*((2P==$]Kd5#B[Q4mXWpO5_KBVV#fMES^
%P-eOjYUM,Vrd-I/S6fZor0O78T\jNBh9hsNZKj8F?BSul,MjJ)\dV'SF45t9!\2F1]sT8e@K9_ojZ%IgOOr\efNU940.XAh+b\r$
%;ia2EMd?k"ZA3:GMi_c#:6Qm3S_m#Of5#O_5\NlTU#ZVULT'-E7^[L,&Qujd*ktJEq*1UUY78CANH+@%N`Zj9ZA7ChUZ>6-Wc-;$
%i.V"il0%PoD.4(MlnohJ*,no)i2'R,gC^^D2IAuN(Y<P:!2:</+Uaihc'Sd'<#d9J%%6+AU6(QJ%e)C$g;`9uP_e^%ci>e\i57kZ
%Ja`tr_Sg[(]`fd<]AN:CiS.4l-Kl$eVq,8J:UOlGGF@E\U+X:`/^[e&B[e23/`g(cB[jup?^0:q-q"\6?J_]&:#D\dp^5=!2-.1Q
%%G--simWU^L9k:t:(bWN_o@cr_B6*`K1+@'q433\\oI2`TF36B/FJ-V(Bf]VmA(]E(N>rBlC_"SKXph?:uHpJp[)9i.`&=9Ojp-'
%VJn!iA'>`*7@nX7P(PE#A1U'LG(Wuu,r^g:"-dl+GoJtchS[fQ;0_Mueg979Sp,7]f_]LE,tDN.$Ji7&]>a%ofGdEXN\6(%"G5=:
%&pi@@KbT=GaVBk.WN/KNiRNi9qVf[bJ0,59i8<V!Tt&+5PJ!&84a\:Qmh&9#;p>W0BlR!hb."U7KWpY)EVUC#&fURZ1Bb.m-Vs#;
%?`*<=]e+pGmakKW&6bE-i3SHnFPG^V)a<1+E1sub[QVTfJn*rTPC==i,A-f(Ko,p:8$qPcC=_+6%@8RRQ)BM=eL]-)5p*_rL*SX*
%6`Pf=0DQ13KZRc3GB%WU0V<R4!G#as*+_F%I$k[rM)>A%(;>GG6%(GA4)&+`[`"XhZZPc&0;mjS_S^apk*XaKfcnPEE?'"[-K?0p
%E!.D"c5tOL^f&L`e.Q&R6)2Y_HphnM("01#5p,9'LLVltQ$nD22LPngA+D#5D=ODBNZ7-9Hb410k3ZijiN80i`kJ8#7_EG84VuR$
%7uM:cM:g`[Nq[N(d\/'CTHZ-8"#Tih2V(DMqDsOZ+jDiOil#pa?kA37?9WB=I1d8n0O`[Z]%UG[@B&R\aP'4F*3t!UG!e@^LmR^0
%CoN^oJq:8HK%kLJ9"K]W\mI%cApt19Qn;48Q*<adYNI's@@V7G\W%;.5`djTs3ZXu2O;n4eb!.**EW,TZ(tSi-I@utjSb`,i5%7>
%e*(R$2s=2s,))C;s05d4b\SLQ2B08sB_t=mP"RihRHWQ?-9uE7dsCJ/>>/?Jl9f$=D/Q6@Y>TR+>R%YLq:sfGIgP@P5'KNQa3:P7
%F>`q.+c@[s^[L<:ktf<s-?WP/O6Bf4/XuJH&A"q`(,$i6iCjH"JsQ)8ZkTl.nGN3q=Oo"KEiA_Fg4W5Zo=5B9aEXKM]3<=J@^O'i
%LrN#eF<M%r6q0)$(+&pX&<puth+EcTSnfV"%S&L@kOUoS?p.,(cbYjN72iiu]i)S!I(em.Cst&n6Xq*AO0sZ*#WZoj(7SNNlMVt(
%B($1Ubb*5!_7<.?rc)81mbAOeGo4H)rk\/>Vt^'+300SV3PtFmj]nPMEfW`4>i,5=!%%sL!rc%qAse^HEp<gaU4``r+e!/f\DUIV
%?h%f!:lHr""9P7\YHSgEL.BB`U$L1F'Q4`NoOnUJZ*?e2mYKX!52^qkg4/kM\PrF'%5S#pUs1J!]VJ70Zn3!m><%<iO]hW,eGNo\
%H[_a*3G:P1qj$D#PI.h6eU%6-%7_i"N>aeg]@otX_e$M6OXkD\2RsE*ngf#M@P3uZ>#"'%7`hJr=(5;W7FRQg=W>3KQqC`g/I-0U
%n_)X)>n2W]Ku\rC+JZXkD$8nbgM)@]XiD%*(P9cWGT%ftG>\#!\_V!\MD0G=^7PVg>8]s5$oq9dj9+`7Gb=G7@@4NlbKE*iD_u>)
%mH@WW`hXYLSD4$:C=tLUMuAq:BqSs/qiE"RZbVn*4-p*B-+q-`E+3eQJp>I4$0OYAoM/ib\usEsHmcKD[FKFJ`+G</]\#mEpOiQ`
%;tZ`ji\$Z1hHJ`tI8(kl4Q"+un#g,=`X(]q=9j&(?e9fQ/qKOk>>:jH6.H^"]56Nia:7tMGVsYaTPI(I;<k,IiLo<"I_jM*44BS(
%/O$V,b_rl!<@UQWaVS+ba326NP_\Z++D'.V0J*K+XH;So9Q_a#e*l'^k/\sm!&i)/lccI+pRQ;.,FWnTkJX*u3'^O`Y:-<J"#P(I
%+5aBmbTHj[[f8d&LV2+@Aa3V5K209iO$H$ATaDYQC8=7"is9Cagl?h,"g6klgJ/H[*eBK0?A!^rkJrd9j-)Y)n3'0M2V<sr7JSI9
%"(3=Pg:#]bhdgi_-2-`<^3M4pJ#RHs%5o'*:%htL]GTXj)dc)M*P2SZfPM4r%0s#g*mDO"FU8iPbr0On5^(N?J6Q,U%adm1N66D,
%L@0CJUfqscl`<J$XJ0\lk(,D"bD_#c#"q6Y$C<U:@,WE=49Es5<OP2pU[Rf1KTb7%V:co=NVpa`XOC[Qe<YY-$,H%CE-.+'O2B0.
%6'+/rOC27jBnM*+_qHSJ951e6N8BR3,U&O$XA.7L9T'nnR,G:[P<.kP#J%FUO>Zeta<EN?L8P@%KH6k1U'sD0i6g!Fp5jXJjJn![
%=A@]',:T=.KP=AA(T:&Bq*#@P905C?,N+.%,[JR>Zu'CdbT,@*8p*5ncdQWQACF]l_'m`o&ugDV(d0D_^T>75p"D!6DB@!KAi_me
%q<QHo\b,jhn57)RGgsenmVpie_IYV6)#!cGrK@]4XiRtFd`:R\AJPjbjoGng"Z8@&E_S^%d4ZisJfaJm6OG;"fod<>#'AoBpkk=$
%p!+*M,#)nQW&^QMiXN:1lSgo-R1,Bg2H>`CcCu(%_uMf\PV7]umia6&>5!L1_]Gtd8.=YoS\$AO*j-=foScuj;/`l?[[:PcnpA*P
%aD!_q:m*"g`-T`'s.WRd8n2uZa.=r0d?B\9I1,&.oD=V8EY76ue3JopI!W^[aiJm6=^YpG+jiBa>gco^FZq?6E+`bP?-,1A[NdD-
%g5kF5KQ=25B0ChV.R#E)aQ`_,%C]eI8B^i"j?s%=d=CWd(Enqcn[/Pnj12V"0!".cfJe/8[LbXr/RP?&,bBu!m"Gjp$V!#!MSB?h
%[7JR)8*okpRHSE(--,8U<a&C,oBH*^Bqs(5b2qZ@l!2Mo.q_=S^`_(_\X7G;GarTkA1:2`-^Q0L.P3i$bNXQ0MS'j.<rsQredL3U
%Q6>Cknpse8gG2"ZC8.hEFd7b/&R_UjC.2J9W[0FNQtfpM]pu[m+e5@I8^qZ/l6cBs5l3s]EZmeVfC_1CDMT'=cgu;[:+.YAb]tgH
%.j.eJbTMZi3Uo'*jB"4_eAK][%431']o8C*K&=ff?OQ*:_BNZA`M_,s-Pi?Bnnr44K$JL\8Fm(uiLpq9<%DWHG1B)AfAIQc!6`iG
%cPHEK?C[?PcIC)AjdjHE_9Pu%3'G(rr>Y[(*7sO[<AU;+plOd,e<eFe>f`%%>-H)s7p'f"gfJV;,iJ)"&a:Kn^u=:ZD4CWube75D
%N].h+Es5%2b1!('8R1-aS-ZOkq$c.5\:G5^"I$Za`o>Ms31XCO&)Qgl6pdBBVt8=fi^@_bBg%&5N$3)'8RDpPE$e0aGUr\OY80ia
%m(6T[`%R@PSHPK*C%ct_@.`M+K3ZNfW:3G87mR@4+qO_+Yc;(-_kT4e"Y:E[@S\KX'SX<-7"<t%+c.sb-a)-s8YjNg`MZN"onB?k
%8il2lH!3=l,WsB>K^Na*mAQ2pX'=_^'9c,=&U?48"-P@>9aZ[t'"2N5octQ,rJJ;6'nP_k)BKPQiJge@"k[Q2N@WfrJ"aC,9k(IZ
%#9g-@h"(8Fl)uZW$dUP0UQmsoP-&EF&Pi:A)[kK8)RaD8\Bplb6E[%+5^;NsT;LW%J#uNHiHC$VYG(9e*8uLaP`W;&O(LOh1!lA+
%2K<VM%+GYG.GJ$))sK+;g2WX/Dt,YH[NGZ^"65tk!garRS?7$W(sXKmIO%-tHp-ONMk;p]"T[*tlg9fPWnTpB.Pe&#j+n6GEA6*(
%+Zt%?0X(oCLt3et/[3ePI5.f*f*?(!3lS9R*M3p::KarHlO[h##?+RBELQ%(M[dU$B*?C%I##(5'WZj;N_#kQ,F>a"]j=lZn%dYC
%3q$Pj-Q$XBOAN.b2R\up[K&RF-+B0sh\nPX!LZ&p<=01D5g<5lB?uN#E^)]:+$J[#`tleVbFirN*!aRTkoAE]ijr"GE!)T6gIiC6
%YRqbo?)@4!l`mbH)?<mmX8$]cWfND%2DM5f++8h9ojq6@a</@m:@*j<G(nCuJ$d+A]LJmi1sp_oY58>T6E%R!#f9e@aDto[Sr*$Y
%*h7DT.K1:,;AV7BKhA9J/J(r8S=kgFosa$qH#.!"RTO]l%7`O^^,Nom7[d@_%nu<Y,04[mcK;L.b^Rk8@4bfT'('s]Ldo'mYiUUN
%$iIlBQ7^f*\Z:0]#DXLcbR)!o'-lXkap`J'YP[<gOt+>$lNG&%BoW&b*pE"iBd.l%HOfL]XgX:)WFUa,dBTbd<FRmVMLQSgg_I=C
%Vd090&B.\,Q!<uG=7c2DiGub46JFuQ<C&-'^>T;0f5'+24$9#pi&b]&X/p+5$9"]eR!--oKkqb;,o"qL)IWr"FdY7IfTAuHEd(bL
%H$FL4rfS?f\jI`f5(>4>l"(i%%ZHE"#m9f^nKVbp.^jdDGR`oAS!<iYc&dq<T:+P.VP00WS<@aORm*OqHnm6DBU=:$#muE#Q_N89
%N#oYL8m@2Vr534Zl[=O]_.o1WI]t42h#qF!:(%L2a\K)/dE?ot'(@,,H$FCTVY1jsb5f&`f&ORXV/oQ4g+g@l89R=?;_iL;OPBE6
%N=otR?<TkSHR%h4F"q)/XA0EYm_R1>G$nb#Q_`EACQorUA8WUQd_"+n7Ef4E2/R4!+&"1=s3l)W2@gR+)*&qN@,P^!YON#_l#Cr/
%j?O"V*laqC4L6iZ3#Y(<*Ylq(RT9b?LjQ6K,1]!AqEEsChbo2Q:@CsKA_->%4M[l=i0X8WY>7nhM(SUAjsWq0?s;o=^sn+735j".
%+JVcOMaA2p/6b5nh8];NNh?1.M[\W);Qm8J?ND1<9h_erI1-P!VLb6I#au?7"(>.X=^6r2]]YEk6/HY(#$<P6,h8^E.l?KDbqtRi
%Y?fC?>F#EZ<3q3i21A[SgR!Y<[Ga#E-*U!WPe;h3((6Z5I%"V/auiO@%)'t"2@of9h02h#>*P0(-4Z%?`P,tl:m<i/Vnr&I3/`^[
%gR?'gbLhtR\-0TC@Zj"=!A7N]?0HAE@XYT6C@e<e\]`(JD<o$fCD*:/KsqOBXIC5)H1.O]([L7R$r0Z&?8`ZsQ%7bo5nf<fW%kcL
%8G%j<j^L5VHJVjmR+70\Z48N6`+sgl5*ISlZka"Zfb3r"YhOIPS-m\@T(JPOiA4!@8n<*BMEF3KTL+QZ>i8a9m%C#Qj,/VCWFc8E
%n0faOSA.FgdtZO%d0;./aL+k>"+<mAOQ7V(YoS%h9<CiiM7/NmYUE_c0.cf'!SWQ=X5JoDJPBqkmRGC^6S'8S/6_]T[P,gB,Hf*h
%h4)gfjQ6Mn%kk.-EaNa<`%gSIUCe^QXAGKNCW]r<g5u=P"F1.!8smU\#0\cq#$rD^/'lY")j93I[_-3I#We<7';4'7\g9KAWoF,)
%.>WLoE8EYGDgN2R7=b0]ag/P!'3J^">Be*)Z6)A^iZl3s4^gP+Tm!h<n+4r`<r7$1LRhq4(=XH.>aB-)'a9tt*^&KOrO+\]-JSB<
%ZQ:B0((GVPr"Wl;'`sd/A-V\Q7q/W3V]L1Qa=l0tkhLJd#\@4(_DFRoTI2onR%D[i7uer4.B5r-`>@3[Hb0Wph#d`,cSl\Qs4'[P
%:.m>Se)GhpHj&F&B#%"E<uT=TC'e!![rlDW$VmA`2L<8chr.feo1MuP%O[KB?9t<+5.>f3^YQ/hQ<*5-[Yd=QG/M:XZt1)mC*RjU
%"0$&deM7n!b6(>`[&oD\'n+[.PZ.^Z))#[m)=1<j#"L$O3U(kLK5#;6Xh<=n@R<*04No^IS'R:$e:n#U`Ah0rJq?3D5[.DoE1k^s
%3-$iK-?.3!np+_*rAuS<L:h&Hi<_Xh]CKlu&Ns]L[R+[aoPZ.F"4gg'4T]-@#VSoAf3':bY/._A8\D:C07]n$F$Dc(1i`%;%U/tl
%&nNn(W2%ubi)D]5rk2'gJs9U8P,TM$N"5&iTPt_X'f-`,*Vf&Rf!lrb%3R4W.<m"CRfuZb<M2(F2Ar_]T+@n6[N0W_AQ7"!^iNWF
%73FsXqYKlAW*%'$^:g10Mt6MJR40CnD(!%t$U(d8H>bg>oGY)W5!hkWX)&4<fg6,cU>dhHIA,:Z\Ulioq@f)"6:#&S&I,MpgF"0j
%M?K6iCd*B?5CcM_2ALmuQ1;gbO/=0M0S\@=lXdnD>YCZqUf^tQaU03[)X[QUX4n^3fm@2Cb>c?0%uVoDE3l]g2[VEU*ptW368c'M
%osPH)KpiL9DcZ,a=FMBLCEV;C!ASK)O/ka[X+*GJH5arU*4cP@B*G<.pp00?69#![e"M])D^>_2TWtK&%^UniqJ,$?`Bd:4$">-`
%qd+e5hGqDA=dU/u).4GdAV#/YScf6$65Q,A$*cPl"]!HgOXhNekF[7pYqP#15Okr7Nq=E28(EccG[?YHcrF,DBct`m>F`IZ`3+.$
%2,)GiFmmW<+eNGoSp?p?XlqF'..q8<,3eXc3(s:14Z"und(_18rNjnc2@gX8-M+#a-qekU=M*X$'X%Z(EPX=\CF[:=\*G*0*T#V@
%E;Vcc=j9=5@(M'A,!4+#'iX).?HPR#/>RNT1i+DCJs;t[i9FGkT6cc1$F!;NZVC[0^I?\tQA:S]+#mc@0#iL)ZlDgU,Zt,G_r=,?
%rQfk1Y$=rYFq6ae+TEdLTl\!db&B7Z2MlElnUR_VYu.6_fM,tD^4b"bXe59\H`c=baCq[C%l1JLA53JH^!mbO78/HT-\SrU09iD;
%Nm:7I3*/l$I-!RXr^+'[WT&+4FQ<i#7[Ir<fPBsaBe8==k_WY_"J\PF4;"CrW?ne$TFPQqgL+>A4R2-5'r3`c9T5Nk]TPG[j,$\M
%WGq_c^0t4^odgtXL2F&tT19T%`lq(1*NVP!.D9CN2uF9IldSN^`c^G4X6L#S,!u_9oX]X0aL1\;Er-+,5)SPh!!8`nd(B48$r_&5
%$Wk!b&3"LV5js-c/>pYm@Ekt(8KYfplKMArR+jU#SO-H(7J?-C%bd+gp_$at01="N0d421gBidtT;rsbS<&D"<_oNEpd.)M+&UDf
%pEcX;(?rq;M&J]i1"fg;-ukFL]BkTE"f7]-SYU.6h^^Ac^BZ=`\8FU"*?N-2>63$2"+hdpBu2rU$S`JV'kuZ5HYcM36ga3W5ZO_=
%\Rc]-$c+3JhD(0+ADFt<oG.[DX1TQtpbmbHg5L#>KXI"m3#<f>7Dn'nYo>A,bOhCJIM59S2I=Kh^Aqpb[*!@>4<D_O!jL*u[Lqqt
%rSlhq/VVM<U.Ht:EF*%X2ROH8gOt?sc/bDj%W[fXo.2;:n6:]&[[m,rLS>!Mfo.O4l+9`3&Vu6r@<gEIP9cc(Q!e*`e<aT]L\F*o
%#98ANo9,E\RiKh&[i4k-@$-Pm*LeNfVIn>#gk0qMG@lbd"E@k*=UEID:g[S]%QoTtik36$PtX.k79pR?Y;JRC'N!+)<1tADYC[C#
%?1Nqn!-N?>[^>b\.Wj0ZA;&0q&p+0-i]EQ_SVQ8K(Br1a+Be?gaFc>5=C8K:frM)#Wd'TGWgZ+#+nZVkJaobi+;-0YC_REh/juM5
%A[eK?>40VAKJa_B(0b<MZ%$;\)nhm+[hPM[De-KJR,`rlH%^@W+j5^9Kk1Xt+4i"J7eG1<AbDmZ3J8Y%A-uJ<A(D:gRro1CVu>&1
%U5J1Ect8\S@p$p]mW6!_[U\aq*AUcWbI5a;^pIhXO@E^8>t2%5iXdPk>%H:Dn(]ZYGu"=#!`0`I/sA1@KWuYYnaU&rm*li^c/6!>
%%SpN0[&QGs%1G@NB*tPHXJT9lr/!j8Gik"b56ctpYiWJjqZ('$.43rr`]R2[OdUBt@nEgC'$Y4[7ldJ;PN:7NeY3'SO2mb+CQ;Q#
%ZpZJt(8;>/4Y9@DHS-H8AlK3#kJ:$`iNib:nCnBQXYSX`6Xb]S,^<7/:,HL.=D3&L0Zr-P6KCo+6NI1s8YWG^Uc!830,iq5A*Lg%
%[02e3ac%."KQ?_*PqkA.$nSS$,%9SlES^7q%.YC-C&.QE_Y;=+LB[GAH6CgOf0c<>?>Q%#cPB;4H0t#Y!0CbSjS>*lU7eReI[QdO
%e<6$pP0i]`fpGL2o#8N;)#MKIJ'l@*hYlAJ?k$4Q^)_.\rU4[i#GH\<q-Eo6NmQ2q0A5O?qWkWjdl6jn1]$ZXqs'sSpu-[AT3i&J
%k99^u8+qB3T-)LJcgpZPs86&Jq=]2^af](OoDAC]c`d#jnhr:/RsjfMIJLR)qCFjZ\R0jDT;R7d;oO5IUYHO/Voe2H3UD['maH:Q
%C"E4XkK3DmhZ*2^82A)Eg:7)RGslK\BAD9n/>D2@lHFGd;j:i=4keUFO`b:bAnn*`^Z/($fUhmM[6le#c(%PD@dukf%d;)5>VQ3+
%kVFOb&i;NoC2iRNCA"K;qPG\#*VY`)glS7h9LpnU@YSQ'il[RkP]4CAoQ<e`Yaj:?$c$UJRl,Iu\HHRde;k2,0/3R]aEA`om<fY2
%^Dm*%!a84ur0IE;dghh4^@11#pCI(QJ-bJc@6-[Q8o(0\&FcB,8&04?+>M.dm"@rP185e_2^/2l(Y==7f5?)W!hDut=rEbkh_n!k
%'<OCO,p]t<d[(QCOdtS-7YmaCeYf]F/]).YL5a"aMPsX2`ZAD*[Y)dFNZ'#Fb8K'U7M6(t;QkTQqN&Ap>WU;YUsipn!G_kFA8=g1
%4[Eb@i\./m6n)&S,55dPkdh<@%[n[F>*t.2MArR:0R)qO4t-@A_@VYH<G8p+lP/_01ERK?;p&Ga&UG=`,m0W[%f6j\hj(XUZUY16
%EY<5]0P.+td$i%4";41hH7JnePlA(Hb>^JXdqXC:c4?`Z(0I(>3Q4I"N(SWmbr;:W<<1_Vb-psQ\H$2:DtGq)KeWYUS[aET2'ek/
%Ft!:bgB66E;8ou2.b4XC7>28HIqanH(s#3M7t/4#hs*Hmb9.bdDYZm=a:US*0D34Ci\D,)n_:@*=$ZV4leBq6=;,#S6;[k$-3r\;
%&YKN#=mP^$Oo7NbPgkVsb[PO7WmY9o`1R<:LT1J+Tlm^Keq#Y"L_OZ.f'h9ni+l0pHOkdkUcf(,e8<'r^]AGji^>T^q?g'H6F"M6
%#%3Tnp&L<-A9g2;7nUhNS/C'-1rFj*,E$1R5"Ch'(DKnE$50UIK?dQ&>(L,c?%cPdTI\EHMn3Jn3MMgWgap;<%oSE^%:q5($3I82
%,H&D!6lCW2@#(^9G(cC]p^o<38OsbRd%[O+RASQ1K:u!B<g?8c^?$T+WkcepM3lsaI@BAXR`TF]pVc+nd$*H<+HD+r?rQ<_;3UHW
%GsMCJ/'fn_G=ZoD!=gB7on;Fn'Yn]i;P73;_,Gq0&7oQb')00QOI+m""2)-[e#`]4=@X3>H3#**JGq]:.aXO&==7ji-9.I@Q3f1F
%JW<^n/qB#a\\\JU>Y?Q$#Qq2\77RW(L_NRrA4t:9OA_Nh=:%GI'-j3HFOt9J;]o&k7&]No%>\I^]WC8)3t8U)]_W!C.q`m1==7Eu
%9WH\`=50JdfLr^T\3/d/Sl%4q7u%Hq=0#0S<+PP4'&.3*Dd[o0)YuL^Pc8VQ)IDX_!&_E*U@<,X-oaA``mXQe:h)O.J\k;X3-5-#
%1%3"`2e<*?23>7$dg=_jQ5]q>*b!R3r0>:<nm1=3f[^%&Rm8SQlNG60]r%hl.SZ<5_7K@5\?5eZA@?+<]+K$j?0!a8K1Y$055&K9
%S@>d^=p[d3)_p_!@V`K=?'H,\,`RkHb/^fTNk.qQ:YB,r)uXO&+-30O[n@?UT=4.=Fi;h<rPFb"C+$A.<qp;0:l\R>`QE?0HF4i&
%O2eVQau0N1%sUP'r&2@`a>$9_R02K:%A88M<-!Ok$<1Q\;'B\$TBQ5*"R/m\C0S=(,Z_44gAr'p8C2raLb=\V:V!RBPMq#>?1IN)
%s3l>pK`h=RBqsC^?>fqVf:@%"(*>Qsljnq/+h#[t6'mF^.f/,UOY,!bBlXT^J[-W8+&*=rebIZ^.T40;>=uVX^=oC@Q>FQKQ5;C8
%@8:JfNVFRXN7q2P_C/oL]T2uI<b;@FH&q.q=Yi)^QVR'E2O6K-QpLZU?G>ifF@:W]".WW!;C*VY7*^![oIUQ9k!'q"96hD!BlG.#
%T:Mgp!kKp8qb^-?p4U'n*SV?_"r&Cm0$(]gXAlbBcP!"H-j<C.!55XHT.ej![V*!m7WgRm!4,FI?3NZ<!,46e2J?>Feo)3:Ol]kM
%fOqnlaKY*hj]ljM074b,KRKLF5/if%^B%6oSVSOe]KsT!,FaYWj0+tBWoPa.=X_c=s'FrC7cp$IaYJ:K"d'EI*7i,R'nGg;p_;-U
%MWg2n.bYUl>*&D60'bUTs0te3^oPBi>(ml#4A#7ia(O:%$^/:"d@'JKj.*lLj8='"G(kDc$\<p)?!ICQJ'%h:o-I<p<.*&r1cF&,
%CbX`>W;?oW`\69U^AOSS5YW(`d[o(;U:$CHIg@A$3^PRdc*Dm7S1!gl+m*5',ET9BW2TY\<sGY1%gK3q*X4-A8IjI?jaPo2qIZjC
%O(I7gP&1"*S1O4Z^?kY8&ikf"al!543+q/j6X)7KUe!`[rMHKLa>?8pgISgi>O>9G"9^'-E1nkhLVAEM+[<_f)ntnNfh&b-o^^Kp
%nBn2:8h,R@&!A&5'6Td&!P<<6W\:&[N-Z479"!rpTKogFhQ($dD!0dr!93d!e9$],YN-YSr]kdraU,O3E=_>?eLYf20o_38qe-!'
%"N%e;;+%B-4*qjH2pN>q,19KugL(6>jhL>20/4/0HIuU-C3p//X)]m@N+G90UY&V.-jhRIc*A`-;<DCkb<CiEpooYHUp(@%Sk^"/
%3e>QATJK%L,1cFD9rEUZ^:='2*!!^pGQl#f6t_'I%81`lSAl1XV:52pO[NRtG:=5j:n*+IYPtW1iKD<X8Ef;G(eMS=H!U<Xp2oBj
%jt0&.(mpLp"*tMOeqJC0"W`u9fIJ9T'$+IYdoGTZa">Eelq^XM[Ob>b2Jb\c<l'OcE6udraVOeI6+k@AK^SWD9o&k!8M(;7X6j[U
%\K%XB3^B";5/50*at7PRG6$"<:^7cj5RrB>&&KQA/pn78%8QAK094pK=s2`4e%c[.#Oe-cAqCXVW^Z.-/:NqTWYc08#2*ihJ7ieg
%56Su@=rJeW&.oI>(\%ZZ-?_A0Oc^P<mM/>[`d?Zo<\6$`1tlml&!JPR0N_u4p>q<)JBCqn(tV#tKRt>QQ*:AAkt877P&D+.0KS!"
%oct"]6,GJYPm,<p4eX;!C1&TdPi_!/e?T_bog$8_;gcJiFssX0rW5J+U%]VQ>XE/K`UuLM<4j/J/4ZS=aM.#FA`@fJJH1:0oj!.=
%$','86$@q=a5b8>2N\*rH*@mrThsJ*Z:bY3/n07od!X9T:"U^cK.nm=F==]QB1lkBE4T8nF0#J\JI-`t\l"/f2>m2HP78Fh;mT@r
%I6e;\BY4+\"A.sc0DTKQlu4g5k]'t5Ncc;7-YcmV5PEtj7>4Gm*k!]!V[B1l<mbI)H''B<;*6n1dFh;"J,BM-XL^f3br8Rn,Pi$R
%]2S&+MmHHoCD'L(]4tuZW"2b;P'$1KG7^YdZ34Zqr55/^EXEPj?A8@ik=?"ANlXL/(:42o*dG%$.5j]!\U76<X6ZRO%-U.\:J08_
%;mWOI8g@#H$Z0Q)mj>=MZT0MIJAuIKNmq24;kYF2hDttsZ]fZ7hcD.=2\gRfPJ.Ae_/%jrdOgb0VDLQsqs4`c5<h3%!-jdI.#bm9
%D*MXA:oFLFikq9&W0'4\/YF'O92"./^=j[:f]^`_lnoJjjg@\tk>DZGL%?C-]%j2]alC;\l%T@>A;uNs27m%_63.'.20cAr-u>$K
%\)1AZhcupn4H:>%1s]j?,>%i+nKO?*[8j(DpTAp'44>R,)82K5bWs<%i=JgD]YQI$8*/>)Y]4+6/2&b7rhU@`Co]bLgM2?4!^q5)
%QCn[l=qn")*Y_0\I!GC?`:_O`hM7lP<3Y7BYPTBP4iNlO'#G,KJtn\u,^Rti,J#/VRt\DnL=36ee/F+k3@rM*DQ5bY>(0c7B"LM/
%n[JsQb3XYhD\o#DCn8+ljg!V]]Z8F^.*pBAc4s,;iI-"&^"0Z>\4q7TZ0Pu77cc\b4a*G=ma(@<&e"pM_e5&L5CQm&-8X^o\UW*>
%5KJ;QbPCILgi'^UJW9I&UAX]X`#^SqkP+BT0Ba3jne^cl(M!4$+Fj&4rl$\*+7?$ci9N>`X&l<3EqNeQTV#TP04+B;Hl&EiT.`F7
%s7C)SI^Yk4mOr1'ru)$UkGj\uKn@-bgZ"+m'R&/664,&ciJ6uXesd^,$;tuV/+F+$U=SP6?^Eo:oZJ.!\M&hCs"ZR:,3iqh>m1<V
%WJd.]?anudd9^%,Qb9SS7A59\ni$?-4M0JE:^DMcK`BOds4.:%*V5brYQ)Mo0rIf:BA/s1ZR2:n@Zm-9gEZH4]Vi+29AT46?X*('
%+Zm%'l_c5LgCI_!/QVK@H_^5+n45mo)h!N=aq@_c8Zs$^2S1uY1Mk)NBj2+@n;H:M9a3Lj)@GrGn0fQ9Vqt@4kR&[EB8&!q7Aco+
%*BB6]=h9re%B<;N<:<k/!iQP5Tc'8"#oj)EQMK+kO)72N>K<gWCFs=*AT/%+2GMSk@pQS0DCHiK-'I+EZ,J:WW-XS_5`O/<qZ^&I
%(dR.oDHYRgDQ0(u[M*mLhX>h<.+X'$,V/!hBN)"QP+iOT+!R7[U(4>j6qg[,j@?HI>n&7P(YV-DVLV:l;*Wnqm$!%]5+Kkq>!ugg
%5(8@f<7dQo4,M2WGE\6/IfApO'ML0Yq=JoU3S$-UM47>")IJ>_"u*Mh3P*`r(s7"c8G_[@_c2sWaTdGBa:K7(d*[G7_*<0-GiZ$#
%TPial"uJs#3VAX?:s>&i5UXFAUNu[BW:`E<(#.%DMKmUtMHQ.?MlCgUeOtVfR7nEi!0PdL7@f:OcG,"7>(D:$-WWtl6fg=A1q,MR
%$</i$OC^5hFSOQU6aP(0*Q7S:7QS,uRd+rukV?T=keN+SUAPjR(h@:Va@fhk@KtiaLt4/(oaLqPEYRJVqkSh@jg.aM*rY3:f`r+N
%%;.tc.q0iVFIuq(DgVch(0e=gMB8ntn_*8B2"c9G2D$X1,8?*RQiJCT/`(T]%J*]j^V7ORnZ)(f3+\f.aSbF_#AQcK#TFog/dRI^
%`D'!i^>T8.joFZ(`*U6u(PGQu_75Y&G3[`*f:)\:o?%nB3\<'tg=?_@jlBiSVm%Tj>H3rJ"4LMo]\I[Keu:^A;+R2$8T-AS6&DDW
%7*PRVf(@./k1Wo]GWS/sp5Fr?.5@4p+G.SOoqn0gXA+Vr&l^eKZ$!3RP\bj1H3PPGO'LsXbe,EhGN%`HVju(]QDNGsNDIOq.H"I=
%UKX'"g*C%;*,nR7bmVeP>J`LQ),]f(N#URH/-fH-"Brp9Y7h?_VX#q4ZC>F,4h!Kp@>VOna\Y#4;9hbQ%PB)rAbH*iX)#>%9>[:A
%bSo7N2>#-V>0-%!%EBn@!Y/fs#t+V5BmNQdR23G+>jf>HChg:Wpd@c>R!EU%O\C^>e734Bp6$`l>('*snr>sF>3*B2KUD:$V))aU
%`@8Xl"s[L^Lj$f2\*4/sloV<pg2k/W\DG\]\^*o<[$7$g1r.rMrn^A_V@fCHbR^f\LXqXL&Wg,X$k9LVUGl,H^%W7-Bd=$?eQ"'f
%q=32<R30ZGN?c"L8lXD9J3:ddJ=S]34>44mJgkdG6tpYFdE6#e'jMo4bN;tD3Speo!>eb'B8\<8kj`(BjPV9Ik0Vq]k8:s:mg\;r
%D$2$\j1HWbl\&#=(F[SBb-3hn6L?PE'VB!Ymo5^!4&Uji;E;^+E;Jm]krhRmj4h/Iq^:^iB`DZCrN=dU[Y)Yps+^u3^R-\Jqc4^/
%BbC9UP0J\USk`s#m@$H#AL'e)gJ6WdD&%g`Kpt[?_7E)^h%%/`218<)99@O@,C"5&-oA75/h()b7jG07+`N_(Wi^=0$ddca'a5s>
%0*q#`PGb[h+kGfB,2!P]A[e(Z->IVM]Y-$e./7ncf:1Z?N13\b52Z8i5)+--D,4(X3SiHMMbEBL@3"]a][qFkVH>/Jot!DMDbFKr
%k&&IcZ@tq*mrsR[9#0C*(Q`GK[I2FpVPs1N-j0/b'/U*oTfi&OTAS9+ISG["+Q=&Z8!VH*8SYsa8a<fnlW9kpqW)1Q+bd8j6(^s7
%:;2k2"\ZNh=d;>$"fT0KS%OIckgT/@j4c'J88L6rf;NAn!+)RO^)+C*I1feAdl/VJq/m3d(SSdWMl6q]#mM'D91;Uc/5=H=C+=<l
%h%J2CI)>'EZNN\dA[FFqi:qRDXq!MP\>tar(M[*XJJacO8EY-.=sg/s4E2?q45_P"aMg:c3FHY,YOh8.]hR0E*W$mT;.BWt-TMm.
%`N'hU^aCNFj!n5_7tOAtJ*,XV2ZH"M\'u"*`b]R]R&S#(7DI%=1T;kcU9O/%PE4AiA'5IVO8Y'2,]gF:\<tLqY$87o1`"feEO=,B
%!Dl;$4ZJJAAM=:V*(T`ma`.I*QuMPQjQMRG#C_po0"hO\MKm#:-?(F@]mh8GRTfq3ruRZ[_""";`;TotdQH8S!i8[<94)]oI3NKR
%0KSlU&'6Z<di1;HD"WoTl:[GB0?C(U'3>'E]N-ugeL,gI03PYGPAP^pjSD:!oj@<i9^KZ(J%MoqDq#*U]?Z+@HQ'WmjW:/<cPO?;
%1RhOQ'&^mH0IeDYI8U6$%[PO^#=F29Tn.k+9m<7N#mY@tY5=I4PKg80NGF6tPhGkX[Nu)EUfT)2MH?),U2PE,ds-n`e8lCm5mW!P
%F7rZTpkUBs1@.XJo'$<K/[Doi78$t<gkQ3Om<3k>(qg:-8&7/.3Y,e?Do\?(5)Lg-*'m5J43kVpRd1YAUj@>n$WuMQ"IX5-`68SY
%<=7H`#t7(\?rrX:_a#s<#Z)g8?tI8b8'pp;"d3H^7^^0t>&tKASk@*IDRENB00s3*Jkg=@l\4&uTRcB",\qZ*:#;1q3O[c[Ss,7r
%qUc3/I_%0`8>!f7roea57`qe)Kchl0A-YI`:9q:mS(kFFmn%m,j9p2=3AN%^<DbqUe_uds_(g3oTQEfoq.cm^Z2NU/mZ,*3o)=An
%j+AX(WHK9q_dE?(p%NZe<8!b;dT5kGcd*-Bpm/7g.]?oKb4N%[s-;_%A1p9C:WCh\D+hT4CpFRc],2G@X4f;36d$sJ,VB%7D/[lJ
%3Kn%=m2N#(&=Wm"72BQ+qr1K\Zj&<W?j>%eUfn(Y<2$,(7/*@cd1-'OiH*:%P4$Vo2mRs=FS-S3h<C`_546J%k<.Ydh6XdYs5VR#
%J#u;e40AVcW-G!X%#aU!ggPsZm<a5%PP9u\7>FjN^+%Ab+8Xq4@XNXCf;JTff_5+$2!pbQTU.$1cf;NNB@j@_JL$Wm\eh,#C"hW;
%J0J)VRimMQCdn/*F_K8CWm%h[<.h_#'0-)[b*n]u!;HhhMf!,>8!Z3O6h!$q6_P%eAI;Ge#'cp@2M?KX[1`/a,d$]=JmC8+S(3:f
%C+rZ5AA.:`$S;0uZ-O@\>Nam>)Pq>V<dgNl;AF]g3ikb2kS.VtEluA/"X_XSg.SALaDmN!PH0q.7HJ$MEY+H6\l%"@5NYpa=qV70
%PE8ZV[YQ#bQ2>!?Y-1C2<>N#T*^kMEDp$ak\L6C.Zq,R='jSQR8a>h'+uO>&*4$9G=5)+iSY;"PN?0M\M0m)YC.2Gp>GV>2^HQa+
%7CFh>:]XSl/jN@oq'7?qBfRMQ@$:V8Hrn6]*'$p%0UdJ^Ip&6XI9"6V`(#B[i'-WPAOP!XSN/1$;X<))=@QT!c,>^2MDG*g[l.U]
%OcIGY!o9lDW9])DN6U"Y"Z5TnV<Vb5P`j_Bg(k$XPkVY0$";?rlqO4n>5&9g+cscm?-t%;"PK+m>-b^Z.b*uC<n,]4al`@8"0L@B
%9KEsaAnE'BC06s]bkE'=@dam-%>e4;32:<;X[`?7.#A.nOO-rIAIZ$oqJ6R(",,<(Z`\(a5$0=+P.2KbVPcXPqfc<ocW@0/N6)6s
%Cj88^,Yj&b'k41F.=JJu.;m-lE$iSR4RlF/UajcR1LIT2>;j.rLS8ldQ$:TF0M;cmRY9#++KCAV4I`HH9GV>C@:_a:L`@p^-+44#
%FGmBPX=O/\bcAIbl&_7Q?AgaBc'Prk;Bak5Gh_o-KVD:'i5:<f/u!)u,MX?N1'G*:iTRP+_b6)UC7@^(F>_PVQ-;0en%qTaL=cQR
%.1BIQd^1m=;WU4Tq]$aEZKRF7OJYAbIR0192gA!_r62^1:fT%>O_@+Vi=K]k@1DrI\Y*Mce3FdNq/4kDF-!QMN=p,J"d56#\Au6T
%#l]fTCSfIZfdLBqP<4c`=qF[&C(Vi#/Tu/JM&dqIU4UHgEJ%[LG)s@/;0ra'i^&o9f1>]k\n^+G$RPd<@JH-N+d5YS-#5^J`a5<2
%70/d0a=rbSQlhU_,rW1&gG[`nPMUEikA`<';T^#3DGp=2=O"BccUIukq4L%rmLPObh4!nt`Sa5?J@5o6o>0Jtid,XsMmZhD\>J2@
%?t;USS%Vuk"(Vaeb&qK=]t,E5Q$KLO^sd>fkR;rD.uqpE(+(V"h)UOs*\q@,P32?!DT2+plb6eiX;\'Ag\gp@U\j2?h]=E'@UlqG
%G^#D<>8Kf+/d`?=#Z`RaJr;nOXBaqP6Xa<18Od=b0r]7J`qbN"?O]3_8U0fY7($L1f__Go$eN.sRO:i.UoS."YY=?B89p-]OCU@o
%GR0TXidC[&E<Xre(+Mtr^E/SEPRbM\.@j114ONte,j:[5EE5P-7ouRV,B6^X8ZWVIb!<`"e0&YGC7'70lIBKbU1Er*oc/*BKTu4P
%UE8':[@4)(,KQ6l,;sJCP\bXGg=d`8#jE/Pk,n\F"05p[bL0/*%pn%WYQYGgI,q";Mq.^M<!%[L:!P*5\JgDt4EnW!=(ni.(;Ej,
%XB)#!iWZl+N#[A.]@rutVfK(["plg][32oER\1O#-`&3Xi)rH0\C?h'l8?!f;%7Vs]A#PG2*)ij9-^HtT]Yn50*XoLhd=7$<?-LL
%2A<LUKOJ4^,N<18g@ujo&-PrPIu[`HKZbM=*S_>aMEI!N-3YN#5J!g2TudR5c5,r7TS'a/l*k?U-+tU_3u4A2p73I:L-c_b,AWg(
%05'?p0/"^;b?919,2]!IG:3<,3s2D8E9CN^3[49#b(J"Q^<Lb:qI`"=NO*`e;Vh1UY<L[",BrVHh7/2`%cjaiH/k(E33MusmZT.p
%eF`)]n)(Nch>5*s-Gq$B0:ealO2H>W;bH;@KMN>^cM!VdnoJ&68&@)s,7Y[GXnZ'FTu^7PD09BipA:LMXb^Hq)L:RKJ%'RXQir#7
%<N]G(4"nVC%aPoq[-@hb?>?;%Z6k7)#0UIJ04q9gQ+iXmJ9COrTYI]I]Ll7ea*H(AGZDPh'?YRMe%!f\\5VO7OmdNpq"UmV+K&Pe
%X/<t/o#RjqafC0<Xjd[$j(@s,&Di)*#p`!$oA^[UC&-^bc:?PiT:3V=i*"S#-O0:7+7F<I84Sb?f+G433H;$KL#$!h'ho6F?G/fU
%-UsZuQ.Gl`+%u0m%_)#5>fZIncCq/-<E,9C[r^?hI#%P>]s;C*-4_X'_.&:8hYiQ0O^M1YVbrkA[=FqRqGI]Fo>eM*Mj+^[H[V0_
%5UCSTa&%W@Q?",C!\.'ib)(NDLC4uU6g6#9N?=[@Y-4)sjV8<2(pEbNlI^]@9UQ.u5Kff9ol6FSW#ki8HDaqW2I$KLLcPG;jB3Ki
%.&O8FII4=O1NYF<;cEK"#=]3=7[ce::Kt\=Kj\AI1hF4bRNs++*U1nnEjJ='BY;HO2=[/%G;sV-Hp)Zc:cBc_;i=".Jah$pqC/@A
%kg/gUrk-('hL\=;:oCMDe9_Je%G(1V&c2lV[O^:coX4`YhfSsGbU@KHq40ckQ_@RtT<W7>gR&pi;;_2=k_V`)M8X]JMI<5YVL/bO
%I5f0^+ebna,XQBU6NPEV8r#r2SjV5ukka%hT:Y<)F8JV!I>bF:Uh8Y0[47Q2n)sTs@*g*]&0J#Y$q,,O4YqcYB?_$qT@40rc)R_!
%>.lsBEKH]q=50<e$X$Bm$8AMA+P3CX=km6&i*4qDhpu5N>T\sW#aJeCJlL57$&peBUuVrA?t`-I\67Z;!ja6<2O:js;,c3uRlXdo
%hPiT8TaWNIBe\Eoif\NY,et!g1;Fr>[cE5K\ZImO0]Vb(s(WaVJ)*nLr$n)c:!BNKlR"a,$R7lo3!kRM-RFdQ*.Uc0"DpYY8hrs$
%j@D!bDbp;uK23)m%LV3;F!fCe7p*tg#>XBL,NuoPlHBjAd0qO[[[S8QF+WDq-JW,P5"SR5RHrmMg'!P,1(29!+LuY%p.?<a$u+SR
%FaQ9+DeAn&Wq^B2V0:o^'WSb4@*2\O,N<Fa"=T`P8`9C?%-F6'F>'uA#q#:PTD&kQ$uCM14=2g)5O(YVooa)]r*4_7OrI2T?X.Nh
%<MVV;W@q5;?aj^_pTTYi^ReSDHE!W/:k4((Vfk]qo5ud%_+Pt>?bad04QT&TVeMB&dlbE2[5@JQH;/QGPbEJPUBiHOSp%jC/;AqH
%.7.2`G\VuH2<f!1c"3E5DT^OcGuHYKRZ/`ja/7-(9)#>g-V#u$Ld5,Oe2a$4(E6_",XRE0@E1kWHidTc1$j$u2n>9"7e-gr3G11O
%h6="UQj:I/i6tC[B19Qho'-JiXCHJ:.'73\ITiB\0jE>2_E6JREOEBC<f*_R:$N:H-Z5i<4ZYggW(:KB\$R3e/G3g/anq1mast6Y
%`rm7clWbJEBcu:Ir'!kU`+GA63310l];b1brCK^oj^k-aQFo>].Ft'n[NF)W3Vsk`.@gsldu&l)FaI<f23@`3S&FupF$DZ<H1!aI
%F8q0aCd@5^jQgaNQ!.hE#*p(L55Tpqrkn''/%'eJV6nOZ,^l8sY)U#5^,fnG&;Xic_2Z@ibNdBZ_ro<N2<@!2Khto$Abb1Jb":u]
%Nokf'+]NK)8%1Vm>Ftan[r&>OY\BrCkj7f"p,6Lb8G%5P/5:5D['2TE<Bj&p5=nie`f2@r_8iiN/!(]LHGn'Cn9#\nl8Fqp2t,/o
%18^_tj$NLGIb>1u2N:N+Qb0B`DTfWIgMSsd]?ToQI20KYr93:;BJS;:4,g>h;=6J.B;nb[7jhO+H/#)M/mXb?ijXgREBLi-kOrm%
%"^\)&0Cq@T$,O>1obn5D%nN;ko#GKpCM(5O&4+cm!fAo/COMKgT/`MH0ln\q?W6Ei:<He(pfb2_HP!7;*=I-A\l@(9W@X_9HGO7B
%A6\Fn^T@^`jQ`&k2?&Ne3&Yb$f,W'\7>\-Bem'Z2$E+&5?G4A.3KdtWFUh&-$+$bTRoie&?N#1E-42[>;(f+U2BaAgYUT/%>c]-`
%_H*Q5&kD/#A<]-K\PZ,UTfOMJD3OR;SB(L0fIeQDI+_kC>l"2tqYI58JM;ENKKX^;(du:7?kY*XkuqFf+T8Y`Q`(*JKe%WG,1(Q9
%M7f;WW4LBCCn=l.^IdAaekZ<r=%9iZLt>0@6;;Y:[p^3H,c=`F&Y5"O3Jer4!K5FFGEZ-]f5gg4D"]>AS<lTn]1!Odn[jSk(eJf(
%TFPd8ruI.d<ESVOa7JT.YX\BFO/`TL+iQde*U6Hdm1qf3-!^OWR/eG1J1W6?Lj01lPOQ,j]0g$RPF)=s'QYClR8s3\M#+(YE;+)_
%pls5O7D5i4;arf%/P</oX[S\snT\5.P=k%e$XT+s%OkL/=QG:7jaGml+<=:@I[E2&N)gRf1)k/0AT7f-Ak@)U#PM!q&(O)$`_PBb
%It&\mC`#Tq"FHb")_E[H\fM;"WOV&O]um3+gOQlC.4?NrKPk@@:1St>(>>h]$P_G5kD/e6OuFi1$q:_aUq9>hEtN]#piZH^bg_p[
%lIF?ufln%MFZ?1o<Hkq>2\Be*Mj'.4X[gF'ACdd>1&DmupH_=7#"@mQmB6ac@3tTP57##p!b7m<OC%M[>F@_id,;/V$hiaqrM3.Z
%QpnM#9\D@AHl^=3Z*Tsm>bs0QN#CUeW9tpN^&'X`_e/LpSViNRWYH*R$l(VP7SQP+LBGSFh(6:T&pb;$>f[Qk9E]*IQB28L[#u1:
%-k.j4l'V[@BlB/lW5a5M)9<c\m?M+`3f-d8NCQC<^`Fr>ojg[ERskKFe-3,;K6S&17N$b!c/N)4lcIDEJh0>ijY52u!8LK;%:V=B
%WCk"g@cGHJ!K"Bi8_1-Y@9QnN+Ua..7[>$l#iLUU1A'BXpPE=N3N3dlg!Z#si&CQ$(H`^>_Y5qXHdP;\8)5S5HjJW?=UX/lC@<hf
%+'>6a4_tpmW>omD4]%%@<#R0YqQQH.,;mR/9ki6j+eVtfnTX.$dD0(o5M)B.q1AK/5EN4]pfA9+IQ[Pp/0XC-[^2RN_Udh7-bFuF
%4!0GUh5]R\%"PpAKOm;9C7=d#BX)@!%j0SYXn]OK[0iV^k3qST#rP<p!fMd:JHck\!-\1(&(@@QFg]L`JB</",RQeGA'-eIOSloi
%ZdC<oUJfJE=*W"Zo3l>+H,oO<qJ#,f*L#E+rc=sL9W;Ba2L9nL(LoGWBdSp)r`G-pQ_,4H4T(-:T]iHt;4ejQ\)/fg%cC$6]\Tt7
%aibqHhYWTk-EUE_W;7tsT>VZaj"W7U%9U[Z[+c>aHPH5q>5T%Aq(2gL#-7_0XSiG+cRLbHSf^"Dnt.&in%naB+T3*=s8,`U^]>&D
%br1,G2o2ojTV$W;G:a0*XUL7r&)i^X\g,edDW]98QMCoN-[M5Ls5aWj/E6]gJ[T<DQSr<76V8h(O)=V,ek!skLCVf3!m16"!6@6^
%(+V,Ir46%rhb?)`ng:D7"1tO:k8D_ejSep_$SmqA3QbaC5?odEOlZ%F7K-6'A^>1KapO92k94LL"gPfkl,1D>47"^(+IA4#5\%+(
%/R]f'H6&h8">^u,Y_8DE:"6&1f-[XIl/OYO,W88tJlAq`1*sH(<oYh(Ae0o_M,4?GfmR2j3i_Rb0Um$Pk?n,7/Ns]dLQ+b8?t;g5
%86AK.K^8HU4Z9dXb=EW30?-O(?PHAN/3]2,'9#E:$HYXh<'T@X-ktOP]&.nJ*(oI9p"AOmCg;k`ZIAh4KmA=S",3C"0@<BW>uE5_
%gaV&g!f%=0ATkmU>UTi?HBPl)#21cikY"KC8(#Qd\_LA$4]Rj/G?Z`Tj`_SF)Ak>%\\X9t"-9^JEOCWdD55Xi:Q0U9lh`t]=W<&`
%r['/7]WCbb0$oib,BT2B\gGnbDo=Gl]U8>M'BR@[GcnV+pIK.r!Dtg&&/hHO>CH[`;TuA7FhOo!PGSZ;m2s<f'IO?a^0<9bD5GKt
%j8$N;oM3]4XVS-#J!I4ce@3X`<oKBX%Hq^K*mQ?Ua&oo9o7r*8.N1h*Dds>1+1r,cE:g@*kmM9CT\JlMbmO-h;#C#qL)\7O"pcUL
%5culE7nn/Vnf^;3(EoJ)2f^!U(Fqcad/d/Ua*(=rq._CKU$?0nrFUdt'lqfZ"dU4S$=C*;c[UakH'ofCABMSOQ936E_Ahd-*)I8n
%Jk;,Y$[1K(!uJ,_1QO&?1X`qM=L/LJ%0"Ebha*6G(l6U'(5$]S=7+"Ff2140`'f<W!@sJ$]RI"DmAI"Q3*Lu>:H)69@'!5"`u)/B
%bl>KQ&8.)tr.Fb9nj:*q(Hm4_iC?)ehGp'6/>7,epYDSK8r75D;tH4OK[3e*!eq(</\9[$&pjaq2a@2)NK``/VI_R\fKSHsY.E6O
%G8l^SI(M5SBm5r(F)2"<Yc'/CH1RRJ<0c')3]R8n7QR[Ue(hB$C%uA;$daDBkt([krkZuQpVT^Mf+0c`l^<suEk.MAs(Y6NI\DK=
%$&BMS]ns,#]E)Q@jEKt1=s6mmOYS!J[l,r`+Z)d28*4];>XS'">U+\f?`M%gqfTKGnM[DI,c/FdU+_3$=,:=e^,0[E:)?).<rj`V
%%f?#Mif^.V\)MkXBf9h5EPpl)9-<=a9uE%80m%lc,BI+$No'H,W!LiUHJB#k0\jP*N_-AEG<FEf^SK0qO$9a&a6*1\IH:W*qZNg_
%+sCbH+#7H["]bZ_SR2QhZp,Z*`<:tceWa<^<^uJ\_Q+1PguWR>am5(Dp!6NpBJ$N0]VglDFTt#RR<J\63H/+TCaM$QjO$bePJkB[
%qdt'JTZFC(G.ek<,5@LcT2h>I:0S%)*Oc:=)_&AA6QDtYV`h0&Yfs/=@s@icN3U,XmgbXDKXrh_T[#)J?I"=s-BHUqQ-0DBkg$4l
%^Y(7[l"Cc/J1SS.[q&g("BnO1lGK&]:CH8X/?>)=7&aCGOZIZo#T)l)Ttj-K%J6lFlO=mD[JLpjjVQIa!0I.BP48HY7rj_3np.be
%NFnO7"g#5bQk0rad=P6FV#/'a+faG_+q09$Oka4na0`2l`<ocg1S5&A<#4RLAHJQJ)(CGJ>DbM>Iffu\?'&BgA1j!J,l-0#-No.S
%rEO]^@jk\U03fR#8@9gN#N.;\Od\.jYT?/X>j`U,j*)U%d(1)q8<8=bXL`%19&*g92bu+W4hP^<q>?')6WFaG7[A.Xeit]9f=CH7
%WP5Sm*>2,*,d-ih01]V=9rb5+X<>=p2+sn%G9rAKJHFos5cP1n)i6eA6Noe3:oFpM+CcUd_m'c//^Znoi!#-P'gCi:HL92a8[jOu
%fo&K[5R)P$N/su#TQ["!!5X&uhugsU20fr^RJ67.I09gI%G[<A[NA)25ljQ-+(Y*aqZ,TX`)>$Jm`<g,*2$jZUruk,?q1D!`F6R'
%i[PZe`mN%5KpU<`7#X<_#7@;e9MK,+*Ws)d9,]jX56Po?nK]b_PNW!'?:/^s7X^X.L'lF@kt'fFY"n:QG2dP=8HMPAD-,g!6ClLJ
%INqFb2Q-Y7l5$AX#%KMCqD'@rE0b23_*_;u4uKp:A753!OXl"T=e9^EKjonaaLuc-2lY#-`bB,:4c,1RHA!:O@cjPr.SNeN7/B/'
%DV5)@#s&/I%;WDj#@4LNOMgoO;3C-3@=%4\8u4T!b"/:Yd^L)d1K-_4XN6ne)mG%t]?WHa5c)`=YDE;%6o'd4It>f2&Io)q>WGcQ
%npW;OJ9=J9("6CsV>(e2D,>^64DZ_r<H=aW:8(_r)GQ0%6bK:!oFqj\P;*VmJP>hgH6G\#gVeU#e515&.R$(&EKsd9nMITO:6?_L
%rXf0_g([*"!a]:Ff6%EhTSCJBR?\bV$;66Pma,i)i!QfIj+"i^PRc2TP7TXl"^h7U5i<;@VigJBe.=.-;Pn0&N21e<Os_k;eWOO*
%"7r;@R^ZsM=<V"kK"`*L?kc#'0S:s"8hj.ffjEr>6=L>&X,R8A*XrYEs":Vc%"X-Vb'1Z\,r&V@g4PbE+CrnWZZW@l[utAM`g97s
%CRQR`IJP^Q(UgODCdBXYEBV*Mbe->Qe1H/M[jJ1^ZsKl/1ta+HU%J4#]^G(%kM`*(p%?g:N`7LA*UX"tbEEgDY-_lF`qsM4>'Cu?
%C7%H-R1R#L'"gcT_.=[h"0WdI]&nmLmrPF[2H*=Yj`k9VVY*?-mF.lJ6YK"tXC[8X;Gou*U(9[sh51V]5pnX_1pult!S?s=$>`Qu
%1#fb-a7^:J2mn)g`7j^S,Q&/#]mYA*lq#iJ8Qb!C,9O<##H3Z`I@rW7XsHe]/_TJ:bF6q\YeP5dhG#??(T^$t1_eUWbmUTKaS(rN
%X3th4i.V,(G^`l\Qd!2&fbXj<F%2*e#G;.I<C1d1H(]h\YNOb6#W%o`?[r&-er='k0lFQc89P[YOoQ&dotbaaT@4-I:QOD8$:q.;
%C]a>4;2%')X)Tfrd'Vj%l\73;;i$CR^p<3GFCV9pW/HBL'<o\;kss[^hmZPHg&="^nt;/+&+4o*#akZ"CAXRsR"OdWiu>lZ*h"o.
%W-GAgc3ia!P&jLU*Q`K!)(16@n"D-mQfJhDVS<l0$NXH!F$1#XZDqCU#6UX\&lbY'Z&C+:[^<7ES&.T+F#9@G_7KtAV],]T!R33e
%/j;k(PmZ"R:P?tpd.btaTt([bosE+5b#[)>Z%`gH%(3#4?oUA:H#DN-hDuU8T<kTn\c3uhl7-ok0W$DMXCW#lg'fHu1TX_j?D*CA
%WR5csV$AE2J9H.p1MHu%(dRD0D#.a$(%j>L]BeQB`2SO=/Yum(NU9VSD8AcQa!(L5H))A"W_3:O8WR0ngmn>-`M;hMn*;6nVi)Lu
%CBq^%j;(!F?=*rXX<.>;PTCV%]RimD.(qM&jmJ=YpAKWl**KTjW.0X,aNo'-Eg$<Pb-4r?7+t-<K;e:SgL0j!j(#NT06_)1m/)`d
%SQDbL1Cq%R#4&$1m?.:D'T@bt)`lp[S9_RJ#&YKQU.)9,<6.f(-(K4L"haLsl'X?LT[j`&[Rhfr%>WOXAsW]L1U*q9j"cUdSkB&Q
%1.a`[C'l[5"a7MQdY(k+Pmu\a0Y$>,GGu_QLY>tu6G32!n[HTuFW!JmpNb3*@U:VhOGSo!AgYp=s3pLn/i*Ip/VXrJ.nRE$O9T?@
%kKKfj#a06&>g(m:$8@lBY1sQl'&pXC(6J8>eNh\YZU,isG]fC>)M1h:(0d"%b#AbLDj;SKD=(f2-BFTn"!ehQ`(:(fr0eg!9EoW/
%[T=-5o%=P%EH,%jf/H8OoU2*IWTN0/g.gDror<3J;aa%Ek["LaD]c.C>X0%0BI(Jgc#'IaC:GpV5(<'r<R&b3HVB&a7,;)NqI[Ui
%I4jsnm7GpP^oK7-i4/Sd>E>@;C"_*_OTaP<3!t$L'$H7E1iQerUr$.N6KMZ85cce!1C#s?qp^5B@$7_%gt[A.W9G]A!_fX]/X->=
%4D=/`?X1OD[D\pCMNH?9IKEX-r*'?.5fj#'"B@I95o.FV;ifS,'dpu14'rF-;W>,]FGn"h\^Scp6N)UfA::jC"=YiA_A((ZTSmbP
%FnXfPoash@6+rN[Ui"Pd&%F:^is*I+/#]u\Se.'#2fXYck<;K#>>ooInM>R9^+D3n0#YAo=&[X,!UA3jO4R!UU6-Eg0e3`Cpu_4=
%HIn?O7^0B?V+CJm5_5b<q0A]jH=?h'Z(&7n$>OLl.:uV$)`m@,+H.02I@#o1;nKtsDD8KZ8J^:l2B(.q'=RaHC@:KYfi_%ahY?:%
%F-d3@Yr)P_B+5Q;+[?F4P!HsLp_.*\B>%FNC1WeFdIr"_h3'lBE^`[_%N_iD2Za]C80@/:Djq;QV!Q2ZY`1S!4j"qD_6$)jeO(9B
%*[YH/N_n1Tj00'U2E7P`Xq#2E;jfFKc*e*DR]-;^h/%2\'!0n/12[4LcO3<_C4EWcd3&]jL(;@<9mQG'&hoi?qfs:E+JK8e%g+X<
%Z6%\Yj#U^Ne=k>3YQb>F.r15-2Yr&GZM)C)$*UDQMF7Fh.HH,H#X>_\93YU3_FTn^dGbr.%ht$.WcM^F]M$YfWTrXm';^DX":kr$
%0r^1fgL2@h.\&ed0SJHuR^NtVB"6XD5UJ*96>rrf!NSVd.EPPDgK]YpWL,.B`QiFUQ5%oAU?G1-3ZR^eUF<`PTn@YUL%DCgl5oim
%\D=Q#e-ttLFr#W_/gb:LjS8"K7:jZe2tLd7bZ'B[IMIr!8M8ojn8U8&(#sbtAo8S$"BG!o(:,;76e[.8q7FbC0:*1N)-$V$]H!hH
%d<FVpFj!CtQL"LS`8JYG4N(sF54*&as&OMKHl*@.H[L#^ElPJFn8Y[i\D]3=V3haO4D<#hMW`LQqaGCg:l^bEca1q)o@1sn>`A4]
%L@\+AV#$2(_a'*\acb0Z:6B]uc=&MjQJ84VV/eW<"h#EifNM@eM[!JWM;V3iGf.MAHE6i;nuKPUlELR,!+nV`8B-U'"X,#'V8%`T
%E&IcX:n%58N\.J#SFj]5;8O@@J"UHi=pa`nTRB7qB_)id@ojh=`_^,^n^i:@q(oPW98F1KnR[1sP`F8o3(-5!F>qAUMEd0>mru)[
%9q`ncQT.Hj:1@44(&)i&&hW*TEjhs*922-`8="l^.^R`F'6.1,kNjp4&f_'R#\sKn-/!_E_#*ND\8+Sop;0cOCKUq*Q$#S`7sW*#
%d]TsVZ=XRKJM9)XOP`EJE2oGHWC(I("\AX_ipU7'b5L(.kj9fdXLjFd"\j_JQ'$^DgQPJG+IUes$XGAD?MKTW<I@bKQ)0]O\&#i4
%V?akSiATXR^-CN,=891C-ECnDE24$`ItVt+i`K(KqAqq#;B@7nZC)_@JWh8<.RGK@M)'2MM8#?shHhbr4FqkqPqKlpft6\1\OkJd
%d=FP@;Xn-)YG(c"<8;/s7"`d4ClXU4E`.n8o-1\0N^-V'Oq!J%r?;/#!FY@R_K'eZ5`"/AbtM+QKj5'751p=c_(@(*FS-<&/7WPV
%frD>Y,'I6h\btghHrWM<!Wf3'W!e!JG/>!U"gV['J^`-+b$pVB`qVDrfp+7A["/7=\?Z3*Xu"\6i`g>6Y$oGLGJUmhZnDGVYnW;T
%..CbL(3DG1N"F_X,7*2d)P4Y]$'g/F(+'("m)(_3Nf(m6$D$I?=F;3?Ld[;;eE2bD:bN#1m6o65O2KY;W-@8t.u+*RT/'5@M'<,R
%Qh=$X$)YhF>=FQ?N_9U"DaZ`"11gA`hW?5K/0mI2nCV^9<XF'!A$]OA.nOHh]G.;?P&7OR6Lgn^,A2;CMg:8^_<A<-\q_GD<RZI#
%T51HfL9b(n&).G<lF&a<(F>[TIND_@:ppY`F(X@NI1"pVc1$K5mm+\$7c3j#WNbo]c(N(/,O13mA_bih.1l.A@X0i]((#iQp;B-\
%`14-YS`5CNQ`]HZTS/e\bNuK`0$N+8Dk>-7ZhEum&[IS@C[(&j^3!_;\g^b;PdOi_?aD6U==_kFg_A:F95b@&3JS>kpu@6b^B7@b
%^lXB2Csf"1Q"/Y'&0dD-5T1pR%l,IX0Y9XBUGh_[-d"R[`Q%WKd.\(dE`GsLF@J6ab/*;;?D;(.i;'AcB21UOLcUGCKsiS]&uqAB
%a)61n&/1&%r1s7&Nb6%#Kje08L*<4%!>9jEb.:PlWT]YL<N0Gt)XAfcA?THjXfEJT*m:!`[K8L\#42rNY`t)RVtMThH`rR>QZrM@
%rI)-nOkXe0&X2p/.0s0."M2lo(#c%@n4?L:Y'TVAj1)4Fm"_$m>^TQ$GUmq/V(-_,RqcPoKJMXu":;?[Q.e+;-E;3+"c)<"A.nFq
%B(CWRm-;PI4p;Hl&1hpGF[7ODXEJT8QHau]RN^#:fZ%`cgb76QEZVVWL%l5S[H6(`;[U1:);\=.5:Jn4Q7?8-R4j9?=Uoj2P,]Mu
%;G2Ei\)*H_n*7A8<SmUnn87"VVRl\1L7ZBKa-*ige$$1Hf)k_QU&8]CA.LEj=Med##i7N3BqHRJC5pic>X2"L??=@/k^nkPKok]4
%Afs_%SeD[9lSY#eV9mnB8:/i#lm<8=OY%S=D642fXf`2fQ4llb*honB^008_a'TmTAR\/ASjNI)UaTVcgU;)r;9V,n(+iL*=%5[,
%Pd2&.b$gmaN?m+4K?2#DRN_56lQL(da]a@fa>LYN%-9>U16n$J>Y2SpCJI=ecX/hu0B\8-UhJn4Gb-j$nM&$gb3d\jeO#7<ASQ@*
%D-BpWc]haj)Y88q-<01Yp7,#.%1`L_A;IXkS#iBaTtY3T/S^#.HPV_E[cQ?m%%md)414EiWai?T<4Bn%BCEf;70u!?ijKR\REJJt
%R**!.8R8,4+;r2#\#:9Bjr9Z>=XS)^5X&Q`D%e/dnYhOcN[S.Y9\(DP6L!2KkK*<S,#`t"nR;!6+P*F_iIf6$&54]j#j+2?.8b$(
%mkTNTWrmH?K:t)bqZj[9Dj[SdKRH%nVgF/V9rV>OGmN05mL,oUH+0_d?qQ>ln7q5Qi?=A+?j,"W,?#Zs>:F+@l@\?lL(5GeO_WL$
%h$7R\LUE#b3pGAf+dR2@S>+FEnB&,!3:'nPGqf&&+6I#=&W+],`A&U=^J+$]2=Q=E>.jQ<$uSn;,K4G(bLJ=\X2<ZOct'=o$8hnG
%8[_OcmkB#6%`_\<&(8n3f#u%2_!Pdsq4mrOl@,L_`ie$O+Cbt3OH?>q^?.6a95YEOF'@8_p%"0eM:5&_DTD4O&CqK34)^0+0A`u*
%)5*?mEik@WSL-]r1:Wmq&'gk106`BF_p=?NfXT]YXW7tS?_2k`"NYG@a*!ASIde>Dj)X>H]tE+'bR!iV7C$%9E/mGVb*D6!'k3!^
%PS-Kj>ll0Lj;Md65>3V$]F'G`LD9fj.UgBZghsa;?%,ia1%A6D"mFE9220T26G0<_egg*Knog>B%b$L.dg,F$jb%MMk(g"ra)\H[
%;2m1^BCbl]bu&m&[.Sg"Ms9f6VtCmko5a$@c!R#/XS\PI7gjKA6MG_V:&=5fO#fuVVE$!d#EP!/0DG$L^D+AbACSbuqa8bX=fi6\
%=@HAPVbM)!<Vn%`KrVeg[,PJV6gAWP%gI["#hXf3GA0o"K"-[P-s,%aBB0+1JFq@M\6@D<GAn8"3BH=V-MX@fjlBPPCPhf$j[=KO
%'/'j]/9`pZ=a\CW,.3N/k6e>0&<,&K-PIYh[,6naV#c%0R9T0b!6)E"a>%l5nA<YHK8`C`:5orB3GGTH/rM2OAPm%Wl^rh/;1]cU
%%RRG4[+VO?/RZ?iTehPCbg!DT88a%=]3`FnrCTY"^S'(=L(YT?ZaYHo?r/nW7BqkjGUCHBl\>5.RV0oiOT:8Tp%l[k\n^!KX!Id@
%o?92uBFG(aFI=Pt/^G<rYP)ZnVB-'["A5$Vq(e)IZ5k!&mmp342&[(bHf#\?XR)WM1Jn`R3"6EeQ:BD5C/X)O]03:`:_fRg,?lGH
%K_'CZ=nag]:(T+sn_OE9Ugu'[b,e@n&cA27pR)eFFe>SS<*qkVNJbDS%Esks21O1k.4RU[7X3c3-8`<[LH$lPLHUU:TUaUpL[Orb
%3QAelH$?3JM_F%:#1-UbBpWJ'((\k6POik9aIQCZH*q#5%nU^pHs$kPiA'^)!9@X.b[SQAhk2e=3u$.L)IqYI9bPG,@IaUg=LW38
%NuqX"S<tRnKh5!:Z:pg'E"t(\@oWh:q+WtNEE0%-!:WA/pP%XVrCmSBm_ba(Kshb2.daKH<Wu$QjeiEVM9qs,=LZHYICXK?:&=cj
%\d&`h!<Q.s4V@p:&j1a=E0[DU>/WErn71(+GXWRjZ`^#/.c,,EfoYQ\Ql!(O2HA@q=QGNfAVh=X'ZL$TPt^m$99nekq-G.\\2MeA
%>TSj4(u1P&j3u@Ln*i&,mr<*\#OCK(^>(a80D"E9gCiVo]YF4Eo-V[Vj_]:<LMH&Q."G@W+Lb109*g<%?r\h(]3$SgPY'=7'/3K\
%1qRu10^,-+X+'il6H8<\dUB`DK1oND;X#NN!3!R1]4AXoq0uQb1F4cQ.D?^m4+?2%f^5m-Nk_g&O+oM<Yc*geac;Ml(J"R\nKQK[
%,aog@kb;X5'lh.*O.HQ,LVhDk8.M??"nE"'@Ff4f'j?`_6CTf9"'*#B;AA4T0%Wn4>M=04_G?Vs0G83]&6$u0(^(-'->kNF]^4sj
%3#(0S2m]>^pKbZ<X[oA76ZSq6E)YrX14>>eh1\"Z2sIY\j=>]SWtO"r@;_8k/$=F5'0ufN.[+uW,R^)o&4('3PE%[)b+?6Tk#nQ4
%]=9UT7)!3#C6=aJirLTe3r'c,`QP6/S'Rme3DX3AWas:&E[]K+_C-=$)\_V,=IN?2efGBZ2I/!/M\q2,0q1SD;=b\%=A$lN:bL*2
%oga/:h#((V2Z5Q0rhO'4e>d@(>:n!l5dNK-*\<OX*t/ctGk^ri\9_1`*fGZn>+G&)X.O<\,17CU!%^uIZJbl:G8n/Gp+0(u(a]l&
%<eo?M8&43ekL1c9:fFJ&g``7t?[W:cboDcpWfMQ*/bq-gIkAI_6rmHE1?E/S/42P8pikBkGJP@;!G,9eod`P4Xohk#V%=\2)+Vam
%+U9Y742@&6L"_/9XOeaJs78&E7$S18YEk<1`\JZT7+l0_I5/c&Y81O+eN//t;E`;P1[_J4$Aafn^eE3X2\046c<%"91P^QXkf*W`
%F[qa'<+@sjC%plg:o[sGl>71/892YcR9Bq,pj\FER$',X!&^@4Y]OgkW^YsHi.09$,VlZ*L2@bLNGUndn4<6ncof)?>l]-noH5Ju
%k6n&?(_Io(%iYKS-B8K18dibijd`J?q(D1$dF0Qrmn,N4(7\`E0GnOESh*(`rM%4g5S2%Omm4:Qh9/-;Zu:T]a-ct+85aF.q"J2f
%nDdg`oCMjCm+9a>60u-8HHss4^<aQ/iLP63;T:G22(.AP-kS5'32p,B]HJ*D[=h*jmjEPteKCe?DpeP'5^M76%B8$\'*WP2&FT&(
%[@h_[X+9]/j?l=oCX7d%%S6a.]X5un)EOl.d&$l6#>b:d8o-JX-MVmk%;/lFeU[ms!>WV[%6u$ap:=*CFW*QEp*%+TD'V('kP#Xd
%a?V>rr7Hb3I)O8:i'DqpA7D=P-5(HAb0&hN\#VG(JX(+L/A3SA`>MGi\euL:'rGCG0"kW6NJk6g@?&u<7,8$DF_blf&3NR!b!fG`
%^u#r,g"edKg2QkFZlOVg*i2I<'4(7'HM/*08hq?%:+l@*S5].<?**tGd@N_O10Mk!&MWFS&N&6Y$pptng=[aA>dkRGfg5]4Z6tVf
%kaVN\_VlY!'3e=Rq1sGg4TQC6/s8s5";ighB]mT*Fi?\-/h]82C,TatP^DpPYO3k9-Mm3gk&ZJr3D;3eL9l[dO79g_.A:"nc*P1R
%Pk0\N6+t59"XkN(mOj*!=Nrl$KU>VcTK#*mZVFm?*1JqDf[Ee]:]<pkMoD-t5BibS9tbVeXms"B6[mW*R]4T-4u>-DMYgfeBdWUk
%8W&hU4UbHd,qrk4"g;#S9[r2F<@J'SU7<4pC+:a:+nnIg\#[Ok<X2[8?prH6&?UMKQp<E0I8.NI`A;^5(D+/,)<T*kfG&ZtGH`oV
%@&_C=nIbuY@S2#UZ=:SQBL0&aMCO`o_F3It(AhUkW(Mml6<YBECuiIWVd//&#WJ)HBBmp0eTqaq:s@llWg=/>4`ATm(l)XkcElV#
%@//Lmj.6h]>h0Z'2L1c%+]*">dj\$MYs8!nmI'jl=FDc<;,Y2m5Str$EO^["O50Y\fRQGJjpc5#ghg$YMTnL_+2o2`_P.'I#d3rF
%Qi$;Q_!=f*dKGBTdOb8UXp@Go]3nXF&o_0qA2[L<aE4@1_C&N>)A3sEiA^[TaY*Wj6$sq4MCQKuf-Rp;Nh;;R7A_Au4Q8S]4tj\=
%qnCqHa9EBbFfA8rXdIqO;:\FQYI[m^2<K$M]b_A';PZ8nU.(l[;G]I%3r?)!n[r]#?@@'I$L,TuaA:)WA+[a6d#1bX72i;f>LKC_
%S_H-s5H;T@V@W,0C&I!nTGJ"irTWf2Xd;suReC$\WuEWnHC"QQF`HEKace")8SWHn1Y_1H;*?+nS"sk&DUb<UoYd1tD/gOT/*)k7
%[OaUHN]08BMXn^_oo5MtNI$h.:$83,[j()Ka2t1/[!eQ2cF1n5IN^`Wj@ulLB9/6f:j0mfH<Ha?"ckXRh<WF]31AG(dlq9]R%ljc
%oDD]mp>7EM>r;p%6,_0jiA!5fBCCl,ju%qS@<HD!9.5JTRr%4+J.TX?N4-5O9_BHURd,^de="R>_\mJZ+Snc)f5;d_T#D8"-?&34
%C#Da@bP/W^&3U"5,jIW>QkLZh%<`nBkfo\KA1U2od-.uC<a+>DqpEEO/(SL/_t6tg2=)b^\N5`H,=Z$M_*TK2MBs"DPZfBG#ra/*
%(a+Xs0#B$LlSn&A/Y;K$W^e<cH8o7BYPS^6-2k5snp:,`>I_Aqf*?VNkhE@f*Q$E:^3ps(0CASK^:aF=LCLWN(=$=B.m#gD4'$et
%Ico?(\hp+.ho?3.B.qN8`th#tW;THZ7ER8H022l;HXtKq=NqFh)41B].(Qp5Ors_n0l8#:nuhJO/oIC3MD!a2C&W(]:VS[g0Of:(
%GNr/LeUd,GZ6&r![RHeGl4MX`RbDsl[`;nPl;74`LK]HKBMl4>)A;-[$c:^f)?W3YNDuWJ=W2D=Q"c)2[i9ZZmSZcnliHEO"XLtd
%R050G#;=qim^AOA;o/i-%(nh#O<rZ5\p0\ZiV,kX?2W-Y7\G'M?cAjkHFQq.kfl9hi*i.(36-fp//F1`Nl/+k(q\G*5+HOgkth&d
%NjW3LF_T?YbC;MHSM&&X&3poSn1>]d6EN%,p,)*LiZA"LV#@KTpqm.'j(>LDAY[Y"4djSuPepV_KL-V&2)\WaE)fsFfcs_3%@p*6
%Q)j.EO!FMtVU[XXH,DWijNurfX<'/fM+k=e0Y?OL]A&3li_[Z52n-9lp7-!W(MgR=R!j;8[nld>bqHfJTAH8tAWlV5b*@Skr,CFi
%Z>-p\g56Q9KLclPVE%aV-f<1:];Y%QE,#nfg5M/cY59Lmob^\_:(kQ8!(R[i+-*Xcn]W1?(n^gD;:[q,bu%MG4GYq_rDfoYjp""5
%]@m'I*6QL7#X=YPPIl=K?SX^!T1&m%#df%?e.+bgb%@d,,:ln;4+SQQWq61QFms_-?hFb^SdD_C4kJ6_41DtSH`))2nE-0(2m[GZ
%lGoeYi:^2in)/Z#r*8It5oDN3J8_Ur+7HpL_b4E=_XG=S.D]UO3%:?d[F<JpcUJXp0%='o$n8Y(%&G;."Z0oH<_g8d`ma^IfKYWI
%Uf8%::85\(I)Q)hj$[0F_W-MN&SUd*%/U&RK>=q$(b@kP:A?'J-Wq,TDj$pRk/S%$bO\WC2N#&urh1F&[R.KEF_6+6cJcuU"hZs?
%D^W['Ai<94o"hV%fYM"/&=OUdrJHbq#ef`AWEc8&eH5PM4QAXs3@q]W+LS_9KmYPIXf(Rc)Sp!TJ'oSF`X\PEEq+Ki5Tt9B6:pR/
%&C$pjdV/kW+TSj`@>an>Hk/T>?BC]5P!Ph:Vh(V4b7aY?WH-n`<i`D*r8/#NBqf`#T.!o6,89QgQuY_T:eNPT+frkok-s6V*8a\0
%/kMXNXSu>,g6\W[A6JkpKb?Z75S]IX,R%#Pi'khrqpEh>6qf)`,jo^le+-W<nQh:9VFC/I!Z/qFTf/[*M2Elf.'!E#`9pPXM^kKX
%Ek$*2C_F9n1e(M;RcToA4h0-u7!0gYROk;C%UDC?].o'X9+a\$7-KohgIs%@PM!O_$!WjNRbIOA>HJO%e7tiL'"GX=M<brMMP_.F
%M*DJcg'Bp),c33FS)[/i;HLi&JiG=B]8>QX[1qVrCQMPacpMV(6T6MKZ&7D8g>lqHFut.;oMp&!g[e?*n+F:k$AT^",Zo[*?;E2&
%!i`R/fj&"(JUAWO]Y8=&RuJYSlecZ#f@!EpRrpXA%-q?0Jmj1.^'EusZ3k"JkV'o$Kl(MNX$McE**.p+U*m6W"iZ9`p%?Q:,>qY`
%6[sr8jk\gWTr39E-J)jFBLH0$&g09=$Ri=AH):?6iXD,8g7)*>(\M5ZL(X;*dUS.F3E1,odjfoW*OQSaAD3B8k(Zs3KZk(`^i&`3
%D_UR'rkrqGlKl%+ZmrSt?G3l9rj[sJTG.:Bqt%pRWV?47i7Q\N2d2n>iYgH@hE'(m*\NpQqoANKh6a-GJ430]n$*fbbn!9^Fkl[e
%p:gC+._9KVU80gSDBS72LA)XLQMF]BLqEW\9>[Io(F04\o%@UnDZ:tKg.J5AO`"KTZFDR]H=%ZH0j4nRF+SgR7"RkQdteZ3N8a1O
%:)%Ct0,/MKEre]<kt/Bt.R<SNV%%'e0)kl/f,%!h@1^p1=Q`uq]bXETm1jWbBRN__q\J@[A6ZEOVdTanY'!=DHeFG.;bCS>02COo
%Ih]S:2!@Eb"@/IX*,lYUq:&D.(s3?2F*N1A.D!lU<@#^W&K$<5aJ?D$==\OPeo``6br:#NN%C!5l+ZBVk^'/Li;%.sOK?78?[k'7
%R4,&R3@j&@14K3+NaT4'.9)>fZkP:e%1c/hF.ljIKlaOFSUnk,E&c5@enO,mO)YfsXHZu@\\\C#OS)F3Tl9S[e8Z]DPHG2X"AB)7
%WVq5853"O7]Tjbq2n;%%^D?21oG>n?S6F.!Pj-6J`jYB&P1W-@:12h@RgQG)$#S>JCYiN@6hX!.Lc(/-e#U>WVX6.a0i(V\!I1.S
%Ro@OVqG+#CjF7'>X_[ioQVdC(@B1.pRVSX;hSMLA@o4fHkJ1"AV5YccD3ZXaY$0+lB)lNS^ePAMP%lS\hN0dl"LS'2M`u#khnN@J
%4!GNd;^"%UopUT_DlhiGcMF$@nO<#pnj"Ak%#kOoP*&bVC=c4*RRG!)g/MLO;9papjnHgaL@m?$r,,cbhlTrS@R\@>pO5s+2ehM!
%.BV\X4Tql?]e65`2(@'>]#JVok2*4\:[520:p&07Y.C%MeD7%_S(S<P^&_qCPa#`Y.[?XjnL-D`6a!-I-h6!@F$BTIDkHt_ST?[K
%lZf&m,r0&&actag=?K^iF=bI6Kp!Xq>k6Ae<$Ng-iu%<Elpp7@pJViKEQg2F5+Bi#OH($Zl-t\IJ!hcnb3GrsH4?g9_dM'.oI8MY
%U8c6%/SUJ@/QqsuCg9,H362`?_Zg#sAg77]Mi7.-PNKcQ_@X:f;EM:17n<oD-`<'C'"G&?X'A>_S`+iX^AB.`%1s7g^="d&cib.$
%+Ka!'c38T(JuBs]5g0T&P_A>U'AM<J35GkDfKN6&LO6=A\Fs'_8guUZC2Cn<DW#Sl^KMG3=^KEWrXiB5*\nPfEF.dEciXE0<0,Vl
%0$CNg*e6tYrh@E@;U9'OOV4E9B/r>j=fWAMUmA&Q;_1(,Z'^IF@4JGJ$+S42CuOQTH(CLL\1W<mI]Mci@6M<,-C$cd<o)6QHs+1u
%^!_tTASFiWbFV"(e+:TMn7o[><;Us?i5=_dn,%>f>lNGqlX/\ROlE"G._e%???4;JF\M1t/YguhS'DeP*4RQ1E_2i7;n[su[jmp2
%D':[W.lp_@PVme!Hd42fOl,VB"Ip&fohF8*PZ<aVMR743ER\K3%TRA+U,:5fe)j%EnN,ZjA+?Vj_FH/NW:JtXE:d8Y(N>*WEsGX&
%+ldMb0OftVnQ40cqE1U?K=Ot?<!85WR-,"nGO\-Z(Sq81kY,cQ>,al#hA:Huj&6Q_3@^0GFN!'@2;AbDRX"1>iT2lJES'tt=j^NF
%f'hS;<A@%K3Qr%%NoWBRl'gr`Ou&h7O]MOS5.jQD8hhE$(BMW0e"SB4[7!n;g7sjrXCK/;X)sCS`j6$QTXR,/)aeDDZV0SM`uLVs
%^7&0-ZW1EUbm#E2K$MG;Z<q8&J%fGI+Hdml[&GmF3<P:51RTC.Vq%->l@/oMlg]YWn9ot4+11kub\Zql%[WMZXfF6bgA?92\Ndga
%R6G]%E#tCe.2ka_S(mbePD?%KTgjh_Spt,,'BNPW:O:d@:hD-?HF^MjH<NEp`Hh8d[[D)4)ZRL%m3qKgE/>?q^QmnS8!]gb@8#j!
%/aF!0#uIVXKk&@j?hIK#RH2O>HUS,^olq-ZrtDg0!S=irWDDs^q4^)TA\)DaCCI-aT^*mgEk.T2)WeJI8AN968i\NteOXO%`h"R9
%a!Zr?fu);0])Oa(d3Y>IG7kYao`0F>Tq<r`I4IrJq@A,+MT#'UE#PN!@NWB$7Z0)RpL;i`?[XU/d]hm1eI'7?^aGp89_;irFT$)9
%L%`5_Jdr$\#l:b8YUMJeNe?+.8MHRf+QV<RY`4K=;KSA7!I5-4]hJqI0[rK>hir"8M.%Drb7$-3e6XD]V?X`Af2/35VB8,%[eaX^
%&$F1o>q[S)#6T,_8CdIVG-Zr3P:B5PR6oWVh<h]!>89(l%hV;5,ZLNZ2V#j@r%hL&Xeha57t3dnoP_n$m_]O:3>'>MU%&rUepUS9
%Tf"-::;d1])E]I=<[b.,p?KtZE'Y1@H"uPO+_--\J#EdPm-iIN,T'Qf!C/+4j9#3TRptZ(r(c)[N!Un6f3[2/Yn^^s)@7_RJ]/f=
%l(jN0XN;qTf'hdo@O'F\X3Mc.?FM*?+L2WCD[ZMGd4%Wr!0Hai>&>rHM<f$t7539>Ru#Ln<KSD;JAO-2.9:-aM)iu#InVMp/`@U]
%b0ZIWq.+K#nW2W#J\uL^7"Skoj4@H)<I%t7nI5pI3XSP=!OIRb0WLd`_>;;KX_M_7Xh*9T>8c/=]n0Gt&YMke<r@1(s2S<>VBKqE
%<if^>he3aj0E<,:;j)m$@]0@Bl)k/iUWF@iP&C][;mOLF-.K<D)nj9n_]%^@IR5S]5bf1-\qVk-;c@EH<;f:iY^12kcCYY<V!-/=
%Y+YD=`23%Ln\IBh6:^8ra,"hEI!uAf#rO6'="][8"\<dLKgNUP3tnI"*]'opgsls5KFLWT[pm;spBoJ2&9hp!L7hA&;/=onBQn^@
%CYI>cp&bnEmL'Q*`O<K!f3k+RNMm*+Y!%Ve/RW(NONV0tN6.(eB3)Vn;)q#8@&Zhj'')K7]eK;Kq;WoCk/f3+Z=pYiT9<b/R$`*r
%*ZNr;1lp=3Ck<?:pPY,WBt>-j,Fj4I**5^8m.\*r'lmQ7^R'(\lc1r97JUt(ElRAgk-r/AK!S-:"oETM?><kWe6KWL9ZXlsi2D:e
%!#c_7[+u4N/hd>BC]$JqEo(Nh:=lnmG/W8`]o!XgkG@l8_/s-#A3!i96MrNt;(LuhjABrYI?)`65L3l@g;TdN[nK&G?5"=T+]b8f
%\=Z(T.Fk%@"V#mrI!It>QL\],B_`[8!#*+cfpm72oS]@n9uFHgXT\bm#!=8("*JC3UHqC=)7)3o8g7B#r1*O,p*;mEBFWAFe`Ri#
%P-CUFcJFjsVZU//W'Qi'kTP)GWE"Y-m!4MSV4QRT..&E;!g8*He<R@$Q+2O!Z5l[Ep%#4\hJY:soc;@!&RHhI`\?aS,:*Wc:&KI`
%-%6^uj&NoW>BtTq1f9LPZgl3W`_C2]3Ykq-r'X2I(^CtE7@FI;P5>eL^T-st\p2ci;7AGTh$>+L0qnP$M'<D*+/pYbIF8$Z\dq,"
%jARH)C'20Wi?uVBeaIMtdP_834YG2o>4assV+!ekBL)d]lNT1u'<c1I&8DK.EpA6:]JjkTV#Qmj.71mL.9>MsTLe'$mgP&:`bNt$
%d0?+u\@-(gIZk_gRYS,d];20?.##_Q[_p_M@qaM=Gk(X[Aj+'Xh&"'<0`=JE!S7^f-]AuJh59YeeGuI5qh"Zkj$!)S7qB_Bb<)dL
%J9\:.Yu=bR3)*^n3L8[LV%Oi3l2Ffs8,H2\Kj\qq^[,03X`aRoENI_l:<ek6M(*kk3]'5-o_=XtA^/@\<28^3O6+&H^T0h^LDOS7
%LY66F[UUIFrn+C]DrV&EjT[n4^TIB'YS0_(9_m_Z9AlVP8aLe8\iad+eC_c`";LUC=Nf_6r'Z3cF0?[jnR`X<JM9QJ5tp",FK'pH
%QQ>JTWU?AX\#Co[*<:flTG7-bM`WsEH7*V^LB;7DP@19F/fsoTcV0Cj2OA,6h7!+D=U*a+E5&`FX]*O@E+V4@lZ'L:KF"5$)<U?0
%m0UNtW*nl^(A&"Jel8Lf<tb)"6c<@5n)4/70oO+="aQRQI;b+:E,fW+G8?HKf&^ZgZ/o,M0(*h!T<pe]HCI7eX,>m,C+3n9V+NN'
%_RiUW>2muncTT%KY:&_MLU2[:*/nU0/X3SpeJnhYW\,<W!5j.k(FQ(lc,dfB,$_rolrd'%&$.#!_%LZ,g^f=bdXP^W?3^(7kaTJ6
%i1GI21FO%bDn-)6qn+=m*0lp%+["/s3Yo<>19Pm8]nln5g'/BWdcFbA#Oj5].?FDu<;d*#q0>HEbkgMAiApCLDtCnrHA%d.]H<*q
%+aY6\]?u+6+0TJDG,`0XaHo>BZa>3R&ibp:eOT;"Dh^WMrjPng\(c3-MkZ+#5At1\UPiJG5t66d<RE3(74m=(b4lc48D,i@aQ;dK
%Sen`jcFjboLj?bdl-G<fS.tq[;F&$),+^2`FP]P8m=(DsE(\&L,,6T-j[VjeiU[lH$A?ca,L+U:OU0?#\D`Gk;Mc6bg(R3MofLHT
%QoBZFFZ@g10P;s6=`fLA.YS=%25.IlQ5M/HMcf)%3!X%Siim]f`L':'=4qAci+"hI$4:\9P)@[W34Fe.p=E)&2kt"UI1#hppG?AH
%V%b.^U^d8.+Ig!iNrY>NF1e&F.`[mJB%*q57OqRi!'umf)^15blRpsQ(/1+4<X-l:Y1$KdGb?W)HAE\_#>s0iP&!G"h2e.&F^GM!
%!0SSLJHU\7lHnf_dnB..gOMh7nktMg_F,>;7Z+^1$(\^)fT_tSHMF[RCa-?imc@uuhiG;L6qDOd5ueJ_3RCn!/)jPb4D7ld)D&*L
%[tj/4ri/<Ec#*EE7sI2&4ukhU5>hsGKZ2<X->4%r04e?Z2UY6TSE";C8@Q<ld*F\hLJ$qmU\PW&GPtp'Zta48:05*<M;cPk^KN93
%rmWM]duj=E-6,8IV$Q45k:HXWr6KlFhpm54Qfu3_NaBk=3`H'VY4[;Bk-b1up]\iiX_#7Jg964k`Yb@kQ:4fSQJF+<hr!I4[-6J4
%!-$O8mZu`uAd!@e8R]0PYe#*a2Hj`OW=1,'M#9&1aWh5cB>9%RC("l;BK*NZL^8g0YqkJ8Am#ZgDY:9=#[HM%0!=02\m4[$8nb"j
%e;"e#QOhj)^h`^ng8Gq,WO%*q7XtW9!g2j9HdnNQjc)52Ao1n,*#(_>')f^Q=/3l"%5Cs`_F`H;hg+&Q0Z"Wn)#Lp^gFDh@Vs*P#
%P;_HZa<.)gO\$<A_BP@:J1Im1!/AQ18VIs]NLHf4MTHdMj.TMWrUe@R5;/i5_h^uH.&'`P,Aa;?^;]HG&DJ;h'X\JW?_DV8-\*aC
%3-:`<=!Q<PNGJQ*rtN,]lkL-b@0t?,+u3a]Pm0,tKQe8:1K6S3mnqFnno%@^+u2Qh,mh]sPQc2)i$>^6G+$t0`V)<FAe^F(S37=3
%+#$_@1^9>N3dbeY.$6[cO]BR\$VAo7:R'Q!`?n#c(gt>(>I<Na)gN+(,#_SG)6jN>8['N=H=BMNY`4u4^F3q]j'c.-X<CeTS:=+V
%pdL$l8k5Lg?,fd:km_4jn$`:7O'kVkYTeUCCLY*[<s-QtXjV$^!/p`Fm2dQb,38?jfb?T$7<:gOd+!Z7rb=Po+MJue$m*1I<j@Hm
%e74>Q@ngBs6CZhK[E`kMSVPtb</=f#J/V&_[12dm8N!L&`*B(X]To_dLGOd!QQ)7K.`^&W)?g@m?/-5b?YYnt2gk!u"?9%4e^:iW
%c;ejAB#g0;IbL)tEC]=SN'_r;BTXj."/j//@+rN!PcRnNUAUpnG-V"G@'kb@0Y^m&;Q.qYL,B7oj86_Lk4/D)pToFK%_s)h3^n.^
%[PVpBU4[#mq^Xc)o="[H/fa&or5.7Ij%!HPJ<r(OmUqA"2brP\59geL5*S2M,%TZ<MnO`gnDIb,;Vb;d?oufV[87"ha66k6\?50s
%PHuTe_B;K+E<^H+"6(Yd*?\JL'77>eC\ghQ%]lMKf'#qr:=FT*J-*hu'`NGs1JBut#='*`feWCTh-M10VuN!/rV)fAk>J`\@MO(P
%-a[JLc-*cW@_0kR*Zt6*cWutkXr0/(!`6(AM=*=EbXJQTXc\il0TP(X_jJq^0h:Ze3HpAa%$C`0]14rj_#G'>W>jq#bGrH'c^_/T
%DG`,Kg.A!-dgPX-Q"[E,EWO:.1nD_;+&$H/Uq&s39:HYHQ^R*dpA&o?Q22aG&bW<K#uO]'OSE\A]m/;4n>RZ^AW$dWjug]kBg^HP
%iYAK]TcQfSC85JI2$rfu5j(?5!n9-;!/dFSPXO+`V<r#5JI8.Z]aE?+0!tl:%cLK'*Pok3bme&Q]'_McS6HG*)JNabKTGXp_d/q8
%:sXSIZ-a&h\8?5#5b4?gD[C1.BR0\VjfXX$Mhs;C9"l28.(hQgG=BcVh$@(&N8P4)G>O*S6VWoK55=")9a%3Mpe^"!!-LPI'd!t7
%k8!n7BFtf!*S9I2N1TLHG`p::n*g[*Mc9)d9@Qq-iuh@iUfESW0?Kr;Jn'X66j.QqO+X:idmr?;am-E.es*!eG@AiGBO3'J3p*0o
%T_fd=9?^d5o]Z'];@r*G0]>>OA^5o"CdN[@^T5eU3:I*u*3Op,OTB7d!eS<UQpm4':LEPGheR,qds,JOIEc(?V#9%a#D/$![Q83T
%k\e##&lNbbQ>GXJpDm>#r"s]:1H&frk&LXG[K!>ZfP,@2/8)V-<,^/T];YCX*L\-`X;BSFf"$^UdBPkt6P<@0Pfs!kfkD/2=Rm?%
%pXJr@=4I3R@--up0\$#7c.jkNVoAE0aWeFQ!$N?fG)B1(:@U?;5-5i3qsgA:Gu!?5NqTMG)oVX0mJgEbma]mLkg#<[?bBi0/Q>j-
%96fW')q4tJ3[)1=CC4]00)(WAq9*q*pu_1FF0dM_5Ht9AkHVQ-^"dC`WdTX+HsYpg$hBo8b0E&&bEp<6h&El"![[md?Wo.t,dMp>
%Uo:*&?O7Pp#u<Is)Z5?d]VlD,C3#Z:Ae=Y*FOT!L$V?]_h'XnpP@p5S)#HUt/,n5=3J`(s/9cC3%HbYH)eP+d>c]7*5aU+h=8A;/
%Ds^s@Sj1cf9Sb:5bn/rMPCGb#m`p]n[9pV+O/D(*0YRtgm2OH2lh1,6Ed[D%[s'XdFe[YbVOR5amDMOgo8Xp2BZ.q[r#i>pKZH`h
%dj/BV:5EaA4GN`)cAZ9!/CYr@?bDnGEP2@I%O`lrdh3$>SSr4Y/mh/K3om2X4/DVr88Y`BMl0&3CZ73]YF2Pdg>A7FSka+J]U0=-
%oCHQ(hb<]M"7L_ZFW^=`_]sX'RU;TNGhtqL>\i?L>CZ>0T,mt+Rg@ub,FIXMD`+HPj]nmiOrVMTS>hPSXfhAD*l"<"NsGRZmI>\h
%-&<WH!B70qF=13GMWa-C5;D!%XHr!qG[1WJn'deKom5$mp0+*6_Km8jn"1T$2Z^uoR.;6AK^C)HGm]G#,,b1IH2!N#n$AqliI&k,
%i5n?BFSE"`hSr:Rn8%ktT&Z,t:SP,KVn!1SD??LbQ?hi&[u8H/@H2uYY?C`:!5-;WpS#Om#5Gi07dToWTtYEU[sKoWj*=dgh&f!1
%s)9j.Se'/FaQlE=]*o]djJVM,,nLCCCV93PdbG$j0CdG*%/'2J^/Wh`)ldSTHe?@dS)%A+FZW_"kPXWmGdC10hT=BmR4iR9a!^E7
%h*]s\lqO#FCQ@Rn_C%5KX.rsEME]g6nrVc12R5nNoTBQ-c5/Y*PCC-Fooe;0pad;)T/X>U1#:uOIa.$PRUH!e1i[YbYP5T+gUu(_
%*+uIArV5^hm`p^%>hJG7roP/Kc-(N_R_u`Z[eh'$D8,JJmcM"L(>IUDoKU+h?iT<XrpK[`\f:X8Ip`6EJ,%(akPHA$s$-JDgUH#.
%p]'K=J,[oHrlZD`^]4#*^\mNgrqt)lr7=0HrUD!0nXogBO8ndKs1\N^gRnN:Vgn]4J,7?\hZ!?NrMP.__O$99r;GOQ_ghUAIeS'd
%"8T?br;~>
%AI9_PrivateDataEnd
